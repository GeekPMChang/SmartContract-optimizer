{
	"compiler": {
		"version": "0.5.10+commit.5a6ea5b1"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "_pool",
						"type": "address"
					},
					{
						"name": "_receiver",
						"type": "address"
					},
					{
						"name": "_oracle",
						"type": "address"
					},
					{
						"name": "_assetData",
						"type": "bytes"
					},
					{
						"name": "_paymentDetailsHash",
						"type": "bytes32"
					},
					{
						"name": "lockTimeS",
						"type": "uint32"
					}
				],
				"name": "create",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "feeThousandthsPercent",
				"outputs": [
					{
						"name": "",
						"type": "uint16"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "status",
				"outputs": [
					{
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newCreator",
						"type": "address"
					}
				],
				"name": "changeSwapCreator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_status",
						"type": "uint8"
					}
				],
				"name": "setStatus",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_oracle",
						"type": "address"
					}
				],
				"name": "revokeOracle",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ASSET_TYPE",
				"outputs": [
					{
						"name": "",
						"type": "uint16"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_pool",
						"type": "address"
					},
					{
						"name": "_receiver",
						"type": "address"
					},
					{
						"name": "_oracle",
						"type": "address"
					},
					{
						"name": "_assetData",
						"type": "bytes"
					},
					{
						"name": "_paymentDetailsHash",
						"type": "bytes32"
					}
				],
				"name": "getSwapStatus",
				"outputs": [
					{
						"name": "status",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_pool",
						"type": "address"
					},
					{
						"name": "_receiver",
						"type": "address"
					},
					{
						"name": "_oracle",
						"type": "address"
					},
					{
						"name": "_assetData",
						"type": "bytes"
					},
					{
						"name": "_paymentDetailsHash",
						"type": "bytes32"
					}
				],
				"name": "release",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "changeOwner",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_pool",
						"type": "address"
					},
					{
						"name": "_receiver",
						"type": "address"
					},
					{
						"name": "_oracle",
						"type": "address"
					},
					{
						"name": "_assetData",
						"type": "bytes"
					},
					{
						"name": "_paymentDetailsHash",
						"type": "bytes32"
					}
				],
				"name": "returnFunds",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "assetData",
						"type": "bytes"
					},
					{
						"name": "_to",
						"type": "address"
					}
				],
				"name": "withdrawFees",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_oracle",
						"type": "address"
					}
				],
				"name": "approveOracle",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "minFeeAmount",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "VERSION",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "swapHash",
						"type": "bytes32"
					}
				],
				"name": "Created",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "swapHash",
						"type": "bytes32"
					}
				],
				"name": "Released",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "swapHash",
						"type": "bytes32"
					}
				],
				"name": "PoolReleased",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "swapHash",
						"type": "bytes32"
					}
				],
				"name": "Returned",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "swapHash",
						"type": "bytes32"
					}
				],
				"name": "PoolReturned",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "_oldCreator",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_newCreator",
						"type": "address"
					}
				],
				"name": "SwapCreatorChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "oldStatus",
						"type": "uint8"
					},
					{
						"indexed": false,
						"name": "newStatus",
						"type": "uint8"
					}
				],
				"name": "StatusChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "oldOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnerChanged",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {}
		},
		"userdoc": {
			"methods": {
				"create(address,address,address,bytes,bytes32,uint32)": {
					"notice": "Swap creation, called by the Ramp Network. Checks swap parameters and ensures the crypto asset is locked on this contract.     * Emits a `Created` event with the swap hash."
				},
				"getSwapStatus(address,address,address,bytes,bytes32)": {
					"notice": "Given all valid swap details, returns its status. The return can be: 0: the swap details are invalid, swap doesn't exist, or was already released/returned. >1: the swap was created, and the value is a timestamp indicating end of its lock time."
				},
				"release(address,address,address,bytes,bytes32)": {
					"notice": "Swap release, which transfers the crypto asset to the receiver and removes the swap from the active swap mapping. Normally called by the swap's oracle after it confirms a matching wire transfer on pool's bank account. Can be also called by the pool, for example in case of a dispute, when the parties reach an agreement off-chain.     * Emits a `Released` or `PoolReleased` event with the swap's hash."
				},
				"returnFunds(address,address,address,bytes,bytes32)": {
					"notice": "Swap return, which transfers the crypto asset back to the pool and removes the swap from the active swap mapping. Can be called by the pool or the swap's oracle, but only if the escrow lock time expired.     * Emits a `Returned` or `PoolReturned` event with the swap's hash."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"input/RampInstantEthEscrows.sol": "RampInstantEscrows"
		},
		"evmVersion": "petersburg",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"input/RampInstantEthEscrows.sol": {
			"keccak256": "0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07",
			"urls": [
				"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e",
				"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH"
			]
		}
	},
	"version": 1
}