{
	"id": "6f2e905f1ca8f5f0f15ba8aa0740e47d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.10",
	"solcLongVersion": "0.5.10+commit.5a6ea5b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"input/NOIAVault.sol": {
				"content": "// NOIAVault Smart Contract\npragma solidity 0.5.10;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n\n/**\n * @dev Collection of functions related to the address type,\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * > It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * (.note) This call _does not revert_ if the signature is invalid, or\n     * if the signer is otherwise unable to be retrieved. In those scenarios,\n     * the zero address is returned.\n     *\n     * (.warning) `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise)\n     * be too long), and then calling `toEthSignedMessageHash` on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        // Check the signature length\n        if (signature.length != 65) {\n            return (address(0));\n        }\n\n        // Divide the signature in r, s and v variables\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the signature parameters, and the only way to get them\n        // currently is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return address(0);\n        }\n\n        if (v != 27 && v != 28) {\n            return address(0);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        return ecrecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * replicates the behavior of the\n     * [`eth_sign`](https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign)\n     * JSON-RPC method.\n     *\n     * See `recover`.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n}\n\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\n     * zero by default.\n     *\n     * This value changes when `approve` or `transferFrom` are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * > Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an `Approval` event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to `approve`. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n\n/**\n * @dev Implementation of the `IERC20` interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using `_mint`.\n * For a generic mechanism see `ERC20Mintable`.\n *\n * *For a detailed writeup see our guide [How to implement supply\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See `IERC20.approve`.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IERC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IERC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IERC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IERC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of `ERC20`;\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n     /**\n     * @dev Destoys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n}\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * > Note: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n\ninterface ITokenReceiver {\n    function tokensReceived(\n        address from,\n        address to,\n        uint256 amount\n    ) external;\n}\n\ncontract TokenRecoverable is Ownable {\n    using SafeERC20 for IERC20;\n\n    function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {\n        uint256 balance = token.balanceOf(address(this));\n        require(balance >= amount, \"Given amount is larger than current balance\");\n        token.safeTransfer(to, amount);\n    }\n}\n\ncontract NOIAToken is TokenRecoverable, ERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n    using ECDSA for bytes32;\n\n    string public constant name = \"NOIA Token\";\n    string public constant symbol = \"NOIA\";\n    uint8 public constant decimals = uint8(18); \n    uint256 public tokensToMint = 1000000000e18; // 1 000 000 000 tokens\n    address public burnAddress;\n    mapping(address => bool) public notify;\n    mapping(bytes32 => bool) private hashedTxs;\n    bool public etherlessTransferEnabled = true;\n\n    event TransferPreSigned(address indexed from, address indexed to, address indexed delegate, uint256 amount, uint256 fee);\n\n    modifier onlyEtherlessTransferEnabled {\n        require(etherlessTransferEnabled == true, \"Etherless transfer functionality disabled\");\n        _;\n    }\n\n    function register() public {\n        notify[msg.sender] = true;\n    }\n\n    function unregister() public {\n        notify[msg.sender] = false;\n    }\n\n    function enableEtherlessTransfer() public onlyOwner {\n        etherlessTransferEnabled = true;\n    }\n\n    function disableEtherlessTransfer() public onlyOwner {\n        etherlessTransferEnabled = false;\n    }\n\n    /**\n     * @dev Transfer token to a specified address\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function transfer(address to, uint256 value) public returns (bool) {\n        bool success = super.transfer(to, value);\n        if (success) {\n            _postTransfer(msg.sender, to, value);\n        }\n        return success;\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * Note that while this function emits an Approval event, this is not required as per the specification,\n     * and other compliant implementations may not emit the event.\n     * @param from address The address which you want to send tokens from\n     * @param to address The address which you want to transfer to\n     * @param value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        bool success = super.transferFrom(from, to, value);\n        if (success) {\n            _postTransfer(from, to, value);\n        }\n        return success;\n    }\n\n    function _postTransfer(address from, address to, uint256 value) internal {\n        if (to.isContract()) {\n            if (notify[to] == false) return;\n\n            ITokenReceiver(to).tokensReceived(from, to, value);\n        } else {\n            if (to == burnAddress) {\n                _burn(burnAddress, value);\n            }\n        }\n    }\n\n    function _burn(address account, uint256 value) internal {\n        require(tokensToMint == 0, \"All tokens must be minted before burning\");\n        super._burn(account, value);\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyOwner returns (bool) {\n        require(tokensToMint.sub(value) >= 0, \"Not enough tokens left\");\n        tokensToMint = tokensToMint.sub(value);\n        _mint(to, value);\n        _postTransfer(address(0), to, value);\n        return true;\n    }\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param value The amount of token to be burned.\n     */\n    function burn(uint256 value) public {\n        require(msg.sender == burnAddress, \"Only burnAddress can burn tokens\");\n        _burn(msg.sender, value);\n    }\n\n    function setBurnAddress(address _burnAddress) external onlyOwner {\n        require(balanceOf(_burnAddress) == 0, \"Burn address must have zero balance!\");\n\n        burnAddress = _burnAddress;\n    }\n\n    /** Etherless Transfer */\n    /**\n     * @notice Submit a presigned transfer\n     * @param _signature bytes The signature, issued by the owner.\n     * @param _to address The address which you want to transfer to.\n     * @param _value uint256 The amount of tokens to be transferred.\n     * @param _fee uint256 The amount of tokens paid to msg.sender, by the owner.\n     * @param _nonce uint256 Presigned transaction number. Should be unique, per user.\n     */\n    function transferPreSigned(\n        bytes memory _signature,\n        address _to,\n        uint256 _value,\n        uint256 _fee,\n        uint256 _nonce\n    )\n        public\n        onlyEtherlessTransferEnabled\n        returns (bool)\n    {\n        require(_to != address(0), \"Transfer to the zero address\");\n\n        bytes32 hashedParams = hashForSign(msg.sig, address(this), _to, _value, _fee, _nonce);\n        address from = hashedParams.toEthSignedMessageHash().recover(_signature);\n        require(from != address(0), \"Invalid signature\");\n\n        bytes32 hashedTx = keccak256(abi.encodePacked(from, hashedParams));\n        require(hashedTxs[hashedTx] == false, \"Nonce already used\");\n        hashedTxs[hashedTx] = true;\n\n        if (msg.sender == _to) {\n            _transfer(from, _to, _value.add(_fee));\n            _postTransfer(from, _to, _value.add(_fee));\n        } else {\n            _transfer(from, _to, _value);\n            _postTransfer(from, _to, _value);\n            _transfer(from, msg.sender, _fee);\n            _postTransfer(from, msg.sender, _fee);\n        }\n\n        emit TransferPreSigned(from, _to, msg.sender, _value, _fee);\n        return true;\n    }\n\n    /**\n     * @notice Hash (keccak256) of the payload used by transferPreSigned\n     * @param _token address The address of the token.\n     * @param _to address The address which you want to transfer to.\n     * @param _value uint256 The amount of tokens to be transferred.\n     * @param _fee uint256 The amount of tokens paid to msg.sender, by the owner.\n     * @param _nonce uint256 Presigned transaction number.\n     */\n    function hashForSign(\n        bytes4 _selector,\n        address _token,\n        address _to,\n        uint256 _value,\n        uint256 _fee,\n        uint256 _nonce\n    )\n        public\n        pure\n        returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(_selector, _token, _to, _value, _fee, _nonce));\n    }\n}\n\ncontract NOIAVault is ITokenReceiver {\n    using SafeERC20 for IERC20;\n\n    address public constant NOIA_TOKEN_ADDRESS = 0xfc858154C0b2c4A3323046Fb505811F110EBdA57;\n    \n    address public beneficiary;\n    uint256 public lockTill;\n\n    modifier onlyOwner() {\n        require(msg.sender == NOIAToken(NOIA_TOKEN_ADDRESS).owner(), \"Caller is not NOIA Token owner\");\n        _;\n    }\n\n    function initialize(address _beneficiary, uint256 _lockTill) public {\n        require(beneficiary == address(0), \"Vault is already initialized\");\n        require(_beneficiary != address(0), \"Locking to the zero address\");\n        require(_lockTill > now, \"Locking time must be in future\");\n\n        beneficiary = _beneficiary;\n        lockTill = _lockTill;\n        NOIAToken(NOIA_TOKEN_ADDRESS).register();\n    }\n\n    function release() public {\n        if (lockTill > now) return;\n\n        NOIAToken token = NOIAToken(NOIA_TOKEN_ADDRESS);\n        uint256 balance = token.balanceOf(address(this));\n        token.transfer(beneficiary, balance);\n    }\n\n    function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {\n        require(address(token) != NOIA_TOKEN_ADDRESS, \"Cannot recover NOIA Token\");\n        uint256 balance = token.balanceOf(address(this));\n        require(balance >= amount, \"Given amount is larger than current balance\");\n        token.safeTransfer(to, amount);\n    }\n\n    function tokensReceived(\n        address,\n        address,\n        uint256\n    ) external {\n        release();\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"input/NOIAVault.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type,",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":3626:4489  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":3626:4489  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058206cd620620d463947280d295de7281e6c6af813bcc363777d2d6349c11b09415164736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058206cd620620d463947280d295de7281e6c6af813bcc363777d2d6349c11b09415164736f6c634300050a0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH13 0xD620620D463947280D295DE728 0x1e PUSH13 0x6AF813BCC363777D2D6349C11B MULMOD COINBASE MLOAD PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "3626:863:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058206cd620620d463947280d295de7281e6c6af813bcc363777d2d6349c11b09415164736f6c634300050a0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH13 0xD620620D463947280D295DE728 0x1e PUSH13 0x6AF813BCC363777D2D6349C11B MULMOD COINBASE MLOAD PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "3626:863:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3626,
									"end": 4489,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3626,
									"end": 4489,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723058206cd620620d463947280d295de7281e6c6af813bcc363777d2d6349c11b09415164736f6c634300050a0032",
									".code": [
										{
											"begin": 3626,
											"end": 4489,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "ADDRESS"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "EQ"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "MSTORE"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "DUP1"
										},
										{
											"begin": 3626,
											"end": 4489,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type,\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"Address\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. * These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":4698:8120  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":4698:8120  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058209da1590342671f1e41af0b4f12618f8309d460fa3dd5881c63692154884e3dd464736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058209da1590342671f1e41af0b4f12618f8309d460fa3dd5881c63692154884e3dd464736f6c634300050a0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 SWAP14 LOG1 MSIZE SUB TIMESTAMP PUSH8 0x1F1E41AF0B4F1261 DUP16 DUP4 MULMOD 0xd4 PUSH1 0xFA RETURNDATASIZE 0xd5 DUP9 SHR PUSH4 0x69215488 0x4e RETURNDATASIZE 0xd4 PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "4698:3422:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058209da1590342671f1e41af0b4f12618f8309d460fa3dd5881c63692154884e3dd464736f6c634300050a0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 SWAP14 LOG1 MSIZE SUB TIMESTAMP PUSH8 0x1F1E41AF0B4F1261 DUP16 DUP4 MULMOD 0xd4 PUSH1 0xFA RETURNDATASIZE 0xd5 DUP9 SHR PUSH4 0x69215488 0x4e RETURNDATASIZE 0xd4 PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "4698:3422:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"recover(bytes32,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4698,
									"end": 8120,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4698,
									"end": 8120,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723058209da1590342671f1e41af0b4f12618f8309d460fa3dd5881c63692154884e3dd464736f6c634300050a0032",
									".code": [
										{
											"begin": 4698,
											"end": 8120,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "ADDRESS"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "EQ"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "MSTORE"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "DUP1"
										},
										{
											"begin": 4698,
											"end": 8120,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. * These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"ECDSA\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.",
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":15587:22165  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"input/NOIAVault.sol\":15587:22165  contract ERC20 is IERC20 {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":15587:22165  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"input/NOIAVault.sol\":15587:22165  contract ERC20 is IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":15869:15958  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":17410:17662  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"input/NOIAVault.sol\":17410:17662  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":16327:16480  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"input/NOIAVault.sol\":16327:16480  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_14:\n        /* \"input/NOIAVault.sol\":16873:16877  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":16889:16925  _approve(msg.sender, spender, value) */\n      tag_36\n        /* \"input/NOIAVault.sol\":16898:16908  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":16910:16917  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":16919:16924  value */\n      dup5\n        /* \"input/NOIAVault.sol\":16889:16897  _approve */\n      tag_37\n        /* \"input/NOIAVault.sol\":16889:16925  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_36:\n        /* \"input/NOIAVault.sol\":16942:16946  true */\n      0x01\n        /* \"input/NOIAVault.sol\":16935:16946  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":15869:15958  function totalSupply() public view returns (uint256) {... */\n    tag_16:\n        /* \"input/NOIAVault.sol\":15913:15920  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":15939:15951  _totalSupply */\n      sload(0x02)\n        /* \"input/NOIAVault.sol\":15932:15951  return _totalSupply */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":15869:15958  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"input/NOIAVault.sol\":17410:17662  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_19:\n        /* \"input/NOIAVault.sol\":17499:17503  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":17515:17551  _transfer(sender, recipient, amount) */\n      tag_40\n        /* \"input/NOIAVault.sol\":17525:17531  sender */\n      dup5\n        /* \"input/NOIAVault.sol\":17533:17542  recipient */\n      dup5\n        /* \"input/NOIAVault.sol\":17544:17550  amount */\n      dup5\n        /* \"input/NOIAVault.sol\":17515:17524  _transfer */\n      tag_41\n        /* \"input/NOIAVault.sol\":17515:17551  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_40:\n        /* \"input/NOIAVault.sol\":17561:17634  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_42\n        /* \"input/NOIAVault.sol\":17570:17576  sender */\n      dup5\n        /* \"input/NOIAVault.sol\":17578:17588  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":17590:17633  _allowances[sender][msg.sender].sub(amount) */\n      tag_43\n        /* \"input/NOIAVault.sol\":17626:17632  amount */\n      dup6\n        /* \"input/NOIAVault.sol\":17590:17601  _allowances */\n      0x01\n        /* \"input/NOIAVault.sol\":17590:17609  _allowances[sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":17602:17608  sender */\n      dup11\n        /* \"input/NOIAVault.sol\":17590:17609  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":17590:17621  _allowances[sender][msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":17610:17620  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":17590:17621  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":17590:17625  _allowances[sender][msg.sender].sub */\n      tag_44\n      swap1\n        /* \"input/NOIAVault.sol\":17590:17633  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"input/NOIAVault.sol\":17561:17569  _approve */\n      tag_37\n        /* \"input/NOIAVault.sol\":17561:17634  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_42:\n        /* \"input/NOIAVault.sol\":17651:17655  true */\n      0x01\n        /* \"input/NOIAVault.sol\":17644:17655  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":17410:17662  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_22:\n        /* \"input/NOIAVault.sol\":18137:18141  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":18153:18232  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_46\n        /* \"input/NOIAVault.sol\":18162:18172  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18174:18181  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":18183:18231  _allowances[msg.sender][spender].add(addedValue) */\n      tag_47\n        /* \"input/NOIAVault.sol\":18220:18230  addedValue */\n      dup6\n        /* \"input/NOIAVault.sol\":18183:18194  _allowances */\n      0x01\n        /* \"input/NOIAVault.sol\":18183:18206  _allowances[msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18195:18205  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18183:18206  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":18183:18215  _allowances[msg.sender][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18207:18214  spender */\n      dup10\n        /* \"input/NOIAVault.sol\":18183:18215  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":18183:18219  _allowances[msg.sender][spender].add */\n      tag_48\n      swap1\n        /* \"input/NOIAVault.sol\":18183:18231  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"input/NOIAVault.sol\":18153:18161  _approve */\n      tag_37\n        /* \"input/NOIAVault.sol\":18153:18232  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_46:\n        /* \"input/NOIAVault.sol\":18249:18253  true */\n      0x01\n        /* \"input/NOIAVault.sol\":18242:18253  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n    tag_25:\n        /* \"input/NOIAVault.sol\":16073:16080  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":16099:16108  _balances */\n      dup1\n        /* \"input/NOIAVault.sol\":16099:16117  _balances[account] */\n      0x00\n        /* \"input/NOIAVault.sol\":16109:16116  account */\n      dup4\n        /* \"input/NOIAVault.sol\":16099:16117  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":16092:16117  return _balances[account] */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_28:\n        /* \"input/NOIAVault.sol\":18832:18836  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":18848:18932  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_51\n        /* \"input/NOIAVault.sol\":18857:18867  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18869:18876  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":18878:18931  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_52\n        /* \"input/NOIAVault.sol\":18915:18930  subtractedValue */\n      dup6\n        /* \"input/NOIAVault.sol\":18878:18889  _allowances */\n      0x01\n        /* \"input/NOIAVault.sol\":18878:18901  _allowances[msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18890:18900  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18878:18901  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":18878:18910  _allowances[msg.sender][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18902:18909  spender */\n      dup10\n        /* \"input/NOIAVault.sol\":18878:18910  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":18878:18914  _allowances[msg.sender][spender].sub */\n      tag_44\n      swap1\n        /* \"input/NOIAVault.sol\":18878:18931  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"input/NOIAVault.sol\":18848:18856  _approve */\n      tag_37\n        /* \"input/NOIAVault.sol\":18848:18932  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_51:\n        /* \"input/NOIAVault.sol\":18949:18953  true */\n      0x01\n        /* \"input/NOIAVault.sol\":18942:18953  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":16327:16480  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"input/NOIAVault.sol\":16396:16400  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":16412:16452  _transfer(msg.sender, recipient, amount) */\n      tag_54\n        /* \"input/NOIAVault.sol\":16422:16432  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":16434:16443  recipient */\n      dup5\n        /* \"input/NOIAVault.sol\":16445:16451  amount */\n      dup5\n        /* \"input/NOIAVault.sol\":16412:16421  _transfer */\n      tag_41\n        /* \"input/NOIAVault.sol\":16412:16452  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_54:\n        /* \"input/NOIAVault.sol\":16469:16473  true */\n      0x01\n        /* \"input/NOIAVault.sol\":16462:16473  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16327:16480  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_34:\n        /* \"input/NOIAVault.sol\":16610:16617  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":16636:16647  _allowances */\n      0x01\n        /* \"input/NOIAVault.sol\":16636:16654  _allowances[owner] */\n      0x00\n        /* \"input/NOIAVault.sol\":16648:16653  owner */\n      dup5\n        /* \"input/NOIAVault.sol\":16636:16654  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":16636:16663  _allowances[owner][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":16655:16662  spender */\n      dup4\n        /* \"input/NOIAVault.sol\":16636:16663  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":16629:16663  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":21472:21801  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_37:\n        /* \"input/NOIAVault.sol\":21581:21582  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":21564:21583  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":21564:21569  owner */\n      dup4\n        /* \"input/NOIAVault.sol\":21564:21583  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":21556:21624  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"input/NOIAVault.sol\":21661:21662  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":21642:21663  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":21642:21649  spender */\n      dup3\n        /* \"input/NOIAVault.sol\":21642:21663  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":21634:21702  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"input/NOIAVault.sol\":21743:21748  value */\n      dup1\n        /* \"input/NOIAVault.sol\":21713:21724  _allowances */\n      0x01\n        /* \"input/NOIAVault.sol\":21713:21731  _allowances[owner] */\n      0x00\n        /* \"input/NOIAVault.sol\":21725:21730  owner */\n      dup6\n        /* \"input/NOIAVault.sol\":21713:21731  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":21713:21740  _allowances[owner][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":21732:21739  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":21713:21740  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":21713:21748  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":21779:21786  spender */\n      dup2\n        /* \"input/NOIAVault.sol\":21763:21794  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":21772:21777  owner */\n      dup4\n        /* \"input/NOIAVault.sol\":21763:21794  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"input/NOIAVault.sol\":21788:21793  value */\n      dup4\n        /* \"input/NOIAVault.sol\":21763:21794  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":21472:21801  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":19434:19856  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_41:\n        /* \"input/NOIAVault.sol\":19549:19550  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":19531:19551  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":19531:19537  sender */\n      dup4\n        /* \"input/NOIAVault.sol\":19531:19551  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":19523:19593  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"input/NOIAVault.sol\":19632:19633  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":19611:19634  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":19611:19620  recipient */\n      dup3\n        /* \"input/NOIAVault.sol\":19611:19634  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":19603:19674  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"input/NOIAVault.sol\":19705:19734  _balances[sender].sub(amount) */\n      tag_62\n        /* \"input/NOIAVault.sol\":19727:19733  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":19705:19714  _balances */\n      0x00\n        /* \"input/NOIAVault.sol\":19705:19722  _balances[sender] */\n      dup1\n        /* \"input/NOIAVault.sol\":19715:19721  sender */\n      dup7\n        /* \"input/NOIAVault.sol\":19705:19722  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":19705:19726  _balances[sender].sub */\n      tag_44\n      swap1\n        /* \"input/NOIAVault.sol\":19705:19734  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_62:\n        /* \"input/NOIAVault.sol\":19685:19694  _balances */\n      0x00\n        /* \"input/NOIAVault.sol\":19685:19702  _balances[sender] */\n      dup1\n        /* \"input/NOIAVault.sol\":19695:19701  sender */\n      dup6\n        /* \"input/NOIAVault.sol\":19685:19702  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":19685:19734  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":19767:19799  _balances[recipient].add(amount) */\n      tag_63\n        /* \"input/NOIAVault.sol\":19792:19798  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":19767:19776  _balances */\n      0x00\n        /* \"input/NOIAVault.sol\":19767:19787  _balances[recipient] */\n      dup1\n        /* \"input/NOIAVault.sol\":19777:19786  recipient */\n      dup6\n        /* \"input/NOIAVault.sol\":19767:19787  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":19767:19791  _balances[recipient].add */\n      tag_48\n      swap1\n        /* \"input/NOIAVault.sol\":19767:19799  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"input/NOIAVault.sol\":19744:19753  _balances */\n      0x00\n        /* \"input/NOIAVault.sol\":19744:19764  _balances[recipient] */\n      dup1\n        /* \"input/NOIAVault.sol\":19754:19763  recipient */\n      dup5\n        /* \"input/NOIAVault.sol\":19744:19764  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":19744:19799  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":19831:19840  recipient */\n      dup2\n        /* \"input/NOIAVault.sol\":19814:19849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":19823:19829  sender */\n      dup4\n        /* \"input/NOIAVault.sol\":19814:19849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"input/NOIAVault.sol\":19842:19848  amount */\n      dup4\n        /* \"input/NOIAVault.sol\":19814:19849  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":19434:19856  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":1302:1481  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"input/NOIAVault.sol\":1360:1367  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":1392:1393  a */\n      dup3\n        /* \"input/NOIAVault.sol\":1387:1388  b */\n      dup3\n        /* \"input/NOIAVault.sol\":1387:1393  b <= a */\n      gt\n      iszero\n        /* \"input/NOIAVault.sol\":1379:1428  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"input/NOIAVault.sol\":1438:1447  uint256 c */\n      0x00\n        /* \"input/NOIAVault.sol\":1454:1455  b */\n      dup3\n        /* \"input/NOIAVault.sol\":1450:1451  a */\n      dup5\n        /* \"input/NOIAVault.sol\":1450:1455  a - b */\n      sub\n        /* \"input/NOIAVault.sol\":1438:1455  uint256 c = a - b */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":1473:1474  c */\n      dup1\n        /* \"input/NOIAVault.sol\":1466:1474  return c */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":1302:1481  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":862:1038  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"input/NOIAVault.sol\":920:927  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":939:948  uint256 c */\n      dup1\n        /* \"input/NOIAVault.sol\":955:956  b */\n      dup3\n        /* \"input/NOIAVault.sol\":951:952  a */\n      dup5\n        /* \"input/NOIAVault.sol\":951:956  a + b */\n      add\n        /* \"input/NOIAVault.sol\":939:956  uint256 c = a + b */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":979:980  a */\n      dup4\n        /* \"input/NOIAVault.sol\":974:975  c */\n      dup2\n        /* \"input/NOIAVault.sol\":974:980  c >= a */\n      lt\n      iszero\n        /* \"input/NOIAVault.sol\":966:1012  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"input/NOIAVault.sol\":1030:1031  c */\n      dup1\n        /* \"input/NOIAVault.sol\":1023:1031  return c */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":862:1038  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7230582034bfae603a8ff454f452d976f92327cb1b9b80f8c803d0535bc565a65be8c78964736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610d02806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610caa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610c636022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610c856025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610c406023913960400191505060405180910390fd5b6109ef816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a82816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ba6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7230582034bfae603a8ff454f452d976f92327cb1b9b80f8c803d0535bc565a65be8c78964736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD02 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCAA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC63 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC85 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC40 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EF DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA82 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723058 KECCAK256 CALLVALUE 0xbf 0xae PUSH1 0x3A DUP16 DELEGATECALL SLOAD DELEGATECALL MSTORE 0xd9 PUSH23 0xF92327CB1B9B80F8C803D0535BC565A65BE8C78964736F PUSH13 0x634300050A0032000000000000 ",
							"sourceMap": "15587:6578:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15587:6578:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610caa6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610c636022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610c856025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610c406023913960400191505060405180910390fd5b6109ef816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a82816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bb790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610ba6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610c35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7230582034bfae603a8ff454f452d976f92327cb1b9b80f8c803d0535bc565a65be8c78964736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCAA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC63 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC85 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC40 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EF DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA82 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723058 KECCAK256 CALLVALUE 0xbf 0xae PUSH1 0x3A DUP16 DELEGATECALL SLOAD DELEGATECALL MSTORE 0xd9 PUSH23 0xF92327CB1B9B80F8C803D0535BC565A65BE8C78964736F PUSH13 0x634300050A0032000000000000 ",
							"sourceMap": "15587:6578:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15587:6578:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16808:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16808:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15869:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17410:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17410:252:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;18057:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18057:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16016:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16016:108:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18747:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18747:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16327:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16327:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16538:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16538:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16808:145;16873:4;16889:36;16898:10;16910:7;16919:5;16889:8;:36::i;:::-;16942:4;16935:11;;16808:145;;;;:::o;15869:89::-;15913:7;15939:12;;15932:19;;15869:89;:::o;17410:252::-;17499:4;17515:36;17525:6;17533:9;17544:6;17515:9;:36::i;:::-;17561:73;17570:6;17578:10;17590:43;17626:6;17590:11;:19;17602:6;17590:19;;;;;;;;;;;;;;;:31;17610:10;17590:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;17561:8;:73::i;:::-;17651:4;17644:11;;17410:252;;;;;:::o;18057:203::-;18137:4;18153:79;18162:10;18174:7;18183:48;18220:10;18183:11;:23;18195:10;18183:23;;;;;;;;;;;;;;;:32;18207:7;18183:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;18153:8;:79::i;:::-;18249:4;18242:11;;18057:203;;;;:::o;16016:108::-;16073:7;16099:9;:18;16109:7;16099:18;;;;;;;;;;;;;;;;16092:25;;16016:108;;;:::o;18747:213::-;18832:4;18848:84;18857:10;18869:7;18878:53;18915:15;18878:11;:23;18890:10;18878:23;;;;;;;;;;;;;;;:32;18902:7;18878:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;18848:8;:84::i;:::-;18949:4;18942:11;;18747:213;;;;:::o;16327:153::-;16396:4;16412:40;16422:10;16434:9;16445:6;16412:9;:40::i;:::-;16469:4;16462:11;;16327:153;;;;:::o;16538:132::-;16610:7;16636:11;:18;16648:5;16636:18;;;;;;;;;;;;;;;:27;16655:7;16636:27;;;;;;;;;;;;;;;;16629:34;;16538:132;;;;:::o;21472:329::-;21581:1;21564:19;;:5;:19;;;;21556:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21661:1;21642:21;;:7;:21;;;;21634:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21743:5;21713:11;:18;21725:5;21713:18;;;;;;;;;;;;;;;:27;21732:7;21713:27;;;;;;;;;;;;;;;:35;;;;21779:7;21763:31;;21772:5;21763:31;;;21788:5;21763:31;;;;;;;;;;;;;;;;;;21472:329;;;:::o;19434:422::-;19549:1;19531:20;;:6;:20;;;;19523:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19632:1;19611:23;;:9;:23;;;;19603:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19705:29;19727:6;19705:9;:17;19715:6;19705:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;19685:9;:17;19695:6;19685:17;;;;;;;;;;;;;;;:49;;;;19767:32;19792:6;19767:9;:20;19777:9;19767:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;19744:9;:20;19754:9;19744:20;;;;;;;;;;;;;;;:55;;;;19831:9;19814:35;;19823:6;19814:35;;;19842:6;19814:35;;;;;;;;;;;;;;;;;;19434:422;;;:::o;1302:179::-;1360:7;1392:1;1387;:6;;1379:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:9;1454:1;1450;:5;1438:17;;1473:1;1466:8;;;1302:179;;;;:::o;862:176::-;920:7;939:9;955:1;951;:5;939:17;;979:1;974;:6;;966:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:1;1023:8;;;862:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "666000",
								"executionCost": "702",
								"totalCost": "666702"
							},
							"external": {
								"allowance(address,address)": "787",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "596",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "436",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15587,
									"end": 22165,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "MSTORE"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "POP"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "DUP1"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "CODECOPY"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15587,
									"end": 22165,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7230582034bfae603a8ff454f452d976f92327cb1b9b80f8c803d0535bc565a65be8c78964736f6c634300050a0032",
									".code": [
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "MSTORE"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "POP"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "LT"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "SHR"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "GT"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMP"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPDEST"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "EQ"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPI"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "JUMPDEST"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "DUP1"
										},
										{
											"begin": 15587,
											"end": 22165,
											"name": "REVERT"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMPDEST"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "AND"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMPDEST"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "MLOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "MSTORE"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "MLOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SUB"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "RETURN"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMPDEST"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMPDEST"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "MLOAD"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP3"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP2"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "MSTORE"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "ADD"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP2"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "POP"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "POP"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "MLOAD"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP2"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SUB"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "RETURN"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "JUMPDEST"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP2"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ADD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "AND"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ADD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP3"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP2"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "AND"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ADD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP3"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP2"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ADD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP3"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP2"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "JUMPDEST"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "MLOAD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP3"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ISZERO"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ISZERO"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ISZERO"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ISZERO"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP2"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "MSTORE"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "ADD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP2"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "MLOAD"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "DUP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP2"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SUB"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP1"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "RETURN"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMPDEST"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "AND"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMPDEST"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "MLOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "MSTORE"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "MLOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SUB"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "RETURN"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMPDEST"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "AND"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP3"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMPDEST"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "MLOAD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP3"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "MSTORE"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "MLOAD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SUB"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "RETURN"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMPDEST"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "AND"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMPDEST"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "MLOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "MSTORE"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "MLOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SUB"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "RETURN"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "JUMPDEST"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ADD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "AND"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ADD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP3"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ADD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP3"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "JUMPDEST"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "MLOAD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP3"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ISZERO"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ISZERO"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ISZERO"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ISZERO"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "MSTORE"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "ADD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "MLOAD"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "DUP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SUB"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP1"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "RETURN"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMPDEST"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "AND"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "AND"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMPDEST"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "MLOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "MSTORE"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "MLOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SUB"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "RETURN"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMPDEST"
										},
										{
											"begin": 16873,
											"end": 16877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 16898,
											"end": 16908,
											"name": "CALLER"
										},
										{
											"begin": 16910,
											"end": 16917,
											"name": "DUP5"
										},
										{
											"begin": 16919,
											"end": 16924,
											"name": "DUP5"
										},
										{
											"begin": 16889,
											"end": 16897,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "JUMPDEST"
										},
										{
											"begin": 16942,
											"end": 16946,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16935,
											"end": 16946,
											"name": "SWAP1"
										},
										{
											"begin": 16935,
											"end": 16946,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMPDEST"
										},
										{
											"begin": 15913,
											"end": 15920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15939,
											"end": 15951,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15939,
											"end": 15951,
											"name": "SLOAD"
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "SWAP1"
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "POP"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "JUMPDEST"
										},
										{
											"begin": 17499,
											"end": 17503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 17525,
											"end": 17531,
											"name": "DUP5"
										},
										{
											"begin": 17533,
											"end": 17542,
											"name": "DUP5"
										},
										{
											"begin": 17544,
											"end": 17550,
											"name": "DUP5"
										},
										{
											"begin": 17515,
											"end": 17524,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "JUMPDEST"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 17570,
											"end": 17576,
											"name": "DUP5"
										},
										{
											"begin": 17578,
											"end": 17588,
											"name": "CALLER"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 17626,
											"end": 17632,
											"name": "DUP6"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17608,
											"name": "DUP11"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "KECCAK256"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17610,
											"end": 17620,
											"name": "CALLER"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "KECCAK256"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "SLOAD"
										},
										{
											"begin": 17590,
											"end": 17625,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 17590,
											"end": 17625,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "SWAP2"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "JUMPDEST"
										},
										{
											"begin": 17561,
											"end": 17569,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "JUMPDEST"
										},
										{
											"begin": 17651,
											"end": 17655,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17644,
											"end": 17655,
											"name": "SWAP1"
										},
										{
											"begin": 17644,
											"end": 17655,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP4"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP3"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMPDEST"
										},
										{
											"begin": 18137,
											"end": 18141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 18162,
											"end": 18172,
											"name": "CALLER"
										},
										{
											"begin": 18174,
											"end": 18181,
											"name": "DUP5"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 18220,
											"end": 18230,
											"name": "DUP6"
										},
										{
											"begin": 18183,
											"end": 18194,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18195,
											"end": 18205,
											"name": "CALLER"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "KECCAK256"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18207,
											"end": 18214,
											"name": "DUP10"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "KECCAK256"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "SLOAD"
										},
										{
											"begin": 18183,
											"end": 18219,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 18183,
											"end": 18219,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "SWAP2"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "JUMPDEST"
										},
										{
											"begin": 18153,
											"end": 18161,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "JUMPDEST"
										},
										{
											"begin": 18249,
											"end": 18253,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18242,
											"end": 18253,
											"name": "SWAP1"
										},
										{
											"begin": 18242,
											"end": 18253,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMPDEST"
										},
										{
											"begin": 16073,
											"end": 16080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16108,
											"name": "DUP1"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16109,
											"end": 16116,
											"name": "DUP4"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "AND"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "AND"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "DUP2"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "MSTORE"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "ADD"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "SWAP1"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "DUP2"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "MSTORE"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "ADD"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "KECCAK256"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "SLOAD"
										},
										{
											"begin": 16092,
											"end": 16117,
											"name": "SWAP1"
										},
										{
											"begin": 16092,
											"end": 16117,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMPDEST"
										},
										{
											"begin": 18832,
											"end": 18836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 18857,
											"end": 18867,
											"name": "CALLER"
										},
										{
											"begin": 18869,
											"end": 18876,
											"name": "DUP5"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 18915,
											"end": 18930,
											"name": "DUP6"
										},
										{
											"begin": 18878,
											"end": 18889,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18890,
											"end": 18900,
											"name": "CALLER"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "KECCAK256"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18902,
											"end": 18909,
											"name": "DUP10"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "KECCAK256"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "SLOAD"
										},
										{
											"begin": 18878,
											"end": 18914,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 18878,
											"end": 18914,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "SWAP2"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "JUMPDEST"
										},
										{
											"begin": 18848,
											"end": 18856,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "JUMPDEST"
										},
										{
											"begin": 18949,
											"end": 18953,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18942,
											"end": 18953,
											"name": "SWAP1"
										},
										{
											"begin": 18942,
											"end": 18953,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "JUMPDEST"
										},
										{
											"begin": 16396,
											"end": 16400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 16422,
											"end": 16432,
											"name": "CALLER"
										},
										{
											"begin": 16434,
											"end": 16443,
											"name": "DUP5"
										},
										{
											"begin": 16445,
											"end": 16451,
											"name": "DUP5"
										},
										{
											"begin": 16412,
											"end": 16421,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "JUMPDEST"
										},
										{
											"begin": 16469,
											"end": 16473,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16462,
											"end": 16473,
											"name": "SWAP1"
										},
										{
											"begin": 16462,
											"end": 16473,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP3"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMPDEST"
										},
										{
											"begin": 16610,
											"end": 16617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16647,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16648,
											"end": 16653,
											"name": "DUP5"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "SWAP1"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "KECCAK256"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16655,
											"end": 16662,
											"name": "DUP4"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "SWAP1"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "KECCAK256"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "SLOAD"
										},
										{
											"begin": 16629,
											"end": 16663,
											"name": "SWAP1"
										},
										{
											"begin": 16629,
											"end": 16663,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "JUMPDEST"
										},
										{
											"begin": 21581,
											"end": 21582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "AND"
										},
										{
											"begin": 21564,
											"end": 21569,
											"name": "DUP4"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "AND"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "EQ"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "ISZERO"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "JUMPI"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MLOAD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MSTORE"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP3"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SUB"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP3"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MSTORE"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MSTORE"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "CODECOPY"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "POP"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "POP"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MLOAD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SUB"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "REVERT"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "JUMPDEST"
										},
										{
											"begin": 21661,
											"end": 21662,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "AND"
										},
										{
											"begin": 21642,
											"end": 21649,
											"name": "DUP3"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "AND"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "EQ"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ISZERO"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "JUMPI"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MLOAD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MSTORE"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP3"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SUB"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP3"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MSTORE"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MSTORE"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "CODECOPY"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "POP"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "POP"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MLOAD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SUB"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "REVERT"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "JUMPDEST"
										},
										{
											"begin": 21743,
											"end": 21748,
											"name": "DUP1"
										},
										{
											"begin": 21713,
											"end": 21724,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21725,
											"end": 21730,
											"name": "DUP6"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "SWAP1"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "KECCAK256"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21732,
											"end": 21739,
											"name": "DUP5"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "SWAP1"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "KECCAK256"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "SWAP1"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "SSTORE"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "POP"
										},
										{
											"begin": 21779,
											"end": 21786,
											"name": "DUP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "AND"
										},
										{
											"begin": 21772,
											"end": 21777,
											"name": "DUP4"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "AND"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21788,
											"end": 21793,
											"name": "DUP4"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "MLOAD"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP1"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP3"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "MSTORE"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "ADD"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SWAP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "POP"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "POP"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "MLOAD"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP1"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SWAP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SUB"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SWAP1"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "LOG3"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "POP"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "POP"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "POP"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "JUMPDEST"
										},
										{
											"begin": 19549,
											"end": 19550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "AND"
										},
										{
											"begin": 19531,
											"end": 19537,
											"name": "DUP4"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "AND"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "EQ"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "ISZERO"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "JUMPI"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MLOAD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MSTORE"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP3"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SUB"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP3"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MSTORE"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MSTORE"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "CODECOPY"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "POP"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "POP"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MLOAD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SUB"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "REVERT"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "JUMPDEST"
										},
										{
											"begin": 19632,
											"end": 19633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19620,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "EQ"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "ISZERO"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "JUMPI"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MLOAD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MSTORE"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP3"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SUB"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP3"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MSTORE"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MSTORE"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "CODECOPY"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "POP"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "POP"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MLOAD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SUB"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "REVERT"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "JUMPDEST"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 19727,
											"end": 19733,
											"name": "DUP2"
										},
										{
											"begin": 19705,
											"end": 19714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "DUP1"
										},
										{
											"begin": 19715,
											"end": 19721,
											"name": "DUP7"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "AND"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "AND"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "DUP2"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "MSTORE"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "ADD"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "SWAP1"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "DUP2"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "MSTORE"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "ADD"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "KECCAK256"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "SLOAD"
										},
										{
											"begin": 19705,
											"end": 19726,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 19705,
											"end": 19726,
											"name": "SWAP1"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "SWAP2"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "SWAP1"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "AND"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "JUMPDEST"
										},
										{
											"begin": 19685,
											"end": 19694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "DUP1"
										},
										{
											"begin": 19695,
											"end": 19701,
											"name": "DUP6"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "AND"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "AND"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "DUP2"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "MSTORE"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "ADD"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "SWAP1"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "DUP2"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "MSTORE"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "ADD"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "KECCAK256"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "DUP2"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "SWAP1"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "SSTORE"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "POP"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "DUP2"
										},
										{
											"begin": 19767,
											"end": 19776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "DUP1"
										},
										{
											"begin": 19777,
											"end": 19786,
											"name": "DUP6"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "AND"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "AND"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "DUP2"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "MSTORE"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "ADD"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "SWAP1"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "DUP2"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "MSTORE"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "ADD"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "KECCAK256"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "SLOAD"
										},
										{
											"begin": 19767,
											"end": 19791,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 19767,
											"end": 19791,
											"name": "SWAP1"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "SWAP2"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "SWAP1"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "AND"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "JUMPDEST"
										},
										{
											"begin": 19744,
											"end": 19753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "DUP1"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP5"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "AND"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "AND"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "DUP2"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "MSTORE"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "ADD"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "SWAP1"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "DUP2"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "MSTORE"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "ADD"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "KECCAK256"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "DUP2"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "SWAP1"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "SSTORE"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "POP"
										},
										{
											"begin": 19831,
											"end": 19840,
											"name": "DUP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "AND"
										},
										{
											"begin": 19823,
											"end": 19829,
											"name": "DUP4"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "AND"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19842,
											"end": 19848,
											"name": "DUP4"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "MLOAD"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP1"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP3"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "MSTORE"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "ADD"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SWAP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "POP"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "POP"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "MLOAD"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP1"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SWAP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SUB"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SWAP1"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "LOG3"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "POP"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "POP"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "POP"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "JUMPDEST"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1393,
											"name": "DUP3"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "GT"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "ISZERO"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "JUMPI"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MLOAD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP3"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SUB"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP3"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SWAP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MLOAD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SWAP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SUB"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SWAP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "REVERT"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "JUMPDEST"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "DUP3"
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "DUP5"
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "SUB"
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "SWAP1"
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "SWAP2"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "SWAP3"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "SWAP2"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 920,
											"end": 927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP1"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP5"
										},
										{
											"begin": 951,
											"end": 956,
											"name": "ADD"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 980,
											"name": "DUP4"
										},
										{
											"begin": 974,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 974,
											"end": 980,
											"name": "LT"
										},
										{
											"begin": 974,
											"end": 980,
											"name": "ISZERO"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPI"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "REVERT"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1"
										},
										{
											"begin": 1023,
											"end": 1031,
											"name": "SWAP2"
										},
										{
											"begin": 1023,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1023,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "SWAP3"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"ERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"IERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"ITokenReceiver": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,uint256)": "29e9a3b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"ITokenReceiver\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"NOIAToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_signature",
									"type": "bytes"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								},
								{
									"name": "_fee",
									"type": "uint256"
								},
								{
									"name": "_nonce",
									"type": "uint256"
								}
							],
							"name": "transferPreSigned",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_burnAddress",
									"type": "address"
								}
							],
							"name": "setBurnAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "etherlessTransferEnabled",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "notify",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "burnAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "enableEtherlessTransfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "disableEtherlessTransfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokensToMint",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_selector",
									"type": "bytes4"
								},
								{
									"name": "_token",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								},
								{
									"name": "_fee",
									"type": "uint256"
								},
								{
									"name": "_nonce",
									"type": "uint256"
								}
							],
							"name": "hashForSign",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unregister",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "TransferPreSigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"burn(uint256)": {
								"details": "Burns a specific amount of tokens.",
								"params": {
									"value": "The amount of token to be burned."
								}
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"hashForSign(bytes4,address,address,uint256,uint256,uint256)": {
								"params": {
									"_fee": "uint256 The amount of tokens paid to msg.sender, by the owner.",
									"_nonce": "uint256 Presigned transaction number.",
									"_to": "address The address which you want to transfer to.",
									"_token": "address The address of the token.",
									"_value": "uint256 The amount of tokens to be transferred."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"mint(address,uint256)": {
								"details": "Function to mint tokens",
								"params": {
									"to": "The address that will receive the minted tokens.",
									"value": "The amount of tokens to mint."
								},
								"return": "A boolean that indicates if the operation was successful."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "Transfer token to a specified address",
								"params": {
									"to": "The address to transfer to.",
									"value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
								"params": {
									"from": "address The address which you want to send tokens from",
									"to": "address The address which you want to transfer to",
									"value": "uint256 the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferPreSigned(bytes,address,uint256,uint256,uint256)": {
								"params": {
									"_fee": "uint256 The amount of tokens paid to msg.sender, by the owner.",
									"_nonce": "uint256 Presigned transaction number. Should be unique, per user.",
									"_signature": "bytes The signature, issued by the owner.",
									"_to": "address The address which you want to transfer to.",
									"_value": "uint256 The amount of tokens to be transferred."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":24956:31204  contract NOIAToken is TokenRecoverable, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"input/NOIAVault.sol\":25272:25285  1000000000e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"input/NOIAVault.sol\":25242:25285  uint256 public tokensToMint = 1000000000e18 */\n  0x04\n  sstore\n    /* \"input/NOIAVault.sol\":25478:25482  true */\n  0x01\n    /* \"input/NOIAVault.sol\":25439:25482  bool public etherlessTransferEnabled = true */\n  0x08\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/NOIAVault.sol\":22809:22819  msg.sender */\n  caller\n    /* \"input/NOIAVault.sol\":22800:22806  _owner */\n  0x00\n  dup1\n    /* \"input/NOIAVault.sol\":22800:22819  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/NOIAVault.sol\":22867:22873  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"input/NOIAVault.sol\":22834:22874  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"input/NOIAVault.sol\":22863:22864  0 */\n  0x00\n    /* \"input/NOIAVault.sol\":22834:22874  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"input/NOIAVault.sol\":24956:31204  contract NOIAToken is TokenRecoverable, ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":24956:31204  contract NOIAToken is TokenRecoverable, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"input/NOIAVault.sol\":24956:31204  contract NOIAToken is TokenRecoverable, ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xcbb98c3f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xcbb98c3f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe79a198f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcbafee8a\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x74686fd2\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x74686fd2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8c680798\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70d5ae05\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x39509351\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x4b0e7216\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x4b0e7216\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x59c42cc4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5f3e849f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5fb9cf20\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x18160ddd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1aa3a008\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1296830d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"input/NOIAVault.sol\":25101:25143  string public constant name = \"NOIA Token\" */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_41:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_41)\n    tag_43:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/NOIAVault.sol\":25101:25143  string public constant name = \"NOIA Token\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_4:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n    tag_5:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_52:\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":15869:15958  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":25774:25843  function register() public {... */\n    tag_7:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"input/NOIAVault.sol\":26996:27249  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_8:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n        /* \"input/NOIAVault.sol\":26996:27249  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":25193:25235  uint8 public constant decimals = uint8(18) */\n    tag_9:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_64:\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":28030:28324  function mint(address to, uint256 value) public onlyOwner returns (bool) {... */\n    tag_11:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n        /* \"input/NOIAVault.sol\":28030:28324  function mint(address to, uint256 value) public onlyOwner returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":28447:28604  function burn(uint256 value) public {... */\n    tag_12:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_70:\n        /* \"input/NOIAVault.sol\":28447:28604  function burn(uint256 value) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"input/NOIAVault.sol\":28610:28806  function setBurnAddress(address _burnAddress) external onlyOwner {... */\n    tag_13:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_73:\n        /* \"input/NOIAVault.sol\":28610:28806  function setBurnAddress(address _burnAddress) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"input/NOIAVault.sol\":25439:25482  bool public etherlessTransferEnabled = true */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_78:\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"input/NOIAVault.sol\":25347:25385  mapping(address => bool) public notify */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_81:\n        /* \"input/NOIAVault.sol\":25347:25385  mapping(address => bool) public notify */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":25315:25341  address public burnAddress */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":23742:23879  function renounceOwnership() public onlyOwner {... */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"input/NOIAVault.sol\":25927:26027  function enableEtherlessTransfer() public onlyOwner {... */\n    tag_20:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"input/NOIAVault.sol\":26033:26135  function disableEtherlessTransfer() public onlyOwner {... */\n    tag_21:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      stop\n        /* \"input/NOIAVault.sol\":22957:23034  function owner() public view returns (address) {... */\n    tag_22:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":23308:23398  function isOwner() public view returns (bool) {... */\n    tag_23:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":25149:25187  string public constant symbol = \"NOIA\" */\n    tag_24:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_100:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_100)\n    tag_102:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/NOIAVault.sol\":25149:25187  string public constant symbol = \"NOIA\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_103\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_103:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_25:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_105:\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":26302:26533  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_26:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_108:\n        /* \"input/NOIAVault.sol\":26302:26533  function transfer(address to, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":25242:25285  uint256 public tokensToMint = 1000000000e18 */\n    tag_27:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":30879:31202  function hashForSign(... */\n    tag_28:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_113:\n        /* \"input/NOIAVault.sol\":30879:31202  function hashForSign(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_29:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":25849:25921  function unregister() public {... */\n    tag_30:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      stop\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_31:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_121:\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"input/NOIAVault.sol\":25101:25143  string public constant name = \"NOIA Token\" */\n    tag_40:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x4e4f494120546f6b656e00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_47:\n        /* \"input/NOIAVault.sol\":16873:16877  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":16889:16925  _approve(msg.sender, spender, value) */\n      tag_124\n        /* \"input/NOIAVault.sol\":16898:16908  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":16910:16917  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":16919:16924  value */\n      dup5\n        /* \"input/NOIAVault.sol\":16889:16897  _approve */\n      tag_125\n        /* \"input/NOIAVault.sol\":16889:16925  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_124:\n        /* \"input/NOIAVault.sol\":16942:16946  true */\n      0x01\n        /* \"input/NOIAVault.sol\":16935:16946  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16808:16953  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n    tag_53:\n        /* \"input/NOIAVault.sol\":29501:29505  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":25700:25704  true */\n      0x01\n        /* \"input/NOIAVault.sol\":25672:25704  etherlessTransferEnabled == true */\n      iszero\n      iszero\n        /* \"input/NOIAVault.sol\":25672:25696  etherlessTransferEnabled */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/NOIAVault.sol\":25672:25704  etherlessTransferEnabled == true */\n      iszero\n      iszero\n      eq\n        /* \"input/NOIAVault.sol\":25664:25750  require(etherlessTransferEnabled == true, \"Etherless transfer functionality disabled\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a432d77761e9f48572aa7afef8cc88428f6f968ffe5a0155b531c488448ba1ef\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"input/NOIAVault.sol\":29544:29545  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":29529:29546  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":29529:29532  _to */\n      dup6\n        /* \"input/NOIAVault.sol\":29529:29546  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":29521:29579  require(_to != address(0), \"Transfer to the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5472616e7366657220746f20746865207a65726f206164647265737300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"input/NOIAVault.sol\":29590:29610  bytes32 hashedParams */\n      0x00\n        /* \"input/NOIAVault.sol\":29613:29675  hashForSign(msg.sig, address(this), _to, _value, _fee, _nonce) */\n      tag_130\n        /* \"input/NOIAVault.sol\":29625:29632  msg.sig */\n      and(0xffffffff00000000000000000000000000000000000000000000000000000000, calldataload(0x00))\n        /* \"input/NOIAVault.sol\":29642:29646  this */\n      address\n        /* \"input/NOIAVault.sol\":29649:29652  _to */\n      dup9\n        /* \"input/NOIAVault.sol\":29654:29660  _value */\n      dup9\n        /* \"input/NOIAVault.sol\":29662:29666  _fee */\n      dup9\n        /* \"input/NOIAVault.sol\":29668:29674  _nonce */\n      dup9\n        /* \"input/NOIAVault.sol\":29613:29624  hashForSign */\n      tag_114\n        /* \"input/NOIAVault.sol\":29613:29675  hashForSign(msg.sig, address(this), _to, _value, _fee, _nonce) */\n      jump\t// in\n    tag_130:\n        /* \"input/NOIAVault.sol\":29590:29675  bytes32 hashedParams = hashForSign(msg.sig, address(this), _to, _value, _fee, _nonce) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":29685:29697  address from */\n      0x00\n        /* \"input/NOIAVault.sol\":29700:29757  hashedParams.toEthSignedMessageHash().recover(_signature) */\n      tag_131\n        /* \"input/NOIAVault.sol\":29746:29756  _signature */\n      dup9\n        /* \"input/NOIAVault.sol\":29700:29737  hashedParams.toEthSignedMessageHash() */\n      tag_132\n        /* \"input/NOIAVault.sol\":29700:29712  hashedParams */\n      dup5\n        /* \"input/NOIAVault.sol\":29700:29735  hashedParams.toEthSignedMessageHash */\n      tag_133\n        /* \"input/NOIAVault.sol\":29700:29737  hashedParams.toEthSignedMessageHash() */\n      jump\t// in\n    tag_132:\n        /* \"input/NOIAVault.sol\":29700:29745  hashedParams.toEthSignedMessageHash().recover */\n      tag_134\n      swap1\n        /* \"input/NOIAVault.sol\":29700:29757  hashedParams.toEthSignedMessageHash().recover(_signature) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"input/NOIAVault.sol\":29685:29757  address from = hashedParams.toEthSignedMessageHash().recover(_signature) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":29791:29792  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":29775:29793  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":29775:29779  from */\n      dup2\n        /* \"input/NOIAVault.sol\":29775:29793  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":29767:29815  require(from != address(0), \"Invalid signature\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c6964207369676e6174757265000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"input/NOIAVault.sol\":29826:29842  bytes32 hashedTx */\n      0x00\n        /* \"input/NOIAVault.sol\":29872:29876  from */\n      dup2\n        /* \"input/NOIAVault.sol\":29878:29890  hashedParams */\n      dup4\n        /* \"input/NOIAVault.sol\":29855:29891  abi.encodePacked(from, hashedParams) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/NOIAVault.sol\":29855:29891  abi.encodePacked(from, hashedParams) */\n      swap1\n      0x40\n      mstore\n        /* \"input/NOIAVault.sol\":29845:29892  keccak256(abi.encodePacked(from, hashedParams)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/NOIAVault.sol\":29826:29892  bytes32 hashedTx = keccak256(abi.encodePacked(from, hashedParams)) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":29933:29938  false */\n      0x00\n        /* \"input/NOIAVault.sol\":29910:29938  hashedTxs[hashedTx] == false */\n      iszero\n      iszero\n        /* \"input/NOIAVault.sol\":29910:29919  hashedTxs */\n      0x07\n        /* \"input/NOIAVault.sol\":29910:29929  hashedTxs[hashedTx] */\n      0x00\n        /* \"input/NOIAVault.sol\":29920:29928  hashedTx */\n      dup4\n        /* \"input/NOIAVault.sol\":29910:29929  hashedTxs[hashedTx] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/NOIAVault.sol\":29910:29938  hashedTxs[hashedTx] == false */\n      iszero\n      iszero\n      eq\n        /* \"input/NOIAVault.sol\":29902:29961  require(hashedTxs[hashedTx] == false, \"Nonce already used\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f6e636520616c726561647920757365640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"input/NOIAVault.sol\":29993:29997  true */\n      0x01\n        /* \"input/NOIAVault.sol\":29971:29980  hashedTxs */\n      0x07\n        /* \"input/NOIAVault.sol\":29971:29990  hashedTxs[hashedTx] */\n      0x00\n        /* \"input/NOIAVault.sol\":29981:29989  hashedTx */\n      dup4\n        /* \"input/NOIAVault.sol\":29971:29990  hashedTxs[hashedTx] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/NOIAVault.sol\":29971:29997  hashedTxs[hashedTx] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":30026:30029  _to */\n      dup8\n        /* \"input/NOIAVault.sol\":30012:30029  msg.sender == _to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":30012:30022  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":30012:30029  msg.sender == _to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/NOIAVault.sol\":30008:30353  if (msg.sender == _to) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"input/NOIAVault.sol\":30045:30083  _transfer(from, _to, _value.add(_fee)) */\n      tag_138\n        /* \"input/NOIAVault.sol\":30055:30059  from */\n      dup3\n        /* \"input/NOIAVault.sol\":30061:30064  _to */\n      dup10\n        /* \"input/NOIAVault.sol\":30066:30082  _value.add(_fee) */\n      tag_139\n        /* \"input/NOIAVault.sol\":30077:30081  _fee */\n      dup10\n        /* \"input/NOIAVault.sol\":30066:30072  _value */\n      dup12\n        /* \"input/NOIAVault.sol\":30066:30076  _value.add */\n      tag_140\n      swap1\n        /* \"input/NOIAVault.sol\":30066:30082  _value.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"input/NOIAVault.sol\":30045:30054  _transfer */\n      tag_141\n        /* \"input/NOIAVault.sol\":30045:30083  _transfer(from, _to, _value.add(_fee)) */\n      jump\t// in\n    tag_138:\n        /* \"input/NOIAVault.sol\":30097:30139  _postTransfer(from, _to, _value.add(_fee)) */\n      tag_142\n        /* \"input/NOIAVault.sol\":30111:30115  from */\n      dup3\n        /* \"input/NOIAVault.sol\":30117:30120  _to */\n      dup10\n        /* \"input/NOIAVault.sol\":30122:30138  _value.add(_fee) */\n      tag_143\n        /* \"input/NOIAVault.sol\":30133:30137  _fee */\n      dup10\n        /* \"input/NOIAVault.sol\":30122:30128  _value */\n      dup12\n        /* \"input/NOIAVault.sol\":30122:30132  _value.add */\n      tag_140\n      swap1\n        /* \"input/NOIAVault.sol\":30122:30138  _value.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"input/NOIAVault.sol\":30097:30110  _postTransfer */\n      tag_144\n        /* \"input/NOIAVault.sol\":30097:30139  _postTransfer(from, _to, _value.add(_fee)) */\n      jump\t// in\n    tag_142:\n        /* \"input/NOIAVault.sol\":30008:30353  if (msg.sender == _to) {... */\n      jump(tag_145)\n    tag_137:\n        /* \"input/NOIAVault.sol\":30170:30198  _transfer(from, _to, _value) */\n      tag_146\n        /* \"input/NOIAVault.sol\":30180:30184  from */\n      dup3\n        /* \"input/NOIAVault.sol\":30186:30189  _to */\n      dup10\n        /* \"input/NOIAVault.sol\":30191:30197  _value */\n      dup10\n        /* \"input/NOIAVault.sol\":30170:30179  _transfer */\n      tag_141\n        /* \"input/NOIAVault.sol\":30170:30198  _transfer(from, _to, _value) */\n      jump\t// in\n    tag_146:\n        /* \"input/NOIAVault.sol\":30212:30244  _postTransfer(from, _to, _value) */\n      tag_147\n        /* \"input/NOIAVault.sol\":30226:30230  from */\n      dup3\n        /* \"input/NOIAVault.sol\":30232:30235  _to */\n      dup10\n        /* \"input/NOIAVault.sol\":30237:30243  _value */\n      dup10\n        /* \"input/NOIAVault.sol\":30212:30225  _postTransfer */\n      tag_144\n        /* \"input/NOIAVault.sol\":30212:30244  _postTransfer(from, _to, _value) */\n      jump\t// in\n    tag_147:\n        /* \"input/NOIAVault.sol\":30258:30291  _transfer(from, msg.sender, _fee) */\n      tag_148\n        /* \"input/NOIAVault.sol\":30268:30272  from */\n      dup3\n        /* \"input/NOIAVault.sol\":30274:30284  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":30286:30290  _fee */\n      dup9\n        /* \"input/NOIAVault.sol\":30258:30267  _transfer */\n      tag_141\n        /* \"input/NOIAVault.sol\":30258:30291  _transfer(from, msg.sender, _fee) */\n      jump\t// in\n    tag_148:\n        /* \"input/NOIAVault.sol\":30305:30342  _postTransfer(from, msg.sender, _fee) */\n      tag_149\n        /* \"input/NOIAVault.sol\":30319:30323  from */\n      dup3\n        /* \"input/NOIAVault.sol\":30325:30335  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":30337:30341  _fee */\n      dup9\n        /* \"input/NOIAVault.sol\":30305:30318  _postTransfer */\n      tag_144\n        /* \"input/NOIAVault.sol\":30305:30342  _postTransfer(from, msg.sender, _fee) */\n      jump\t// in\n    tag_149:\n        /* \"input/NOIAVault.sol\":30008:30353  if (msg.sender == _to) {... */\n    tag_145:\n        /* \"input/NOIAVault.sol\":30397:30407  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":30368:30422  TransferPreSigned(from, _to, msg.sender, _value, _fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":30392:30395  _to */\n      dup9\n        /* \"input/NOIAVault.sol\":30368:30422  TransferPreSigned(from, _to, msg.sender, _value, _fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":30386:30390  from */\n      dup4\n        /* \"input/NOIAVault.sol\":30368:30422  TransferPreSigned(from, _to, msg.sender, _value, _fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xec5a73fd1f178be20c1bca1b406cbf4b5c20d833b66e582fc122fb4baa0fc2a4\n        /* \"input/NOIAVault.sol\":30409:30415  _value */\n      dup11\n        /* \"input/NOIAVault.sol\":30417:30421  _fee */\n      dup11\n        /* \"input/NOIAVault.sol\":30368:30422  TransferPreSigned(from, _to, msg.sender, _value, _fee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"input/NOIAVault.sol\":30439:30443  true */\n      0x01\n        /* \"input/NOIAVault.sol\":30432:30443  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":29275:30450  function transferPreSigned(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":15869:15958  function totalSupply() public view returns (uint256) {... */\n    tag_55:\n        /* \"input/NOIAVault.sol\":15913:15920  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":15939:15951  _totalSupply */\n      sload(0x03)\n        /* \"input/NOIAVault.sol\":15932:15951  return _totalSupply */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":15869:15958  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25774:25843  function register() public {... */\n    tag_57:\n        /* \"input/NOIAVault.sol\":25832:25836  true */\n      0x01\n        /* \"input/NOIAVault.sol\":25811:25817  notify */\n      0x06\n        /* \"input/NOIAVault.sol\":25811:25829  notify[msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":25818:25828  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":25811:25829  notify[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/NOIAVault.sol\":25811:25836  notify[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":25774:25843  function register() public {... */\n      jump\t// out\n        /* \"input/NOIAVault.sol\":26996:27249  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n    tag_60:\n        /* \"input/NOIAVault.sol\":27075:27079  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":27091:27103  bool success */\n      dup1\n        /* \"input/NOIAVault.sol\":27106:27141  super.transferFrom(from, to, value) */\n      tag_153\n        /* \"input/NOIAVault.sol\":27125:27129  from */\n      dup6\n        /* \"input/NOIAVault.sol\":27131:27133  to */\n      dup6\n        /* \"input/NOIAVault.sol\":27135:27140  value */\n      dup6\n        /* \"input/NOIAVault.sol\":27106:27124  super.transferFrom */\n      tag_154\n        /* \"input/NOIAVault.sol\":27106:27141  super.transferFrom(from, to, value) */\n      jump\t// in\n    tag_153:\n        /* \"input/NOIAVault.sol\":27091:27141  bool success = super.transferFrom(from, to, value) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":27155:27162  success */\n      dup1\n        /* \"input/NOIAVault.sol\":27151:27219  if (success) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"input/NOIAVault.sol\":27178:27208  _postTransfer(from, to, value) */\n      tag_156\n        /* \"input/NOIAVault.sol\":27192:27196  from */\n      dup6\n        /* \"input/NOIAVault.sol\":27198:27200  to */\n      dup6\n        /* \"input/NOIAVault.sol\":27202:27207  value */\n      dup6\n        /* \"input/NOIAVault.sol\":27178:27191  _postTransfer */\n      tag_144\n        /* \"input/NOIAVault.sol\":27178:27208  _postTransfer(from, to, value) */\n      jump\t// in\n    tag_156:\n        /* \"input/NOIAVault.sol\":27151:27219  if (success) {... */\n    tag_155:\n        /* \"input/NOIAVault.sol\":27235:27242  success */\n      dup1\n        /* \"input/NOIAVault.sol\":27228:27242  return success */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":26996:27249  function transferFrom(address from, address to, uint256 value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25193:25235  uint8 public constant decimals = uint8(18) */\n    tag_62:\n        /* \"input/NOIAVault.sol\":25232:25234  18 */\n      0x12\n        /* \"input/NOIAVault.sol\":25193:25235  uint8 public constant decimals = uint8(18) */\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_65:\n        /* \"input/NOIAVault.sol\":18137:18141  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":18153:18232  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_158\n        /* \"input/NOIAVault.sol\":18162:18172  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18174:18181  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":18183:18231  _allowances[msg.sender][spender].add(addedValue) */\n      tag_159\n        /* \"input/NOIAVault.sol\":18220:18230  addedValue */\n      dup6\n        /* \"input/NOIAVault.sol\":18183:18194  _allowances */\n      0x02\n        /* \"input/NOIAVault.sol\":18183:18206  _allowances[msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18195:18205  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18183:18206  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":18183:18215  _allowances[msg.sender][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18207:18214  spender */\n      dup10\n        /* \"input/NOIAVault.sol\":18183:18215  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":18183:18219  _allowances[msg.sender][spender].add */\n      tag_140\n      swap1\n        /* \"input/NOIAVault.sol\":18183:18231  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"input/NOIAVault.sol\":18153:18161  _approve */\n      tag_125\n        /* \"input/NOIAVault.sol\":18153:18232  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_158:\n        /* \"input/NOIAVault.sol\":18249:18253  true */\n      0x01\n        /* \"input/NOIAVault.sol\":18242:18253  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":18057:18260  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":28030:28324  function mint(address to, uint256 value) public onlyOwner returns (bool) {... */\n    tag_68:\n        /* \"input/NOIAVault.sol\":28097:28101  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_161\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_97\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_161:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"input/NOIAVault.sol\":28148:28149  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":28121:28144  tokensToMint.sub(value) */\n      tag_164\n        /* \"input/NOIAVault.sol\":28138:28143  value */\n      dup4\n        /* \"input/NOIAVault.sol\":28121:28133  tokensToMint */\n      sload(0x04)\n        /* \"input/NOIAVault.sol\":28121:28137  tokensToMint.sub */\n      tag_165\n      swap1\n        /* \"input/NOIAVault.sol\":28121:28144  tokensToMint.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"input/NOIAVault.sol\":28121:28149  tokensToMint.sub(value) >= 0 */\n      lt\n      iszero\n        /* \"input/NOIAVault.sol\":28113:28176  require(tokensToMint.sub(value) >= 0, \"Not enough tokens left\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7420656e6f75676820746f6b656e73206c65667400000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"input/NOIAVault.sol\":28201:28224  tokensToMint.sub(value) */\n      tag_167\n        /* \"input/NOIAVault.sol\":28218:28223  value */\n      dup3\n        /* \"input/NOIAVault.sol\":28201:28213  tokensToMint */\n      sload(0x04)\n        /* \"input/NOIAVault.sol\":28201:28217  tokensToMint.sub */\n      tag_165\n      swap1\n        /* \"input/NOIAVault.sol\":28201:28224  tokensToMint.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"input/NOIAVault.sol\":28186:28198  tokensToMint */\n      0x04\n        /* \"input/NOIAVault.sol\":28186:28224  tokensToMint = tokensToMint.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":28234:28250  _mint(to, value) */\n      tag_168\n        /* \"input/NOIAVault.sol\":28240:28242  to */\n      dup4\n        /* \"input/NOIAVault.sol\":28244:28249  value */\n      dup4\n        /* \"input/NOIAVault.sol\":28234:28239  _mint */\n      tag_169\n        /* \"input/NOIAVault.sol\":28234:28250  _mint(to, value) */\n      jump\t// in\n    tag_168:\n        /* \"input/NOIAVault.sol\":28260:28296  _postTransfer(address(0), to, value) */\n      tag_170\n        /* \"input/NOIAVault.sol\":28282:28283  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":28286:28288  to */\n      dup5\n        /* \"input/NOIAVault.sol\":28290:28295  value */\n      dup5\n        /* \"input/NOIAVault.sol\":28260:28273  _postTransfer */\n      tag_144\n        /* \"input/NOIAVault.sol\":28260:28296  _postTransfer(address(0), to, value) */\n      jump\t// in\n    tag_170:\n        /* \"input/NOIAVault.sol\":28313:28317  true */\n      0x01\n        /* \"input/NOIAVault.sol\":28306:28317  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":28030:28324  function mint(address to, uint256 value) public onlyOwner returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":28447:28604  function burn(uint256 value) public {... */\n    tag_71:\n        /* \"input/NOIAVault.sol\":28515:28526  burnAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":28501:28526  msg.sender == burnAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":28501:28511  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":28501:28526  msg.sender == burnAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/NOIAVault.sol\":28493:28563  require(msg.sender == burnAddress, \"Only burnAddress can burn tokens\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f6e6c79206275726e416464726573732063616e206275726e20746f6b656e73\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"input/NOIAVault.sol\":28573:28597  _burn(msg.sender, value) */\n      tag_173\n        /* \"input/NOIAVault.sol\":28579:28589  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":28591:28596  value */\n      dup3\n        /* \"input/NOIAVault.sol\":28573:28578  _burn */\n      tag_174\n        /* \"input/NOIAVault.sol\":28573:28597  _burn(msg.sender, value) */\n      jump\t// in\n    tag_173:\n        /* \"input/NOIAVault.sol\":28447:28604  function burn(uint256 value) public {... */\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":28610:28806  function setBurnAddress(address _burnAddress) external onlyOwner {... */\n    tag_74:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_176\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_97\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_176:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"input/NOIAVault.sol\":28720:28721  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":28693:28716  balanceOf(_burnAddress) */\n      tag_179\n        /* \"input/NOIAVault.sol\":28703:28715  _burnAddress */\n      dup3\n        /* \"input/NOIAVault.sol\":28693:28702  balanceOf */\n      tag_85\n        /* \"input/NOIAVault.sol\":28693:28716  balanceOf(_burnAddress) */\n      jump\t// in\n    tag_179:\n        /* \"input/NOIAVault.sol\":28693:28721  balanceOf(_burnAddress) == 0 */\n      eq\n        /* \"input/NOIAVault.sol\":28685:28762  require(balanceOf(_burnAddress) == 0, \"Burn address must have zero balance!\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_404f292e4068cdcd4d7edf853a549d89b3798ce34c65eaf7dcf5a34f469bbef7\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"input/NOIAVault.sol\":28787:28799  _burnAddress */\n      dup1\n        /* \"input/NOIAVault.sol\":28773:28784  burnAddress */\n      0x05\n      0x00\n        /* \"input/NOIAVault.sol\":28773:28799  burnAddress = _burnAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":28610:28806  function setBurnAddress(address _burnAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25439:25482  bool public etherlessTransferEnabled = true */\n    tag_76:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n    tag_79:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_182\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_97\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_182:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"input/NOIAVault.sol\":24774:24789  uint256 balance */\n      0x00\n        /* \"input/NOIAVault.sol\":24792:24797  token */\n      dup4\n        /* \"input/NOIAVault.sol\":24792:24807  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"input/NOIAVault.sol\":24816:24820  this */\n      address\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_185\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_185:\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_186\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_186:\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_187\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_187:\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":24774:24822  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":24851:24857  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":24840:24847  balance */\n      dup2\n        /* \"input/NOIAVault.sol\":24840:24857  balance >= amount */\n      lt\n      iszero\n        /* \"input/NOIAVault.sol\":24832:24905  require(balance >= amount, \"Given amount is larger than current balance\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"input/NOIAVault.sol\":24915:24945  token.safeTransfer(to, amount) */\n      tag_189\n        /* \"input/NOIAVault.sol\":24934:24936  to */\n      dup4\n        /* \"input/NOIAVault.sol\":24938:24944  amount */\n      dup4\n        /* \"input/NOIAVault.sol\":24915:24920  token */\n      dup7\n        /* \"input/NOIAVault.sol\":24915:24933  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_190\n      swap1\n        /* \"input/NOIAVault.sol\":24915:24945  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"input/NOIAVault.sol\":23217:23218  _ */\n      pop\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25347:25385  mapping(address => bool) public notify */\n    tag_82:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n    tag_85:\n        /* \"input/NOIAVault.sol\":16073:16080  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":16099:16108  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":16099:16117  _balances[account] */\n      0x00\n        /* \"input/NOIAVault.sol\":16109:16116  account */\n      dup4\n        /* \"input/NOIAVault.sol\":16099:16117  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":16092:16117  return _balances[account] */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16016:16124  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25315:25341  address public burnAddress */\n    tag_87:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":23742:23879  function renounceOwnership() public onlyOwner {... */\n    tag_89:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_193\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_97\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_193:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"input/NOIAVault.sol\":23840:23841  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":23803:23843  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23824:23830  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23803:23843  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":23870:23871  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":23853:23859  _owner */\n      dup1\n      0x00\n        /* \"input/NOIAVault.sol\":23853:23872  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":23742:23879  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25927:26027  function enableEtherlessTransfer() public onlyOwner {... */\n    tag_91:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_197\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_97\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_197:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"input/NOIAVault.sol\":26016:26020  true */\n      0x01\n        /* \"input/NOIAVault.sol\":25989:26013  etherlessTransferEnabled */\n      0x08\n      0x00\n        /* \"input/NOIAVault.sol\":25989:26020  etherlessTransferEnabled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":25927:26027  function enableEtherlessTransfer() public onlyOwner {... */\n      jump\t// out\n        /* \"input/NOIAVault.sol\":26033:26135  function disableEtherlessTransfer() public onlyOwner {... */\n    tag_93:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_201\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_97\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_201:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"input/NOIAVault.sol\":26123:26128  false */\n      0x00\n        /* \"input/NOIAVault.sol\":26096:26120  etherlessTransferEnabled */\n      0x08\n      0x00\n        /* \"input/NOIAVault.sol\":26096:26128  etherlessTransferEnabled = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":26033:26135  function disableEtherlessTransfer() public onlyOwner {... */\n      jump\t// out\n        /* \"input/NOIAVault.sol\":22957:23034  function owner() public view returns (address) {... */\n    tag_95:\n        /* \"input/NOIAVault.sol\":22995:23002  address */\n      0x00\n        /* \"input/NOIAVault.sol\":23021:23027  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23014:23027  return _owner */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":22957:23034  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"input/NOIAVault.sol\":23308:23398  function isOwner() public view returns (bool) {... */\n    tag_97:\n        /* \"input/NOIAVault.sol\":23348:23352  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":23385:23391  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23371:23391  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23371:23381  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":23371:23391  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/NOIAVault.sol\":23364:23391  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":23308:23398  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25149:25187  string public constant symbol = \"NOIA\" */\n    tag_99:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x4e4f494100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_106:\n        /* \"input/NOIAVault.sol\":18832:18836  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":18848:18932  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_207\n        /* \"input/NOIAVault.sol\":18857:18867  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18869:18876  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":18878:18931  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_208\n        /* \"input/NOIAVault.sol\":18915:18930  subtractedValue */\n      dup6\n        /* \"input/NOIAVault.sol\":18878:18889  _allowances */\n      0x02\n        /* \"input/NOIAVault.sol\":18878:18901  _allowances[msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18890:18900  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":18878:18901  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":18878:18910  _allowances[msg.sender][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":18902:18909  spender */\n      dup10\n        /* \"input/NOIAVault.sol\":18878:18910  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":18878:18914  _allowances[msg.sender][spender].sub */\n      tag_165\n      swap1\n        /* \"input/NOIAVault.sol\":18878:18931  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"input/NOIAVault.sol\":18848:18856  _approve */\n      tag_125\n        /* \"input/NOIAVault.sol\":18848:18932  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_207:\n        /* \"input/NOIAVault.sol\":18949:18953  true */\n      0x01\n        /* \"input/NOIAVault.sol\":18942:18953  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":18747:18960  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":26302:26533  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_109:\n        /* \"input/NOIAVault.sol\":26363:26367  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":26379:26391  bool success */\n      dup1\n        /* \"input/NOIAVault.sol\":26394:26419  super.transfer(to, value) */\n      tag_210\n        /* \"input/NOIAVault.sol\":26409:26411  to */\n      dup5\n        /* \"input/NOIAVault.sol\":26413:26418  value */\n      dup5\n        /* \"input/NOIAVault.sol\":26394:26408  super.transfer */\n      tag_211\n        /* \"input/NOIAVault.sol\":26394:26419  super.transfer(to, value) */\n      jump\t// in\n    tag_210:\n        /* \"input/NOIAVault.sol\":26379:26419  bool success = super.transfer(to, value) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":26433:26440  success */\n      dup1\n        /* \"input/NOIAVault.sol\":26429:26503  if (success) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"input/NOIAVault.sol\":26456:26492  _postTransfer(msg.sender, to, value) */\n      tag_213\n        /* \"input/NOIAVault.sol\":26470:26480  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":26482:26484  to */\n      dup6\n        /* \"input/NOIAVault.sol\":26486:26491  value */\n      dup6\n        /* \"input/NOIAVault.sol\":26456:26469  _postTransfer */\n      tag_144\n        /* \"input/NOIAVault.sol\":26456:26492  _postTransfer(msg.sender, to, value) */\n      jump\t// in\n    tag_213:\n        /* \"input/NOIAVault.sol\":26429:26503  if (success) {... */\n    tag_212:\n        /* \"input/NOIAVault.sol\":26519:26526  success */\n      dup1\n        /* \"input/NOIAVault.sol\":26512:26526  return success */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":26302:26533  function transfer(address to, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25242:25285  uint256 public tokensToMint = 1000000000e18 */\n    tag_111:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":30879:31202  function hashForSign(... */\n    tag_114:\n        /* \"input/NOIAVault.sol\":31092:31099  bytes32 */\n      0x00\n        /* \"input/NOIAVault.sol\":31149:31158  _selector */\n      dup7\n        /* \"input/NOIAVault.sol\":31160:31166  _token */\n      dup7\n        /* \"input/NOIAVault.sol\":31168:31171  _to */\n      dup7\n        /* \"input/NOIAVault.sol\":31173:31179  _value */\n      dup7\n        /* \"input/NOIAVault.sol\":31181:31185  _fee */\n      dup7\n        /* \"input/NOIAVault.sol\":31187:31193  _nonce */\n      dup7\n        /* \"input/NOIAVault.sol\":31132:31194  abi.encodePacked(_selector, _token, _to, _value, _fee, _nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x04\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/NOIAVault.sol\":31132:31194  abi.encodePacked(_selector, _token, _to, _value, _fee, _nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"input/NOIAVault.sol\":31122:31195  keccak256(abi.encodePacked(_selector, _token, _to, _value, _fee, _nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/NOIAVault.sol\":31115:31195  return keccak256(abi.encodePacked(_selector, _token, _to, _value, _fee, _nonce)) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":30879:31202  function hashForSign(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_117:\n        /* \"input/NOIAVault.sol\":16610:16617  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":16636:16647  _allowances */\n      0x02\n        /* \"input/NOIAVault.sol\":16636:16654  _allowances[owner] */\n      0x00\n        /* \"input/NOIAVault.sol\":16648:16653  owner */\n      dup5\n        /* \"input/NOIAVault.sol\":16636:16654  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":16636:16663  _allowances[owner][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":16655:16662  spender */\n      dup4\n        /* \"input/NOIAVault.sol\":16636:16663  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":16629:16663  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16538:16670  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":25849:25921  function unregister() public {... */\n    tag_119:\n        /* \"input/NOIAVault.sol\":25909:25914  false */\n      0x00\n        /* \"input/NOIAVault.sol\":25888:25894  notify */\n      0x06\n        /* \"input/NOIAVault.sol\":25888:25906  notify[msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":25895:25905  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":25888:25906  notify[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/NOIAVault.sol\":25888:25914  notify[msg.sender] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":25849:25921  function unregister() public {... */\n      jump\t// out\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_122:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_218\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_97\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_218:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"input/NOIAVault.sol\":24100:24128  _transferOwnership(newOwner) */\n      tag_221\n        /* \"input/NOIAVault.sol\":24119:24127  newOwner */\n      dup2\n        /* \"input/NOIAVault.sol\":24100:24118  _transferOwnership */\n      tag_222\n        /* \"input/NOIAVault.sol\":24100:24128  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_221:\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":21472:21801  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_125:\n        /* \"input/NOIAVault.sol\":21581:21582  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":21564:21583  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":21564:21569  owner */\n      dup4\n        /* \"input/NOIAVault.sol\":21564:21583  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":21556:21624  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"input/NOIAVault.sol\":21661:21662  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":21642:21663  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":21642:21649  spender */\n      dup3\n        /* \"input/NOIAVault.sol\":21642:21663  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":21634:21702  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"input/NOIAVault.sol\":21743:21748  value */\n      dup1\n        /* \"input/NOIAVault.sol\":21713:21724  _allowances */\n      0x02\n        /* \"input/NOIAVault.sol\":21713:21731  _allowances[owner] */\n      0x00\n        /* \"input/NOIAVault.sol\":21725:21730  owner */\n      dup6\n        /* \"input/NOIAVault.sol\":21713:21731  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":21713:21740  _allowances[owner][spender] */\n      0x00\n        /* \"input/NOIAVault.sol\":21732:21739  spender */\n      dup5\n        /* \"input/NOIAVault.sol\":21713:21740  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":21713:21748  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":21779:21786  spender */\n      dup2\n        /* \"input/NOIAVault.sol\":21763:21794  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":21772:21777  owner */\n      dup4\n        /* \"input/NOIAVault.sol\":21763:21794  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"input/NOIAVault.sol\":21788:21793  value */\n      dup4\n        /* \"input/NOIAVault.sol\":21763:21794  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":21472:21801  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":7853:8118  function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {... */\n    tag_133:\n        /* \"input/NOIAVault.sol\":7922:7929  bytes32 */\n      0x00\n        /* \"input/NOIAVault.sol\":8105:8109  hash */\n      dup2\n        /* \"input/NOIAVault.sol\":8052:8110  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n      dup2\n      mstore\n      pop\n      0x1c\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/NOIAVault.sol\":8052:8110  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      swap1\n      0x40\n      mstore\n        /* \"input/NOIAVault.sol\":8042:8111  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/NOIAVault.sol\":8035:8111  return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":7853:8118  function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":5696:7587  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_134:\n        /* \"input/NOIAVault.sol\":5774:5781  address */\n      0x00\n        /* \"input/NOIAVault.sol\":5855:5857  65 */\n      0x41\n        /* \"input/NOIAVault.sol\":5835:5844  signature */\n      dup3\n        /* \"input/NOIAVault.sol\":5835:5851  signature.length */\n      mload\n        /* \"input/NOIAVault.sol\":5835:5857  signature.length != 65 */\n      eq\n        /* \"input/NOIAVault.sol\":5831:5903  if (signature.length != 65) {... */\n      tag_228\n      jumpi\n        /* \"input/NOIAVault.sol\":5889:5890  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":5873:5892  return (address(0)) */\n      swap1\n      pop\n      jump(tag_227)\n        /* \"input/NOIAVault.sol\":5831:5903  if (signature.length != 65) {... */\n    tag_228:\n        /* \"input/NOIAVault.sol\":5969:5978  bytes32 r */\n      0x00\n        /* \"input/NOIAVault.sol\":5988:5997  bytes32 s */\n      dup1\n        /* \"input/NOIAVault.sol\":6007:6014  uint8 v */\n      0x00\n        /* \"input/NOIAVault.sol\":6253:6257  0x20 */\n      0x20\n        /* \"input/NOIAVault.sol\":6242:6251  signature */\n      dup6\n        /* \"input/NOIAVault.sol\":6238:6258  add(signature, 0x20) */\n      add\n        /* \"input/NOIAVault.sol\":6232:6259  mload(add(signature, 0x20)) */\n      mload\n        /* \"input/NOIAVault.sol\":6227:6259  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"input/NOIAVault.sol\":6298:6302  0x40 */\n      0x40\n        /* \"input/NOIAVault.sol\":6287:6296  signature */\n      dup6\n        /* \"input/NOIAVault.sol\":6283:6303  add(signature, 0x40) */\n      add\n        /* \"input/NOIAVault.sol\":6277:6304  mload(add(signature, 0x40)) */\n      mload\n        /* \"input/NOIAVault.sol\":6272:6304  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"input/NOIAVault.sol\":6351:6355  0x60 */\n      0x60\n        /* \"input/NOIAVault.sol\":6340:6349  signature */\n      dup6\n        /* \"input/NOIAVault.sol\":6336:6356  add(signature, 0x60) */\n      add\n        /* \"input/NOIAVault.sol\":6330:6357  mload(add(signature, 0x60)) */\n      mload\n        /* \"input/NOIAVault.sol\":6327:6328  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":6322:6358  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"input/NOIAVault.sol\":6317:6358  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":7269:7335  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"input/NOIAVault.sol\":7264:7265  s */\n      dup3\n        /* \"input/NOIAVault.sol\":7256:7266  uint256(s) */\n      0x00\n      shr\n        /* \"input/NOIAVault.sol\":7256:7335  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"input/NOIAVault.sol\":7252:7379  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"input/NOIAVault.sol\":7366:7367  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":7351:7368  return address(0) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_227)\n        /* \"input/NOIAVault.sol\":7252:7379  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_229:\n        /* \"input/NOIAVault.sol\":7398:7400  27 */\n      0x1b\n        /* \"input/NOIAVault.sol\":7393:7394  v */\n      dup2\n        /* \"input/NOIAVault.sol\":7393:7400  v != 27 */\n      0xff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":7393:7411  v != 27 && v != 28 */\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n        /* \"input/NOIAVault.sol\":7409:7411  28 */\n      0x1c\n        /* \"input/NOIAVault.sol\":7404:7405  v */\n      dup2\n        /* \"input/NOIAVault.sol\":7404:7411  v != 28 */\n      0xff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":7393:7411  v != 27 && v != 28 */\n    tag_230:\n        /* \"input/NOIAVault.sol\":7389:7455  if (v != 27 && v != 28) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"input/NOIAVault.sol\":7442:7443  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":7427:7444  return address(0) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_227)\n        /* \"input/NOIAVault.sol\":7389:7455  if (v != 27 && v != 28) {... */\n    tag_231:\n        /* \"input/NOIAVault.sol\":7556:7580  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"input/NOIAVault.sol\":7566:7570  hash */\n      dup7\n        /* \"input/NOIAVault.sol\":7572:7573  v */\n      dup3\n        /* \"input/NOIAVault.sol\":7575:7576  r */\n      dup6\n        /* \"input/NOIAVault.sol\":7578:7579  s */\n      dup6\n        /* \"input/NOIAVault.sol\":7556:7580  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_232\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_232:\n        /* \"input/NOIAVault.sol\":7556:7580  ecrecover(hash, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"input/NOIAVault.sol\":7549:7580  return ecrecover(hash, v, r, s) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":5696:7587  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_227:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":862:1038  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"input/NOIAVault.sol\":920:927  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":939:948  uint256 c */\n      dup1\n        /* \"input/NOIAVault.sol\":955:956  b */\n      dup3\n        /* \"input/NOIAVault.sol\":951:952  a */\n      dup5\n        /* \"input/NOIAVault.sol\":951:956  a + b */\n      add\n        /* \"input/NOIAVault.sol\":939:956  uint256 c = a + b */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":979:980  a */\n      dup4\n        /* \"input/NOIAVault.sol\":974:975  c */\n      dup2\n        /* \"input/NOIAVault.sol\":974:980  c >= a */\n      lt\n      iszero\n        /* \"input/NOIAVault.sol\":966:1012  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"input/NOIAVault.sol\":1030:1031  c */\n      dup1\n        /* \"input/NOIAVault.sol\":1023:1031  return c */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":862:1038  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":19434:19856  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_141:\n        /* \"input/NOIAVault.sol\":19549:19550  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":19531:19551  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":19531:19537  sender */\n      dup4\n        /* \"input/NOIAVault.sol\":19531:19551  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":19523:19593  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"input/NOIAVault.sol\":19632:19633  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":19611:19634  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":19611:19620  recipient */\n      dup3\n        /* \"input/NOIAVault.sol\":19611:19634  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":19603:19674  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"input/NOIAVault.sol\":19705:19734  _balances[sender].sub(amount) */\n      tag_238\n        /* \"input/NOIAVault.sol\":19727:19733  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":19705:19714  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":19705:19722  _balances[sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":19715:19721  sender */\n      dup7\n        /* \"input/NOIAVault.sol\":19705:19722  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":19705:19726  _balances[sender].sub */\n      tag_165\n      swap1\n        /* \"input/NOIAVault.sol\":19705:19734  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"input/NOIAVault.sol\":19685:19694  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":19685:19702  _balances[sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":19695:19701  sender */\n      dup6\n        /* \"input/NOIAVault.sol\":19685:19702  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":19685:19734  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":19767:19799  _balances[recipient].add(amount) */\n      tag_239\n        /* \"input/NOIAVault.sol\":19792:19798  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":19767:19776  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":19767:19787  _balances[recipient] */\n      0x00\n        /* \"input/NOIAVault.sol\":19777:19786  recipient */\n      dup6\n        /* \"input/NOIAVault.sol\":19767:19787  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":19767:19791  _balances[recipient].add */\n      tag_140\n      swap1\n        /* \"input/NOIAVault.sol\":19767:19799  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"input/NOIAVault.sol\":19744:19753  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":19744:19764  _balances[recipient] */\n      0x00\n        /* \"input/NOIAVault.sol\":19754:19763  recipient */\n      dup5\n        /* \"input/NOIAVault.sol\":19744:19764  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":19744:19799  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":19831:19840  recipient */\n      dup2\n        /* \"input/NOIAVault.sol\":19814:19849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":19823:19829  sender */\n      dup4\n        /* \"input/NOIAVault.sol\":19814:19849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"input/NOIAVault.sol\":19842:19848  amount */\n      dup4\n        /* \"input/NOIAVault.sol\":19814:19849  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":19434:19856  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":27255:27597  function _postTransfer(address from, address to, uint256 value) internal {... */\n    tag_144:\n        /* \"input/NOIAVault.sol\":27342:27357  to.isContract() */\n      tag_241\n        /* \"input/NOIAVault.sol\":27342:27344  to */\n      dup3\n        /* \"input/NOIAVault.sol\":27342:27355  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_242\n        /* \"input/NOIAVault.sol\":27342:27357  to.isContract() */\n      jump\t// in\n    tag_241:\n        /* \"input/NOIAVault.sol\":27338:27591  if (to.isContract()) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"input/NOIAVault.sol\":27391:27396  false */\n      0x00\n        /* \"input/NOIAVault.sol\":27377:27396  notify[to] == false */\n      iszero\n      iszero\n        /* \"input/NOIAVault.sol\":27377:27383  notify */\n      0x06\n        /* \"input/NOIAVault.sol\":27377:27387  notify[to] */\n      0x00\n        /* \"input/NOIAVault.sol\":27384:27386  to */\n      dup5\n        /* \"input/NOIAVault.sol\":27377:27387  notify[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/NOIAVault.sol\":27377:27396  notify[to] == false */\n      iszero\n      iszero\n      eq\n        /* \"input/NOIAVault.sol\":27373:27405  if (notify[to] == false) return; */\n      iszero\n      tag_244\n      jumpi\n        /* \"input/NOIAVault.sol\":27398:27405  return; */\n      jump(tag_240)\n        /* \"input/NOIAVault.sol\":27373:27405  if (notify[to] == false) return; */\n    tag_244:\n        /* \"input/NOIAVault.sol\":27434:27436  to */\n      dup2\n        /* \"input/NOIAVault.sol\":27419:27452  ITokenReceiver(to).tokensReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29e9a3b9\n        /* \"input/NOIAVault.sol\":27453:27457  from */\n      dup5\n        /* \"input/NOIAVault.sol\":27459:27461  to */\n      dup5\n        /* \"input/NOIAVault.sol\":27463:27468  value */\n      dup5\n        /* \"input/NOIAVault.sol\":27419:27469  ITokenReceiver(to).tokensReceived(from, to, value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_245\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_245:\n        /* \"input/NOIAVault.sol\":27419:27469  ITokenReceiver(to).tokensReceived(from, to, value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_246\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_246:\n        /* \"input/NOIAVault.sol\":27419:27469  ITokenReceiver(to).tokensReceived(from, to, value) */\n      pop\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":27338:27591  if (to.isContract()) {... */\n      jump(tag_247)\n    tag_243:\n        /* \"input/NOIAVault.sol\":27510:27521  burnAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":27504:27521  to == burnAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":27504:27506  to */\n      dup3\n        /* \"input/NOIAVault.sol\":27504:27521  to == burnAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/NOIAVault.sol\":27500:27581  if (to == burnAddress) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"input/NOIAVault.sol\":27541:27566  _burn(burnAddress, value) */\n      tag_249\n        /* \"input/NOIAVault.sol\":27547:27558  burnAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":27560:27565  value */\n      dup3\n        /* \"input/NOIAVault.sol\":27541:27546  _burn */\n      tag_174\n        /* \"input/NOIAVault.sol\":27541:27566  _burn(burnAddress, value) */\n      jump\t// in\n    tag_249:\n        /* \"input/NOIAVault.sol\":27500:27581  if (to == burnAddress) {... */\n    tag_248:\n        /* \"input/NOIAVault.sol\":27338:27591  if (to.isContract()) {... */\n    tag_247:\n        /* \"input/NOIAVault.sol\":27255:27597  function _postTransfer(address from, address to, uint256 value) internal {... */\n    tag_240:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":17410:17662  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_154:\n        /* \"input/NOIAVault.sol\":17499:17503  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":17515:17551  _transfer(sender, recipient, amount) */\n      tag_251\n        /* \"input/NOIAVault.sol\":17525:17531  sender */\n      dup5\n        /* \"input/NOIAVault.sol\":17533:17542  recipient */\n      dup5\n        /* \"input/NOIAVault.sol\":17544:17550  amount */\n      dup5\n        /* \"input/NOIAVault.sol\":17515:17524  _transfer */\n      tag_141\n        /* \"input/NOIAVault.sol\":17515:17551  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_251:\n        /* \"input/NOIAVault.sol\":17561:17634  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_252\n        /* \"input/NOIAVault.sol\":17570:17576  sender */\n      dup5\n        /* \"input/NOIAVault.sol\":17578:17588  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":17590:17633  _allowances[sender][msg.sender].sub(amount) */\n      tag_253\n        /* \"input/NOIAVault.sol\":17626:17632  amount */\n      dup6\n        /* \"input/NOIAVault.sol\":17590:17601  _allowances */\n      0x02\n        /* \"input/NOIAVault.sol\":17590:17609  _allowances[sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":17602:17608  sender */\n      dup11\n        /* \"input/NOIAVault.sol\":17590:17609  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":17590:17621  _allowances[sender][msg.sender] */\n      0x00\n        /* \"input/NOIAVault.sol\":17610:17620  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":17590:17621  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":17590:17625  _allowances[sender][msg.sender].sub */\n      tag_165\n      swap1\n        /* \"input/NOIAVault.sol\":17590:17633  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"input/NOIAVault.sol\":17561:17569  _approve */\n      tag_125\n        /* \"input/NOIAVault.sol\":17561:17634  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_252:\n        /* \"input/NOIAVault.sol\":17651:17655  true */\n      0x01\n        /* \"input/NOIAVault.sol\":17644:17655  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":17410:17662  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":1302:1481  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_165:\n        /* \"input/NOIAVault.sol\":1360:1367  uint256 */\n      0x00\n        /* \"input/NOIAVault.sol\":1392:1393  a */\n      dup3\n        /* \"input/NOIAVault.sol\":1387:1388  b */\n      dup3\n        /* \"input/NOIAVault.sol\":1387:1393  b <= a */\n      gt\n      iszero\n        /* \"input/NOIAVault.sol\":1379:1428  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"input/NOIAVault.sol\":1438:1447  uint256 c */\n      0x00\n        /* \"input/NOIAVault.sol\":1454:1455  b */\n      dup3\n        /* \"input/NOIAVault.sol\":1450:1451  a */\n      dup5\n        /* \"input/NOIAVault.sol\":1450:1455  a - b */\n      sub\n        /* \"input/NOIAVault.sol\":1438:1455  uint256 c = a - b */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":1473:1474  c */\n      dup1\n        /* \"input/NOIAVault.sol\":1466:1474  return c */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":1302:1481  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":20126:20428  function _mint(address account, uint256 amount) internal {... */\n    tag_169:\n        /* \"input/NOIAVault.sol\":20220:20221  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":20201:20222  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":20201:20208  account */\n      dup3\n        /* \"input/NOIAVault.sol\":20201:20222  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":20193:20258  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"input/NOIAVault.sol\":20284:20308  _totalSupply.add(amount) */\n      tag_258\n        /* \"input/NOIAVault.sol\":20301:20307  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":20284:20296  _totalSupply */\n      sload(0x03)\n        /* \"input/NOIAVault.sol\":20284:20300  _totalSupply.add */\n      tag_140\n      swap1\n        /* \"input/NOIAVault.sol\":20284:20308  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"input/NOIAVault.sol\":20269:20281  _totalSupply */\n      0x03\n        /* \"input/NOIAVault.sol\":20269:20308  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":20339:20369  _balances[account].add(amount) */\n      tag_259\n        /* \"input/NOIAVault.sol\":20362:20368  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":20339:20348  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":20339:20357  _balances[account] */\n      0x00\n        /* \"input/NOIAVault.sol\":20349:20356  account */\n      dup6\n        /* \"input/NOIAVault.sol\":20339:20357  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":20339:20361  _balances[account].add */\n      tag_140\n      swap1\n        /* \"input/NOIAVault.sol\":20339:20369  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"input/NOIAVault.sol\":20318:20327  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":20318:20336  _balances[account] */\n      0x00\n        /* \"input/NOIAVault.sol\":20328:20335  account */\n      dup5\n        /* \"input/NOIAVault.sol\":20318:20336  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":20318:20369  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":20405:20412  account */\n      dup2\n        /* \"input/NOIAVault.sol\":20384:20421  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":20401:20402  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":20384:20421  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"input/NOIAVault.sol\":20414:20420  amount */\n      dup4\n        /* \"input/NOIAVault.sol\":20384:20421  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":20126:20428  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":27603:27783  function _burn(address account, uint256 value) internal {... */\n    tag_174:\n        /* \"input/NOIAVault.sol\":27693:27694  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":27677:27689  tokensToMint */\n      sload(0x04)\n        /* \"input/NOIAVault.sol\":27677:27694  tokensToMint == 0 */\n      eq\n        /* \"input/NOIAVault.sol\":27669:27739  require(tokensToMint == 0, \"All tokens must be minted before burning\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bf109196a8ee399b1cf59e8dcc3ab096280107a55c33327a0228f023e60b89f9\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"input/NOIAVault.sol\":27749:27776  super._burn(account, value) */\n      tag_262\n        /* \"input/NOIAVault.sol\":27761:27768  account */\n      dup3\n        /* \"input/NOIAVault.sol\":27770:27775  value */\n      dup3\n        /* \"input/NOIAVault.sol\":27749:27760  super._burn */\n      tag_263\n        /* \"input/NOIAVault.sol\":27749:27776  super._burn(account, value) */\n      jump\t// in\n    tag_262:\n        /* \"input/NOIAVault.sol\":27603:27783  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":11379:11553  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_190:\n        /* \"input/NOIAVault.sol\":11461:11546  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_265\n        /* \"input/NOIAVault.sol\":11480:11485  token */\n      dup4\n        /* \"input/NOIAVault.sol\":11510:11515  token */\n      dup5\n        /* \"input/NOIAVault.sol\":11510:11524  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"input/NOIAVault.sol\":11510:11533  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"input/NOIAVault.sol\":11535:11537  to */\n      dup5\n        /* \"input/NOIAVault.sol\":11539:11544  value */\n      dup5\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"input/NOIAVault.sol\":11461:11479  callOptionalReturn */\n      tag_266\n        /* \"input/NOIAVault.sol\":11461:11546  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_265:\n        /* \"input/NOIAVault.sol\":11379:11553  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":16327:16480  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_211:\n        /* \"input/NOIAVault.sol\":16396:16400  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":16412:16452  _transfer(msg.sender, recipient, amount) */\n      tag_268\n        /* \"input/NOIAVault.sol\":16422:16432  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":16434:16443  recipient */\n      dup5\n        /* \"input/NOIAVault.sol\":16445:16451  amount */\n      dup5\n        /* \"input/NOIAVault.sol\":16412:16421  _transfer */\n      tag_141\n        /* \"input/NOIAVault.sol\":16412:16452  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_268:\n        /* \"input/NOIAVault.sol\":16469:16473  true */\n      0x01\n        /* \"input/NOIAVault.sol\":16462:16473  return true */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":16327:16480  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":24236:24461  function _transferOwnership(address newOwner) internal {... */\n    tag_222:\n        /* \"input/NOIAVault.sol\":24329:24330  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":24309:24331  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":24309:24317  newOwner */\n      dup2\n        /* \"input/NOIAVault.sol\":24309:24331  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":24301:24374  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"input/NOIAVault.sol\":24418:24426  newOwner */\n      dup1\n        /* \"input/NOIAVault.sol\":24389:24427  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":24410:24416  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":24389:24427  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":24446:24454  newOwner */\n      dup1\n        /* \"input/NOIAVault.sol\":24437:24443  _owner */\n      0x00\n      dup1\n        /* \"input/NOIAVault.sol\":24437:24454  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":24236:24461  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":4074:4487  function isContract(address account) internal view returns (bool) {... */\n    tag_242:\n        /* \"input/NOIAVault.sol\":4134:4138  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":4337:4349  uint256 size */\n      dup1\n        /* \"input/NOIAVault.sol\":4446:4453  account */\n      dup3\n        /* \"input/NOIAVault.sol\":4434:4454  extcodesize(account) */\n      extcodesize\n        /* \"input/NOIAVault.sol\":4426:4454  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":4479:4480  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":4472:4476  size */\n      dup2\n        /* \"input/NOIAVault.sol\":4472:4480  size > 0 */\n      gt\n        /* \"input/NOIAVault.sol\":4465:4480  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":4074:4487  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":20747:21047  function _burn(address account, uint256 value) internal {... */\n    tag_263:\n        /* \"input/NOIAVault.sol\":20840:20841  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":20821:20842  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":20821:20828  account */\n      dup3\n        /* \"input/NOIAVault.sol\":20821:20842  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":20813:20880  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"input/NOIAVault.sol\":20906:20929  _totalSupply.sub(value) */\n      tag_274\n        /* \"input/NOIAVault.sol\":20923:20928  value */\n      dup2\n        /* \"input/NOIAVault.sol\":20906:20918  _totalSupply */\n      sload(0x03)\n        /* \"input/NOIAVault.sol\":20906:20922  _totalSupply.sub */\n      tag_165\n      swap1\n        /* \"input/NOIAVault.sol\":20906:20929  _totalSupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_274:\n        /* \"input/NOIAVault.sol\":20891:20903  _totalSupply */\n      0x03\n        /* \"input/NOIAVault.sol\":20891:20929  _totalSupply = _totalSupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":20960:20989  _balances[account].sub(value) */\n      tag_275\n        /* \"input/NOIAVault.sol\":20983:20988  value */\n      dup2\n        /* \"input/NOIAVault.sol\":20960:20969  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":20960:20978  _balances[account] */\n      0x00\n        /* \"input/NOIAVault.sol\":20970:20977  account */\n      dup6\n        /* \"input/NOIAVault.sol\":20960:20978  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"input/NOIAVault.sol\":20960:20982  _balances[account].sub */\n      tag_165\n      swap1\n        /* \"input/NOIAVault.sol\":20960:20989  _balances[account].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"input/NOIAVault.sol\":20939:20948  _balances */\n      0x01\n        /* \"input/NOIAVault.sol\":20939:20957  _balances[account] */\n      0x00\n        /* \"input/NOIAVault.sol\":20949:20956  account */\n      dup5\n        /* \"input/NOIAVault.sol\":20939:20957  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/NOIAVault.sol\":20939:20989  _balances[account] = _balances[account].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":21030:21031  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":21004:21040  Transfer(account, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":21013:21020  account */\n      dup3\n        /* \"input/NOIAVault.sol\":21004:21040  Transfer(account, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"input/NOIAVault.sol\":21034:21039  value */\n      dup4\n        /* \"input/NOIAVault.sol\":21004:21040  Transfer(account, address(0), value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":20747:21047  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":13338:14433  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_266:\n        /* \"input/NOIAVault.sol\":13933:13960  address(token).isContract() */\n      tag_277\n        /* \"input/NOIAVault.sol\":13941:13946  token */\n      dup3\n        /* \"input/NOIAVault.sol\":13933:13958  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_242\n        /* \"input/NOIAVault.sol\":13933:13960  address(token).isContract() */\n      jump\t// in\n    tag_277:\n        /* \"input/NOIAVault.sol\":13925:13996  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"input/NOIAVault.sol\":14067:14079  bool success */\n      0x00\n        /* \"input/NOIAVault.sol\":14081:14104  bytes memory returndata */\n      0x60\n        /* \"input/NOIAVault.sol\":14116:14121  token */\n      dup4\n        /* \"input/NOIAVault.sol\":14108:14127  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":14128:14132  data */\n      dup4\n        /* \"input/NOIAVault.sol\":14108:14133  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_279:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_281\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_279)\n    tag_281:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":14108:14133  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_283\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_282)\n        /* \"--CODEGEN--\":16:47   */\n    tag_283:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_282:\n      pop\n        /* \"input/NOIAVault.sol\":14066:14133  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"input/NOIAVault.sol\":14151:14158  success */\n      dup2\n        /* \"input/NOIAVault.sol\":14143:14195  require(success, \"SafeERC20: low-level call failed\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"input/NOIAVault.sol\":14230:14231  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":14210:14220  returndata */\n      dup2\n        /* \"input/NOIAVault.sol\":14210:14227  returndata.length */\n      mload\n        /* \"input/NOIAVault.sol\":14210:14231  returndata.length > 0 */\n      gt\n        /* \"input/NOIAVault.sol\":14206:14427  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_285\n      jumpi\n        /* \"input/NOIAVault.sol\":14350:14360  returndata */\n      dup1\n        /* \"input/NOIAVault.sol\":14339:14369  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_286\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_286:\n        /* \"input/NOIAVault.sol\":14339:14369  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":14331:14416  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"input/NOIAVault.sol\":14206:14427  if (returndata.length > 0) { // Return data is optional... */\n    tag_285:\n        /* \"input/NOIAVault.sol\":13338:14433  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_404f292e4068cdcd4d7edf853a549d89b3798ce34c65eaf7dcf5a34f469bbef7 4275726e2061646472657373206d7573742068617665207a65726f2062616c616e636521\n    data_a432d77761e9f48572aa7afef8cc88428f6f968ffe5a0155b531c488448ba1ef 45746865726c657373207472616e736665722066756e6374696f6e616c6974792064697361626c6564\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_bf109196a8ee399b1cf59e8dcc3ab096280107a55c33327a0228f023e60b89f9 416c6c20746f6b656e73206d757374206265206d696e746564206265666f7265206275726e696e67\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976 476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365\n\n    auxdata: 0xa265627a7a7230582039a0e87f4814b82f8880ccbbe2c0b1cdc2097aab33d1e2e1d197e844465a63fc64736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526b033b2e3c9fd0803ce80000006004556001600860006101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361307e806100fa6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a082311161010457806395d89b41116100a2578063cbb98c3f11610071578063cbb98c3f14610963578063dd62ed3e14610a22578063e79a198f14610a9a578063f2fde38b14610aa4576101cf565b806395d89b41146107f6578063a457c2d714610879578063a9059cbb146108df578063cbafee8a14610945576101cf565b806374686fd2116100de57806374686fd2146107765780638c680798146107805780638da5cb5b1461078a5780638f32d59b146107d4576101cf565b806370a08231146106ca57806370d5ae0514610722578063715018a61461076c576101cf565b806339509351116101715780634b0e72161161014b5780634b0e72161461059a57806359c42cc4146105de5780635f3e849f146106005780635fb9cf201461066e576101cf565b806339509351146104a057806340c10f191461050657806342966c681461056c576101cf565b806318160ddd116101ad57806318160ddd146103ce5780631aa3a008146103ec57806323b872dd146103f6578063313ce5671461047c576101cf565b806306fdde03146101d4578063095ea7b3146102575780631296830d146102bd575b600080fd5b6101dc610ae8565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021c578082015181840152602081019050610201565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a36004803603604081101561026d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b21565b604051808215151515815260200191505060405180910390f35b6103b4600480360360a08110156102d357600080fd5b81019080803590602001906401000000008111156102f057600080fd5b82018360208201111561030257600080fd5b8035906020019184600183028401116401000000008311171561032457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610b38565b604051808215151515815260200191505060405180910390f35b6103d6610f9d565b6040518082815260200191505060405180910390f35b6103f4610fa7565b005b6104626004803603606081101561040c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611001565b604051808215151515815260200191505060405180910390f35b61048461102e565b604051808260ff1660ff16815260200191505060405180910390f35b6104ec600480360360408110156104b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611033565b604051808215151515815260200191505060405180910390f35b6105526004803603604081101561051c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d8565b604051808215151515815260200191505060405180910390f35b6105986004803603602081101561058257600080fd5b810190808035906020019092919050505061121a565b005b6105dc600480360360208110156105b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ea565b005b6105e6611409565b604051808215151515815260200191505060405180910390f35b61066c6004803603606081101561061657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061141c565b005b6106b06004803603602081101561068457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115dc565b604051808215151515815260200191505060405180910390f35b61070c600480360360208110156106e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115fc565b6040518082815260200191505060405180910390f35b61072a611645565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61077461166b565b005b61077e6117a4565b005b61078861183b565b005b6107926118d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107dc6118fb565b604051808215151515815260200191505060405180910390f35b6107fe611952565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561083e578082015181840152602081019050610823565b50505050905090810190601f16801561086b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108c56004803603604081101561088f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061198b565b604051808215151515815260200191505060405180910390f35b61092b600480360360408110156108f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a30565b604051808215151515815260200191505060405180910390f35b61094d611a5b565b6040518082815260200191505060405180910390f35b610a0c600480360360c081101561097957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050611a61565b6040518082815260200191505060405180910390f35b610a8460048036036040811015610a3857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b5a565b6040518082815260200191505060405180910390f35b610aa2611be1565b005b610ae660048036036020811015610aba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c3b565b005b6040518060400160405280600a81526020017f4e4f494120546f6b656e0000000000000000000000000000000000000000000081525081565b6000610b2e338484611cc1565b6001905092915050565b600060011515600860009054906101000a900460ff16151514610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612f3a6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610c49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b6000610c7d6000357fffffffff00000000000000000000000000000000000000000000000000000000163088888888611a61565b90506000610c9c88610c8e84611eb8565b611f1090919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e76616c6964207369676e617475726500000000000000000000000000000081525060200191505060405180910390fd5b60008183604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001209050600015156007600083815260200190815260200160002060009054906101000a900460ff16151514610e3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f6e636520616c72656164792075736564000000000000000000000000000081525060200191505060405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610edc57610eba8289610eb5898b61201490919063ffffffff16565b61209c565b610ed78289610ed2898b61201490919063ffffffff16565b61233c565b610f09565b610ee782898961209c565b610ef282898961233c565b610efd82338861209c565b610f0882338861233c565b5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fec5a73fd1f178be20c1bca1b406cbf4b5c20d833b66e582fc122fb4baa0fc2a48a8a604051808381526020018281526020019250505060405180910390a46001935050505095945050505050565b6000600354905090565b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60008061100f858585612520565b905080156110235761102285858561233c565b5b809150509392505050565b601281565b60006110ce33846110c985600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461201490919063ffffffff16565b611cc1565b6001905092915050565b60006110e26118fb565b611154576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600061116b836004546125d190919063ffffffff16565b10156111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4e6f7420656e6f75676820746f6b656e73206c6566740000000000000000000081525060200191505060405180910390fd5b6111f4826004546125d190919063ffffffff16565b600481905550611204838361265a565b6112106000848461233c565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c79206275726e416464726573732063616e206275726e20746f6b656e7381525060200191505060405180910390fd5b6112e73382612817565b50565b6112f26118fb565b611364576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600061136f826115fc565b146113c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612f166024913960400191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600860009054906101000a900460ff1681565b6114246118fb565b611496576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561151557600080fd5b505afa158015611529573d6000803e3d6000fd5b505050506040513d602081101561153f57600080fd5b81019080805190602001909291905050509050818110156115ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061301f602b913960400191505060405180910390fd5b6115d683838673ffffffffffffffffffffffffffffffffffffffff166128809092919063ffffffff16565b50505050565b60066020528060005260406000206000915054906101000a900460ff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6116736118fb565b6116e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6117ac6118fb565b61181e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600860006101000a81548160ff021916908315150217905550565b6118436118fb565b6118b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600860006101000a81548160ff021916908315150217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600481526020017f4e4f49410000000000000000000000000000000000000000000000000000000081525081565b6000611a263384611a2185600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b611cc1565b6001905092915050565b600080611a3d8484612951565b90508015611a5157611a5033858561233c565b5b8091505092915050565b60045481565b600086868686868660405160200180877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090509695505050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b611c436118fb565b611cb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611cbe81612968565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612fd16024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ef46022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c01828152602001915050604051602081830303815290604052805190602001209050919050565b60006041825114611f24576000905061200e565b60008060006020850151925060408501519150606085015160001a90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c1115611f78576000935050505061200e565b601b8160ff1614158015611f905750601c8160ff1614155b15611fa1576000935050505061200e565b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611ffe573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b600080828401905083811015612092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612122576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f846025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121a8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612eab6023913960400191505060405180910390fd5b6121fa81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061228f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461201490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b61235b8273ffffffffffffffffffffffffffffffffffffffff16612aac565b156124965760001515600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156123be5761251b565b8173ffffffffffffffffffffffffffffffffffffffff166329e9a3b98484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561247957600080fd5b505af115801561248d573d6000803e3d6000fd5b5050505061251a565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561251957612518600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682612817565b5b5b5b505050565b600061252d84848461209c565b6125c684336125c185600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b611cc1565b600190509392505050565b600082821115612649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156126fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6127128160035461201490919063ffffffff16565b60038190555061276a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461201490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060045414612872576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612fa96028913960400191505060405180910390fd5b61287c8282612abf565b5050565b61294c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612c5f565b505050565b600061295e33848461209c565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156129ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612ece6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612b45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f636021913960400191505060405180910390fd5b612b5a816003546125d190919063ffffffff16565b600381905550612bb281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b612c7e8273ffffffffffffffffffffffffffffffffffffffff16612aac565b612cf0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310612d3f5780518252602082019150602081019050602083039250612d1c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612da1576040519150601f19603f3d011682016040523d82523d6000602084013e612da6565b606091505b509150915081612e1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612ea457808060200190516020811015612e3d57600080fd5b8101908080519060200190929190505050612ea3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612ff5602a913960400191505060405180910390fd5b5b5050505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734275726e2061646472657373206d7573742068617665207a65726f2062616c616e63652145746865726c657373207472616e736665722066756e6374696f6e616c6974792064697361626c656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373416c6c20746f6b656e73206d757374206265206d696e746564206265666f7265206275726e696e6745524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365a265627a7a7230582039a0e87f4814b82f8880ccbbe2c0b1cdc2097aab33d1e2e1d197e844465a63fc64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x307E DUP1 PUSH2 0xFA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCBB98C3F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCBB98C3F EQ PUSH2 0x963 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA22 JUMPI DUP1 PUSH4 0xE79A198F EQ PUSH2 0xA9A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAA4 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0xCBAFEE8A EQ PUSH2 0x945 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x74686FD2 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x74686FD2 EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x8C680798 EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x7D4 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x70D5AE05 EQ PUSH2 0x722 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x76C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4B0E7216 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4B0E7216 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x59C42CC4 EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x5FB9CF20 EQ PUSH2 0x66E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x56C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x47C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x1296830D EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x201 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x249 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D6 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH2 0xFA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x484 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x121A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E6 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x141C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72A PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x774 PUSH2 0x166B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x77E PUSH2 0x17A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x788 PUSH2 0x183B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x792 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DC PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FE PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x823 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x86B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94D PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA84 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA2 PUSH2 0x1BE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C3B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4F494120546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2E CALLER DUP5 DUP5 PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F3A PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5472616E7366657220746F20746865207A65726F206164647265737300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND ADDRESS DUP9 DUP9 DUP9 DUP9 PUSH2 0x1A61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP9 PUSH2 0xC8E DUP5 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1F10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F6E636520616C726561647920757365640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEDC JUMPI PUSH2 0xEBA DUP3 DUP10 PUSH2 0xEB5 DUP10 DUP12 PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x209C JUMP JUMPDEST PUSH2 0xED7 DUP3 DUP10 PUSH2 0xED2 DUP10 DUP12 PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x233C JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST PUSH2 0xEE7 DUP3 DUP10 DUP10 PUSH2 0x209C JUMP JUMPDEST PUSH2 0xEF2 DUP3 DUP10 DUP10 PUSH2 0x233C JUMP JUMPDEST PUSH2 0xEFD DUP3 CALLER DUP9 PUSH2 0x209C JUMP JUMPDEST PUSH2 0xF08 DUP3 CALLER DUP9 PUSH2 0x233C JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEC5A73FD1F178BE20C1BCA1B406CBF4B5C20D833B66E582FC122FB4BAA0FC2A4 DUP11 DUP11 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100F DUP6 DUP6 DUP6 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1023 JUMPI PUSH2 0x1022 DUP6 DUP6 DUP6 PUSH2 0x233C JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CE CALLER DUP5 PUSH2 0x10C9 DUP6 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E2 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x116B DUP4 PUSH1 0x4 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F75676820746F6B656E73206C65667400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F4 DUP3 PUSH1 0x4 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1204 DUP4 DUP4 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x1210 PUSH1 0x0 DUP5 DUP5 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C79206275726E416464726573732063616E206275726E20746F6B656E73 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E7 CALLER DUP3 PUSH2 0x2817 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12F2 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x136F DUP3 PUSH2 0x15FC JUMP JUMPDEST EQ PUSH2 0x13C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F16 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1424 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1529 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x153F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x301F PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D6 DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2880 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1673 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x16E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x17AC PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1843 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x18B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4F494100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A26 CALLER DUP5 PUSH2 0x1A21 DUP6 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A3D DUP5 DUP5 PUSH2 0x2951 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1A51 JUMPI PUSH2 0x1A50 CALLER DUP6 DUP6 PUSH2 0x233C JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x4 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1C43 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1CB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x2968 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FD1 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF4 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x41 DUP3 MLOAD EQ PUSH2 0x1F24 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x200E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1F78 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1B DUP2 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F90 JUMPI POP PUSH1 0x1C DUP2 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1FA1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2122 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F84 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EAB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21FA DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x228F DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x235B DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AAC JUMP JUMPDEST ISZERO PUSH2 0x2496 JUMPI PUSH1 0x0 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x23BE JUMPI PUSH2 0x251B JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29E9A3B9 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x248D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x251A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2519 JUMPI PUSH2 0x2518 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x2817 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252D DUP5 DUP5 DUP5 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x25C6 DUP5 CALLER PUSH2 0x25C1 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2712 DUP2 PUSH1 0x3 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x276A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0x2872 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FA9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x287C DUP3 DUP3 PUSH2 0x2ABF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x294C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2C5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295E CALLER DUP5 DUP5 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2ECE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F63 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B5A DUP2 PUSH1 0x3 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x2BB2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2C7E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x2CF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2D3F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2D1C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2DA1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2DA6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2EA4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2EA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FF5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x4275726E2061646472657373206D757374206861 PUSH23 0x65207A65726F2062616C616E63652145746865726C6573 PUSH20 0x207472616E736665722066756E6374696F6E616C PUSH10 0x74792064697361626C65 PUSH5 0x4552433230 GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373416C6C20746F6B656E73206D75737420 PUSH3 0x65206D PUSH10 0x6E746564206265666F72 PUSH6 0x206275726E69 PUSH15 0x6745524332303A20617070726F7665 KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735361666545524332303A204552433230 KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564476976656E20616D6F756E742069 PUSH20 0x206C6172676572207468616E2063757272656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365A265627A7A7230582039A0E87F 0x48 EQ 0xb8 0x2f DUP9 DUP1 0xcc 0xbb 0xe2 0xc0 0xb1 0xcd 0xc2 MULMOD PUSH27 0xAB33D1E2E1D197E844465A63FC64736F6C634300050A0032000000 ",
							"sourceMap": "24956:6248:0:-;;;25272:13;25242:43;;25478:4;25439:43;;;;;;;;;;;;;;;;;;;;22809:10;22800:6;;:19;;;;;;;;;;;;;;;;;;22867:6;;;;;;;;;;;22834:40;;22863:1;22834:40;;;;;;;;;;;;24956:6248;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a082311161010457806395d89b41116100a2578063cbb98c3f11610071578063cbb98c3f14610963578063dd62ed3e14610a22578063e79a198f14610a9a578063f2fde38b14610aa4576101cf565b806395d89b41146107f6578063a457c2d714610879578063a9059cbb146108df578063cbafee8a14610945576101cf565b806374686fd2116100de57806374686fd2146107765780638c680798146107805780638da5cb5b1461078a5780638f32d59b146107d4576101cf565b806370a08231146106ca57806370d5ae0514610722578063715018a61461076c576101cf565b806339509351116101715780634b0e72161161014b5780634b0e72161461059a57806359c42cc4146105de5780635f3e849f146106005780635fb9cf201461066e576101cf565b806339509351146104a057806340c10f191461050657806342966c681461056c576101cf565b806318160ddd116101ad57806318160ddd146103ce5780631aa3a008146103ec57806323b872dd146103f6578063313ce5671461047c576101cf565b806306fdde03146101d4578063095ea7b3146102575780631296830d146102bd575b600080fd5b6101dc610ae8565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021c578082015181840152602081019050610201565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a36004803603604081101561026d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b21565b604051808215151515815260200191505060405180910390f35b6103b4600480360360a08110156102d357600080fd5b81019080803590602001906401000000008111156102f057600080fd5b82018360208201111561030257600080fd5b8035906020019184600183028401116401000000008311171561032457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610b38565b604051808215151515815260200191505060405180910390f35b6103d6610f9d565b6040518082815260200191505060405180910390f35b6103f4610fa7565b005b6104626004803603606081101561040c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611001565b604051808215151515815260200191505060405180910390f35b61048461102e565b604051808260ff1660ff16815260200191505060405180910390f35b6104ec600480360360408110156104b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611033565b604051808215151515815260200191505060405180910390f35b6105526004803603604081101561051c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d8565b604051808215151515815260200191505060405180910390f35b6105986004803603602081101561058257600080fd5b810190808035906020019092919050505061121a565b005b6105dc600480360360208110156105b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ea565b005b6105e6611409565b604051808215151515815260200191505060405180910390f35b61066c6004803603606081101561061657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061141c565b005b6106b06004803603602081101561068457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115dc565b604051808215151515815260200191505060405180910390f35b61070c600480360360208110156106e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115fc565b6040518082815260200191505060405180910390f35b61072a611645565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61077461166b565b005b61077e6117a4565b005b61078861183b565b005b6107926118d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107dc6118fb565b604051808215151515815260200191505060405180910390f35b6107fe611952565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561083e578082015181840152602081019050610823565b50505050905090810190601f16801561086b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108c56004803603604081101561088f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061198b565b604051808215151515815260200191505060405180910390f35b61092b600480360360408110156108f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a30565b604051808215151515815260200191505060405180910390f35b61094d611a5b565b6040518082815260200191505060405180910390f35b610a0c600480360360c081101561097957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050611a61565b6040518082815260200191505060405180910390f35b610a8460048036036040811015610a3857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b5a565b6040518082815260200191505060405180910390f35b610aa2611be1565b005b610ae660048036036020811015610aba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c3b565b005b6040518060400160405280600a81526020017f4e4f494120546f6b656e0000000000000000000000000000000000000000000081525081565b6000610b2e338484611cc1565b6001905092915050565b600060011515600860009054906101000a900460ff16151514610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612f3a6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610c49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b6000610c7d6000357fffffffff00000000000000000000000000000000000000000000000000000000163088888888611a61565b90506000610c9c88610c8e84611eb8565b611f1090919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e76616c6964207369676e617475726500000000000000000000000000000081525060200191505060405180910390fd5b60008183604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001209050600015156007600083815260200190815260200160002060009054906101000a900460ff16151514610e3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f6e636520616c72656164792075736564000000000000000000000000000081525060200191505060405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610edc57610eba8289610eb5898b61201490919063ffffffff16565b61209c565b610ed78289610ed2898b61201490919063ffffffff16565b61233c565b610f09565b610ee782898961209c565b610ef282898961233c565b610efd82338861209c565b610f0882338861233c565b5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fec5a73fd1f178be20c1bca1b406cbf4b5c20d833b66e582fc122fb4baa0fc2a48a8a604051808381526020018281526020019250505060405180910390a46001935050505095945050505050565b6000600354905090565b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60008061100f858585612520565b905080156110235761102285858561233c565b5b809150509392505050565b601281565b60006110ce33846110c985600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461201490919063ffffffff16565b611cc1565b6001905092915050565b60006110e26118fb565b611154576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600061116b836004546125d190919063ffffffff16565b10156111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4e6f7420656e6f75676820746f6b656e73206c6566740000000000000000000081525060200191505060405180910390fd5b6111f4826004546125d190919063ffffffff16565b600481905550611204838361265a565b6112106000848461233c565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c79206275726e416464726573732063616e206275726e20746f6b656e7381525060200191505060405180910390fd5b6112e73382612817565b50565b6112f26118fb565b611364576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600061136f826115fc565b146113c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612f166024913960400191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600860009054906101000a900460ff1681565b6114246118fb565b611496576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561151557600080fd5b505afa158015611529573d6000803e3d6000fd5b505050506040513d602081101561153f57600080fd5b81019080805190602001909291905050509050818110156115ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061301f602b913960400191505060405180910390fd5b6115d683838673ffffffffffffffffffffffffffffffffffffffff166128809092919063ffffffff16565b50505050565b60066020528060005260406000206000915054906101000a900460ff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6116736118fb565b6116e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6117ac6118fb565b61181e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600860006101000a81548160ff021916908315150217905550565b6118436118fb565b6118b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600860006101000a81548160ff021916908315150217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600481526020017f4e4f49410000000000000000000000000000000000000000000000000000000081525081565b6000611a263384611a2185600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b611cc1565b6001905092915050565b600080611a3d8484612951565b90508015611a5157611a5033858561233c565b5b8091505092915050565b60045481565b600086868686868660405160200180877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090509695505050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b611c436118fb565b611cb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611cbe81612968565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612fd16024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ef46022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c01828152602001915050604051602081830303815290604052805190602001209050919050565b60006041825114611f24576000905061200e565b60008060006020850151925060408501519150606085015160001a90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c1115611f78576000935050505061200e565b601b8160ff1614158015611f905750601c8160ff1614155b15611fa1576000935050505061200e565b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611ffe573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b600080828401905083811015612092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612122576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f846025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121a8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612eab6023913960400191505060405180910390fd5b6121fa81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061228f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461201490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b61235b8273ffffffffffffffffffffffffffffffffffffffff16612aac565b156124965760001515600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156123be5761251b565b8173ffffffffffffffffffffffffffffffffffffffff166329e9a3b98484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561247957600080fd5b505af115801561248d573d6000803e3d6000fd5b5050505061251a565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561251957612518600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682612817565b5b5b5b505050565b600061252d84848461209c565b6125c684336125c185600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b611cc1565b600190509392505050565b600082821115612649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156126fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6127128160035461201490919063ffffffff16565b60038190555061276a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461201490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060045414612872576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612fa96028913960400191505060405180910390fd5b61287c8282612abf565b5050565b61294c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612c5f565b505050565b600061295e33848461209c565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156129ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612ece6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612b45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f636021913960400191505060405180910390fd5b612b5a816003546125d190919063ffffffff16565b600381905550612bb281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546125d190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b612c7e8273ffffffffffffffffffffffffffffffffffffffff16612aac565b612cf0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310612d3f5780518252602082019150602081019050602083039250612d1c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612da1576040519150601f19603f3d011682016040523d82523d6000602084013e612da6565b606091505b509150915081612e1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612ea457808060200190516020811015612e3d57600080fd5b8101908080519060200190929190505050612ea3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612ff5602a913960400191505060405180910390fd5b5b5050505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734275726e2061646472657373206d7573742068617665207a65726f2062616c616e63652145746865726c657373207472616e736665722066756e6374696f6e616c6974792064697361626c656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373416c6c20746f6b656e73206d757374206265206d696e746564206265666f7265206275726e696e6745524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365a265627a7a7230582039a0e87f4814b82f8880ccbbe2c0b1cdc2097aab33d1e2e1d197e844465a63fc64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCBB98C3F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCBB98C3F EQ PUSH2 0x963 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA22 JUMPI DUP1 PUSH4 0xE79A198F EQ PUSH2 0xA9A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAA4 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0xCBAFEE8A EQ PUSH2 0x945 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x74686FD2 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x74686FD2 EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x8C680798 EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x7D4 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x70D5AE05 EQ PUSH2 0x722 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x76C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4B0E7216 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4B0E7216 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x59C42CC4 EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x5FB9CF20 EQ PUSH2 0x66E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x56C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x47C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x1296830D EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x201 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x249 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D6 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH2 0xFA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x484 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x121A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E6 PUSH2 0x1409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x141C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72A PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x774 PUSH2 0x166B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x77E PUSH2 0x17A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x788 PUSH2 0x183B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x792 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DC PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FE PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x823 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x86B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94D PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA84 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA2 PUSH2 0x1BE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C3B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4F494120546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2E CALLER DUP5 DUP5 PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F3A PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5472616E7366657220746F20746865207A65726F206164647265737300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND ADDRESS DUP9 DUP9 DUP9 DUP9 PUSH2 0x1A61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP9 PUSH2 0xC8E DUP5 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x1F10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F6E636520616C726561647920757365640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEDC JUMPI PUSH2 0xEBA DUP3 DUP10 PUSH2 0xEB5 DUP10 DUP12 PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x209C JUMP JUMPDEST PUSH2 0xED7 DUP3 DUP10 PUSH2 0xED2 DUP10 DUP12 PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x233C JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST PUSH2 0xEE7 DUP3 DUP10 DUP10 PUSH2 0x209C JUMP JUMPDEST PUSH2 0xEF2 DUP3 DUP10 DUP10 PUSH2 0x233C JUMP JUMPDEST PUSH2 0xEFD DUP3 CALLER DUP9 PUSH2 0x209C JUMP JUMPDEST PUSH2 0xF08 DUP3 CALLER DUP9 PUSH2 0x233C JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEC5A73FD1F178BE20C1BCA1B406CBF4B5C20D833B66E582FC122FB4BAA0FC2A4 DUP11 DUP11 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100F DUP6 DUP6 DUP6 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1023 JUMPI PUSH2 0x1022 DUP6 DUP6 DUP6 PUSH2 0x233C JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CE CALLER DUP5 PUSH2 0x10C9 DUP6 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E2 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x116B DUP4 PUSH1 0x4 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F75676820746F6B656E73206C65667400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F4 DUP3 PUSH1 0x4 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1204 DUP4 DUP4 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x1210 PUSH1 0x0 DUP5 DUP5 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C79206275726E416464726573732063616E206275726E20746F6B656E73 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E7 CALLER DUP3 PUSH2 0x2817 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12F2 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x136F DUP3 PUSH2 0x15FC JUMP JUMPDEST EQ PUSH2 0x13C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F16 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1424 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1529 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x153F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x301F PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D6 DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2880 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1673 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x16E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x17AC PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1843 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x18B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4F494100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A26 CALLER DUP5 PUSH2 0x1A21 DUP6 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A3D DUP5 DUP5 PUSH2 0x2951 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1A51 JUMPI PUSH2 0x1A50 CALLER DUP6 DUP6 PUSH2 0x233C JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x4 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1C43 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x1CB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x2968 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FD1 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF4 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x41 DUP3 MLOAD EQ PUSH2 0x1F24 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x200E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1F78 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1B DUP2 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F90 JUMPI POP PUSH1 0x1C DUP2 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1FA1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2122 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F84 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EAB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21FA DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x228F DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x235B DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AAC JUMP JUMPDEST ISZERO PUSH2 0x2496 JUMPI PUSH1 0x0 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x23BE JUMPI PUSH2 0x251B JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29E9A3B9 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x248D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x251A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2519 JUMPI PUSH2 0x2518 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x2817 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252D DUP5 DUP5 DUP5 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x25C6 DUP5 CALLER PUSH2 0x25C1 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2712 DUP2 PUSH1 0x3 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x276A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2014 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0x2872 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FA9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x287C DUP3 DUP3 PUSH2 0x2ABF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x294C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2C5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295E CALLER DUP5 DUP5 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2ECE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F63 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B5A DUP2 PUSH1 0x3 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x2BB2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2C7E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x2CF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2D3F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2D1C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2DA1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2DA6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2EA4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2EA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FF5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x4275726E2061646472657373206D757374206861 PUSH23 0x65207A65726F2062616C616E63652145746865726C6573 PUSH20 0x207472616E736665722066756E6374696F6E616C PUSH10 0x74792064697361626C65 PUSH5 0x4552433230 GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373416C6C20746F6B656E73206D75737420 PUSH3 0x65206D PUSH10 0x6E746564206265666F72 PUSH6 0x206275726E69 PUSH15 0x6745524332303A20617070726F7665 KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735361666545524332303A204552433230 KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564476976656E20616D6F756E742069 PUSH20 0x206C6172676572207468616E2063757272656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365A265627A7A7230582039A0E87F 0x48 EQ 0xb8 0x2f DUP9 DUP1 0xcc 0xbb 0xe2 0xc0 0xb1 0xcd 0xc2 MULMOD PUSH27 0xAB33D1E2E1D197E844465A63FC64736F6C634300050A0032000000 ",
							"sourceMap": "24956:6248:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24956:6248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25101:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;25101:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16808:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16808:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;29275:1175;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;29275:1175:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;29275:1175:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;29275:1175:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;29275:1175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;29275:1175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15869:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25774:69;;;:::i;:::-;;26996:253;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26996:253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;25193:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;18057:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18057:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;28030:294;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28030:294:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;28447:157;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28447:157:0;;;;;;;;;;;;;;;;;:::i;:::-;;28610:196;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28610:196:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;25439:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;24682:270;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24682:270:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;25347:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25347:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16016:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16016:108:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25315:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;23742:137;;;:::i;:::-;;25927:100;;;:::i;:::-;;26033:102;;;:::i;:::-;;22957:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;23308:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;25149:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;25149:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18747:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18747:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;26302:231;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26302:231:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;25242:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30879:323;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;30879:323:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16538:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16538:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25849:72;;;:::i;:::-;;24028:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24028:107:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;25101:42;;;;;;;;;;;;;;;;;;;:::o;16808:145::-;16873:4;16889:36;16898:10;16910:7;16919:5;16889:8;:36::i;:::-;16942:4;16935:11;;16808:145;;;;:::o;29275:1175::-;29501:4;25700;25672:32;;:24;;;;;;;;;;;:32;;;25664:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29544:1;29529:17;;:3;:17;;;;29521:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29590:20;29613:62;29625:7;;;;29642:4;29649:3;29654:6;29662:4;29668:6;29613:11;:62::i;:::-;29590:85;;29685:12;29700:57;29746:10;29700:37;:12;:35;:37::i;:::-;:45;;:57;;;;:::i;:::-;29685:72;;29791:1;29775:18;;:4;:18;;;;29767:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29826:16;29872:4;29878:12;29855:36;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;29855:36:0;;;29845:47;;;;;;29826:66;;29933:5;29910:28;;:9;:19;29920:8;29910:19;;;;;;;;;;;;;;;;;;;;;:28;;;29902:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29993:4;29971:9;:19;29981:8;29971:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;30026:3;30012:17;;:10;:17;;;30008:345;;;30045:38;30055:4;30061:3;30066:16;30077:4;30066:6;:10;;:16;;;;:::i;:::-;30045:9;:38::i;:::-;30097:42;30111:4;30117:3;30122:16;30133:4;30122:6;:10;;:16;;;;:::i;:::-;30097:13;:42::i;:::-;30008:345;;;30170:28;30180:4;30186:3;30191:6;30170:9;:28::i;:::-;30212:32;30226:4;30232:3;30237:6;30212:13;:32::i;:::-;30258:33;30268:4;30274:10;30286:4;30258:9;:33::i;:::-;30305:37;30319:4;30325:10;30337:4;30305:13;:37::i;:::-;30008:345;30397:10;30368:54;;30392:3;30368:54;;30386:4;30368:54;;;30409:6;30417:4;30368:54;;;;;;;;;;;;;;;;;;;;;;;;30439:4;30432:11;;;;;29275:1175;;;;;;;:::o;15869:89::-;15913:7;15939:12;;15932:19;;15869:89;:::o;25774:69::-;25832:4;25811:6;:18;25818:10;25811:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;25774:69::o;26996:253::-;27075:4;27091:12;27106:35;27125:4;27131:2;27135:5;27106:18;:35::i;:::-;27091:50;;27155:7;27151:68;;;27178:30;27192:4;27198:2;27202:5;27178:13;:30::i;:::-;27151:68;27235:7;27228:14;;;26996:253;;;;;:::o;25193:42::-;25232:2;25193:42;:::o;18057:203::-;18137:4;18153:79;18162:10;18174:7;18183:48;18220:10;18183:11;:23;18195:10;18183:23;;;;;;;;;;;;;;;:32;18207:7;18183:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;18153:8;:79::i;:::-;18249:4;18242:11;;18057:203;;;;:::o;28030:294::-;28097:4;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28148:1;28121:23;28138:5;28121:12;;:16;;:23;;;;:::i;:::-;:28;;28113:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28201:23;28218:5;28201:12;;:16;;:23;;;;:::i;:::-;28186:12;:38;;;;28234:16;28240:2;28244:5;28234;:16::i;:::-;28260:36;28282:1;28286:2;28290:5;28260:13;:36::i;:::-;28313:4;28306:11;;28030:294;;;;:::o;28447:157::-;28515:11;;;;;;;;;;;28501:25;;:10;:25;;;28493:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28573:24;28579:10;28591:5;28573;:24::i;:::-;28447:157;:::o;28610:196::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28720:1;28693:23;28703:12;28693:9;:23::i;:::-;:28;28685:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28787:12;28773:11;;:26;;;;;;;;;;;;;;;;;;28610:196;:::o;25439:43::-;;;;;;;;;;;;;:::o;24682:270::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24774:15;24792:5;:15;;;24816:4;24792:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24792:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24792:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24792:30:0;;;;;;;;;;;;;;;;24774:48;;24851:6;24840:7;:17;;24832:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24915:30;24934:2;24938:6;24915:5;:18;;;;:30;;;;;:::i;:::-;23217:1;24682:270;;;:::o;25347:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;16016:108::-;16073:7;16099:9;:18;16109:7;16099:18;;;;;;;;;;;;;;;;16092:25;;16016:108;;;:::o;25315:26::-;;;;;;;;;;;;;:::o;23742:137::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23840:1;23803:40;;23824:6;;;;;;;;;;;23803:40;;;;;;;;;;;;23870:1;23853:6;;:19;;;;;;;;;;;;;;;;;;23742:137::o;25927:100::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26016:4;25989:24;;:31;;;;;;;;;;;;;;;;;;25927:100::o;26033:102::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26123:5;26096:24;;:32;;;;;;;;;;;;;;;;;;26033:102::o;22957:77::-;22995:7;23021:6;;;;;;;;;;;23014:13;;22957:77;:::o;23308:90::-;23348:4;23385:6;;;;;;;;;;;23371:20;;:10;:20;;;23364:27;;23308:90;:::o;25149:38::-;;;;;;;;;;;;;;;;;;;:::o;18747:213::-;18832:4;18848:84;18857:10;18869:7;18878:53;18915:15;18878:11;:23;18890:10;18878:23;;;;;;;;;;;;;;;:32;18902:7;18878:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;18848:8;:84::i;:::-;18949:4;18942:11;;18747:213;;;;:::o;26302:231::-;26363:4;26379:12;26394:25;26409:2;26413:5;26394:14;:25::i;:::-;26379:40;;26433:7;26429:74;;;26456:36;26470:10;26482:2;26486:5;26456:13;:36::i;:::-;26429:74;26519:7;26512:14;;;26302:231;;;;:::o;25242:43::-;;;;:::o;30879:323::-;31092:7;31149:9;31160:6;31168:3;31173:6;31181:4;31187:6;31132:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;31132:62:0;;;31122:73;;;;;;31115:80;;30879:323;;;;;;;;:::o;16538:132::-;16610:7;16636:11;:18;16648:5;16636:18;;;;;;;;;;;;;;;:27;16655:7;16636:27;;;;;;;;;;;;;;;;16629:34;;16538:132;;;;:::o;25849:72::-;25909:5;25888:6;:18;25895:10;25888:18;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;25849:72::o;24028:107::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24100:28;24119:8;24100:18;:28::i;:::-;24028:107;:::o;21472:329::-;21581:1;21564:19;;:5;:19;;;;21556:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21661:1;21642:21;;:7;:21;;;;21634:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21743:5;21713:11;:18;21725:5;21713:18;;;;;;;;;;;;;;;:27;21732:7;21713:27;;;;;;;;;;;;;;;:35;;;;21779:7;21763:31;;21772:5;21763:31;;;21788:5;21763:31;;;;;;;;;;;;;;;;;;21472:329;;;:::o;7853:265::-;7922:7;8105:4;8052:58;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8052:58:0;;;8042:69;;;;;;8035:76;;7853:265;;;:::o;5696:1891::-;5774:7;5855:2;5835:9;:16;:22;5831:72;;5889:1;5873:19;;;;5831:72;5969:9;5988;6007:7;6253:4;6242:9;6238:20;6232:27;6227:32;;6298:4;6287:9;6283:20;6277:27;6272:32;;6351:4;6340:9;6336:20;6330:27;6327:1;6322:36;6317:41;;7269:66;7264:1;7256:10;;:79;7252:127;;;7366:1;7351:17;;;;;;;7252:127;7398:2;7393:1;:7;;;;:18;;;;;7409:2;7404:1;:7;;;;7393:18;7389:66;;;7442:1;7427:17;;;;;;;7389:66;7556:24;7566:4;7572:1;7575;7578;7556:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7556:24:0;;;;;;;;7549:31;;;;;5696:1891;;;;;:::o;862:176::-;920:7;939:9;955:1;951;:5;939:17;;979:1;974;:6;;966:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:1;1023:8;;;862:176;;;;:::o;19434:422::-;19549:1;19531:20;;:6;:20;;;;19523:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19632:1;19611:23;;:9;:23;;;;19603:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19705:29;19727:6;19705:9;:17;19715:6;19705:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;19685:9;:17;19695:6;19685:17;;;;;;;;;;;;;;;:49;;;;19767:32;19792:6;19767:9;:20;19777:9;19767:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;19744:9;:20;19754:9;19744:20;;;;;;;;;;;;;;;:55;;;;19831:9;19814:35;;19823:6;19814:35;;;19842:6;19814:35;;;;;;;;;;;;;;;;;;19434:422;;;:::o;27255:342::-;27342:15;:2;:13;;;:15::i;:::-;27338:253;;;27391:5;27377:19;;:6;:10;27384:2;27377:10;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;27373:32;;;27398:7;;27373:32;27434:2;27419:33;;;27453:4;27459:2;27463:5;27419:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27419:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27419:50:0;;;;27338:253;;;27510:11;;;;;;;;;;;27504:17;;:2;:17;;;27500:81;;;27541:25;27547:11;;;;;;;;;;;27560:5;27541;:25::i;:::-;27500:81;27338:253;27255:342;;;;:::o;17410:252::-;17499:4;17515:36;17525:6;17533:9;17544:6;17515:9;:36::i;:::-;17561:73;17570:6;17578:10;17590:43;17626:6;17590:11;:19;17602:6;17590:19;;;;;;;;;;;;;;;:31;17610:10;17590:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;17561:8;:73::i;:::-;17651:4;17644:11;;17410:252;;;;;:::o;1302:179::-;1360:7;1392:1;1387;:6;;1379:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:9;1454:1;1450;:5;1438:17;;1473:1;1466:8;;;1302:179;;;;:::o;20126:302::-;20220:1;20201:21;;:7;:21;;;;20193:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20284:24;20301:6;20284:12;;:16;;:24;;;;:::i;:::-;20269:12;:39;;;;20339:30;20362:6;20339:9;:18;20349:7;20339:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;20318:9;:18;20328:7;20318:18;;;;;;;;;;;;;;;:51;;;;20405:7;20384:37;;20401:1;20384:37;;;20414:6;20384:37;;;;;;;;;;;;;;;;;;20126:302;;:::o;27603:180::-;27693:1;27677:12;;:17;27669:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27749:27;27761:7;27770:5;27749:11;:27::i;:::-;27603:180;;:::o;11379:174::-;11461:85;11480:5;11510;:14;;;:23;;;;11535:2;11539:5;11487:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11487:58:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;11487:58:0;11461:18;:85::i;:::-;11379:174;;;:::o;16327:153::-;16396:4;16412:40;16422:10;16434:9;16445:6;16412:9;:40::i;:::-;16469:4;16462:11;;16327:153;;;;:::o;24236:225::-;24329:1;24309:22;;:8;:22;;;;24301:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24418:8;24389:38;;24410:6;;;;;;;;;;;24389:38;;;;;;;;;;;;24446:8;24437:6;;:17;;;;;;;;;;;;;;;;;;24236:225;:::o;4074:413::-;4134:4;4337:12;4446:7;4434:20;4426:28;;4479:1;4472:4;:8;4465:15;;;4074:413;;;:::o;20747:300::-;20840:1;20821:21;;:7;:21;;;;20813:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20906:23;20923:5;20906:12;;:16;;:23;;;;:::i;:::-;20891:12;:38;;;;20960:29;20983:5;20960:9;:18;20970:7;20960:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;20939:9;:18;20949:7;20939:18;;;;;;;;;;;;;;;:50;;;;21030:1;21004:36;;21013:7;21004:36;;;21034:5;21004:36;;;;;;;;;;;;;;;;;;20747:300;;:::o;13338:1095::-;13933:27;13941:5;13933:25;;;:27::i;:::-;13925:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14067:12;14081:23;14116:5;14108:19;;14128:4;14108:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14108:25:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14066:67:0;;;;14151:7;14143:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14230:1;14210:10;:17;:21;14206:221;;;14350:10;14339:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14339:30:0;;;;;;;;;;;;;;;;14331:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14206:221;13338:1095;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2482800",
								"executionCost": "64969",
								"totalCost": "2547769"
							},
							"external": {
								"allowance(address,address)": "787",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "642",
								"burn(uint256)": "infinite",
								"burnAddress()": "521",
								"decimals()": "329",
								"decreaseAllowance(address,uint256)": "infinite",
								"disableEtherlessTransfer()": "20783",
								"enableEtherlessTransfer()": "20761",
								"etherlessTransferEnabled()": "520",
								"hashForSign(bytes4,address,address,uint256,uint256,uint256)": "830",
								"increaseAllowance(address,uint256)": "infinite",
								"isOwner()": "589",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"notify(address)": "717",
								"owner()": "550",
								"recoverTokens(address,address,uint256)": "infinite",
								"register()": "20568",
								"renounceOwnership()": "22587",
								"setBurnAddress(address)": "infinite",
								"symbol()": "infinite",
								"tokensToMint()": "516",
								"totalSupply()": "459",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferPreSigned(bytes,address,uint256,uint256,uint256)": "infinite",
								"unregister()": "20588"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_postTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24956,
									"end": 31204,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "MSTORE"
								},
								{
									"begin": 25272,
									"end": 25285,
									"name": "PUSH",
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 25242,
									"end": 25285,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 25242,
									"end": 25285,
									"name": "SSTORE"
								},
								{
									"begin": 25478,
									"end": 25482,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "EXP"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "DUP2"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "SLOAD"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "DUP2"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "MUL"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "NOT"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "AND"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "SWAP1"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "DUP4"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "ISZERO"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "ISZERO"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "MUL"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "OR"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "SWAP1"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "SSTORE"
								},
								{
									"begin": 25439,
									"end": 25482,
									"name": "POP"
								},
								{
									"begin": 22809,
									"end": 22819,
									"name": "CALLER"
								},
								{
									"begin": 22800,
									"end": 22806,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 22800,
									"end": 22806,
									"name": "DUP1"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "EXP"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "DUP2"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SLOAD"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "DUP2"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "MUL"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "NOT"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "AND"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SWAP1"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "DUP4"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "AND"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "MUL"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "OR"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SWAP1"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SSTORE"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "POP"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "DUP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SWAP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SLOAD"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SWAP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "EXP"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SWAP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "DIV"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "AND"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "AND"
								},
								{
									"begin": 22863,
									"end": 22864,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "AND"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "MLOAD"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "MLOAD"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "DUP1"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "SWAP2"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "SUB"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "SWAP1"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "LOG3"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "DUP1"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "CODECOPY"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24956,
									"end": 31204,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7230582039a0e87f4814b82f8880ccbbe2c0b1cdc2097aab33d1e2e1d197e844465a63fc64736f6c634300050a0032",
									".code": [
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "MSTORE"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "POP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "LT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "SHR"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "GT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "GT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "CBB98C3F"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "GT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "CBB98C3F"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "E79A198F"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "CBAFEE8A"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "74686FD2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "GT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "74686FD2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "8C680798"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "70D5AE05"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "GT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "4B0E7216"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "GT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "4B0E7216"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "59C42CC4"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "5F3E849F"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "5FB9CF20"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "GT"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "1AA3A008"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMP"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "1296830D"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "EQ"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPI"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "JUMPDEST"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "DUP1"
										},
										{
											"begin": 24956,
											"end": 31204,
											"name": "REVERT"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "JUMPDEST"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "JUMPDEST"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MLOAD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ADD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP3"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SUB"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP3"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MSTORE"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP4"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MLOAD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MSTORE"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ADD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MLOAD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ADD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP4"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ADD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "AND"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ISZERO"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "JUMPI"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP3"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SUB"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MLOAD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP4"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SUB"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "EXP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SUB"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "NOT"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "AND"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MSTORE"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ADD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "JUMPDEST"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP3"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MLOAD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SUB"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "RETURN"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMPDEST"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "AND"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMPDEST"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "MLOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ISZERO"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "MSTORE"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "ADD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "MLOAD"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SUB"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "RETURN"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "JUMPDEST"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DIV"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "MUL"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "MLOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "MSTORE"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP4"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "MSTORE"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP4"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "AND"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "JUMPDEST"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "MLOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP3"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ISZERO"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ISZERO"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ISZERO"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ISZERO"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "MSTORE"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "ADD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "MLOAD"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "DUP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP2"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SUB"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP1"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "RETURN"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMPDEST"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMPDEST"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "MLOAD"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP3"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP2"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "MSTORE"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "ADD"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP2"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "POP"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "POP"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "MLOAD"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "DUP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP2"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SUB"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "RETURN"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "JUMPDEST"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "JUMPDEST"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "STOP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "JUMPDEST"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP2"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ADD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "AND"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ADD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP3"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP2"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "AND"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ADD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP3"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP2"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ADD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP3"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP2"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "JUMPDEST"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "MLOAD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP3"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ISZERO"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ISZERO"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ISZERO"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ISZERO"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP2"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "MSTORE"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "ADD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP2"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "MLOAD"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "DUP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP2"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SUB"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP1"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "RETURN"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "JUMPDEST"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "JUMPDEST"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "MLOAD"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "DUP1"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "DUP3"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "AND"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "AND"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "DUP2"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "MSTORE"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "ADD"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "SWAP2"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "POP"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "POP"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "MLOAD"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "DUP1"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "SWAP2"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "SUB"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "SWAP1"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "RETURN"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMPDEST"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "AND"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMPDEST"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "MLOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ISZERO"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "MSTORE"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "ADD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "MLOAD"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "DUP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SUB"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP1"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "RETURN"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "JUMPDEST"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP2"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ADD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "AND"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ADD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP3"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP2"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ADD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP3"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP2"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "JUMPDEST"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "MLOAD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP3"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ISZERO"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ISZERO"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ISZERO"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ISZERO"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP2"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "MSTORE"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "ADD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP2"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "MLOAD"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "DUP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP2"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SUB"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP1"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "RETURN"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "JUMPDEST"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "DUP1"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "DUP2"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "ADD"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "SWAP1"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "DUP1"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "DUP1"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "SWAP1"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "ADD"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "SWAP1"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "SWAP3"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "SWAP2"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "SWAP1"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "POP"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "POP"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "POP"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "JUMPDEST"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "STOP"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "JUMPDEST"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "DUP1"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "DUP2"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "ADD"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "SWAP1"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "DUP1"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "DUP1"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "AND"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "SWAP1"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "ADD"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "SWAP1"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "SWAP3"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "SWAP2"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "SWAP1"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "POP"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "POP"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "POP"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "JUMPDEST"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "STOP"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "JUMPDEST"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "JUMPDEST"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "MLOAD"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "DUP1"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "DUP3"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "ISZERO"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "ISZERO"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "ISZERO"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "ISZERO"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "DUP2"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "MSTORE"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "ADD"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SWAP2"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "POP"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "POP"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "MLOAD"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "DUP1"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SWAP2"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SUB"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SWAP1"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "RETURN"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMPDEST"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "AND"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP3"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "AND"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP3"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP3"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMPDEST"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "STOP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "JUMPDEST"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP2"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "ADD"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "AND"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "ADD"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP3"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP2"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "POP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "POP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "POP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "JUMPDEST"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "MLOAD"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP3"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "ISZERO"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "ISZERO"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "ISZERO"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "ISZERO"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP2"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "MSTORE"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "ADD"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP2"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "POP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "POP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "MLOAD"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP2"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SUB"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "RETURN"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMPDEST"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "AND"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP3"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMPDEST"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "MLOAD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP3"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "MSTORE"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "MLOAD"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "DUP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SUB"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "RETURN"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "JUMPDEST"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "JUMPDEST"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "MLOAD"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "DUP1"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "DUP3"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "AND"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "AND"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "DUP2"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "MSTORE"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "ADD"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SWAP2"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "POP"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "POP"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "MLOAD"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "DUP1"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SWAP2"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SUB"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SWAP1"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "RETURN"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMPDEST"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMPDEST"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "STOP"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "JUMPDEST"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "JUMPDEST"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "STOP"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "JUMPDEST"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "JUMPDEST"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "STOP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMPDEST"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMPDEST"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "MLOAD"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP3"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "AND"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "AND"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP2"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "MSTORE"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "ADD"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP2"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "POP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "POP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "MLOAD"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP2"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SUB"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "RETURN"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMPDEST"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMPDEST"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "MLOAD"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP3"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP2"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "MSTORE"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ADD"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP2"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "POP"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "POP"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "MLOAD"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP2"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SUB"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "RETURN"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "JUMPDEST"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "JUMPDEST"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MLOAD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ADD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP3"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SUB"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP3"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MSTORE"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP4"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MLOAD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MSTORE"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ADD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MLOAD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ADD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP4"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ADD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "AND"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ISZERO"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "JUMPI"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP3"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SUB"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MLOAD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP4"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SUB"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "EXP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SUB"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "NOT"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "AND"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MSTORE"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ADD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "JUMPDEST"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP3"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MLOAD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SUB"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "SWAP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "RETURN"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMPDEST"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "AND"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMPDEST"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "MLOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ISZERO"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "MSTORE"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "ADD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "MLOAD"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "DUP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SUB"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP1"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "RETURN"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "JUMPDEST"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP2"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ADD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "AND"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ADD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP3"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP2"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ADD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP3"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP2"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "JUMPDEST"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "MLOAD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP3"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ISZERO"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ISZERO"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ISZERO"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ISZERO"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP2"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "MSTORE"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "ADD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP2"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "MLOAD"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "DUP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP2"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SUB"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP1"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "RETURN"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "JUMPDEST"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "JUMPDEST"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "MLOAD"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "DUP1"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "DUP3"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "DUP2"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "MSTORE"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "ADD"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "SWAP2"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "POP"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "POP"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "MLOAD"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "DUP1"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "SWAP2"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "SUB"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "SWAP1"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "RETURN"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "JUMPDEST"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "NOT"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "AND"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP3"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "AND"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP3"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "AND"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP3"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP3"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP3"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP3"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "JUMPDEST"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "MLOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP3"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "MSTORE"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "ADD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "MLOAD"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "DUP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP2"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SUB"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP1"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "RETURN"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMPDEST"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "AND"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "AND"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMPDEST"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "MLOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "MSTORE"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "ADD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "MLOAD"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "DUP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SUB"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP1"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "RETURN"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "JUMPDEST"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "JUMPDEST"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "STOP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP2"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "AND"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP3"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP2"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "STOP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "JUMPDEST"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MLOAD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ADD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MSTORE"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP1"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MSTORE"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "ADD"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "PUSH",
											"value": "4E4F494120546F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "MSTORE"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "DUP2"
										},
										{
											"begin": 25101,
											"end": 25143,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMPDEST"
										},
										{
											"begin": 16873,
											"end": 16877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 16898,
											"end": 16908,
											"name": "CALLER"
										},
										{
											"begin": 16910,
											"end": 16917,
											"name": "DUP5"
										},
										{
											"begin": 16919,
											"end": 16924,
											"name": "DUP5"
										},
										{
											"begin": 16889,
											"end": 16897,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 16889,
											"end": 16925,
											"name": "JUMPDEST"
										},
										{
											"begin": 16942,
											"end": 16946,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16935,
											"end": 16946,
											"name": "SWAP1"
										},
										{
											"begin": 16935,
											"end": 16946,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP3"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "POP"
										},
										{
											"begin": 16808,
											"end": 16953,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "JUMPDEST"
										},
										{
											"begin": 29501,
											"end": 29505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25700,
											"end": 25704,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25672,
											"end": 25704,
											"name": "ISZERO"
										},
										{
											"begin": 25672,
											"end": 25704,
											"name": "ISZERO"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "SWAP1"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "SLOAD"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "SWAP1"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "EXP"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "SWAP1"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "DIV"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25672,
											"end": 25696,
											"name": "AND"
										},
										{
											"begin": 25672,
											"end": 25704,
											"name": "ISZERO"
										},
										{
											"begin": 25672,
											"end": 25704,
											"name": "ISZERO"
										},
										{
											"begin": 25672,
											"end": 25704,
											"name": "EQ"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "JUMPI"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "MLOAD"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP2"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "MSTORE"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "ADD"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP1"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP1"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "ADD"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP3"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP2"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "SUB"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP3"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "MSTORE"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP2"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "MSTORE"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "ADD"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP1"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH data",
											"value": "A432D77761E9F48572AA7AFEF8CC88428F6F968FFE5A0155B531C488448BA1EF"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "SWAP2"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "CODECOPY"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "ADD"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "SWAP2"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "POP"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "POP"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "MLOAD"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "DUP1"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "SWAP2"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "SUB"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "SWAP1"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "REVERT"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 25664,
											"end": 25750,
											"name": "JUMPDEST"
										},
										{
											"begin": 29544,
											"end": 29545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29529,
											"end": 29546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29529,
											"end": 29546,
											"name": "AND"
										},
										{
											"begin": 29529,
											"end": 29532,
											"name": "DUP6"
										},
										{
											"begin": 29529,
											"end": 29546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29529,
											"end": 29546,
											"name": "AND"
										},
										{
											"begin": 29529,
											"end": 29546,
											"name": "EQ"
										},
										{
											"begin": 29529,
											"end": 29546,
											"name": "ISZERO"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "JUMPI"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "MLOAD"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP2"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "MSTORE"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "ADD"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP1"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP1"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "ADD"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP3"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP2"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "SUB"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP3"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "MSTORE"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP2"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "MSTORE"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "ADD"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP1"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "5472616E7366657220746F20746865207A65726F206164647265737300000000"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP2"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "MSTORE"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "POP"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "ADD"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "SWAP2"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "POP"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "POP"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "MLOAD"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "DUP1"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "SWAP2"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "SUB"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "SWAP1"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "REVERT"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 29521,
											"end": 29579,
											"name": "JUMPDEST"
										},
										{
											"begin": 29590,
											"end": 29610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29613,
											"end": 29675,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 29625,
											"end": 29632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29625,
											"end": 29632,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29625,
											"end": 29632,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29625,
											"end": 29632,
											"name": "AND"
										},
										{
											"begin": 29642,
											"end": 29646,
											"name": "ADDRESS"
										},
										{
											"begin": 29649,
											"end": 29652,
											"name": "DUP9"
										},
										{
											"begin": 29654,
											"end": 29660,
											"name": "DUP9"
										},
										{
											"begin": 29662,
											"end": 29666,
											"name": "DUP9"
										},
										{
											"begin": 29668,
											"end": 29674,
											"name": "DUP9"
										},
										{
											"begin": 29613,
											"end": 29624,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 29613,
											"end": 29675,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29613,
											"end": 29675,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 29613,
											"end": 29675,
											"name": "JUMPDEST"
										},
										{
											"begin": 29590,
											"end": 29675,
											"name": "SWAP1"
										},
										{
											"begin": 29590,
											"end": 29675,
											"name": "POP"
										},
										{
											"begin": 29685,
											"end": 29697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 29746,
											"end": 29756,
											"name": "DUP9"
										},
										{
											"begin": 29700,
											"end": 29737,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 29700,
											"end": 29712,
											"name": "DUP5"
										},
										{
											"begin": 29700,
											"end": 29735,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 29700,
											"end": 29737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29700,
											"end": 29737,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 29700,
											"end": 29737,
											"name": "JUMPDEST"
										},
										{
											"begin": 29700,
											"end": 29745,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 29700,
											"end": 29745,
											"name": "SWAP1"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "SWAP2"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "SWAP1"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "AND"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 29700,
											"end": 29757,
											"name": "JUMPDEST"
										},
										{
											"begin": 29685,
											"end": 29757,
											"name": "SWAP1"
										},
										{
											"begin": 29685,
											"end": 29757,
											"name": "POP"
										},
										{
											"begin": 29791,
											"end": 29792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29775,
											"end": 29793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29775,
											"end": 29793,
											"name": "AND"
										},
										{
											"begin": 29775,
											"end": 29779,
											"name": "DUP2"
										},
										{
											"begin": 29775,
											"end": 29793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29775,
											"end": 29793,
											"name": "AND"
										},
										{
											"begin": 29775,
											"end": 29793,
											"name": "EQ"
										},
										{
											"begin": 29775,
											"end": 29793,
											"name": "ISZERO"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "JUMPI"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "MLOAD"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP2"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "MSTORE"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "ADD"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP1"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP1"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "ADD"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP3"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP2"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "SUB"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP3"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "MSTORE"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP2"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "MSTORE"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "ADD"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP1"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "496E76616C6964207369676E6174757265000000000000000000000000000000"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP2"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "MSTORE"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "POP"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "ADD"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "SWAP2"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "POP"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "POP"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "MLOAD"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "DUP1"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "SWAP2"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "SUB"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "SWAP1"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "REVERT"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 29767,
											"end": 29815,
											"name": "JUMPDEST"
										},
										{
											"begin": 29826,
											"end": 29842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29872,
											"end": 29876,
											"name": "DUP2"
										},
										{
											"begin": 29878,
											"end": 29890,
											"name": "DUP4"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "MLOAD"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "ADD"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "DUP1"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "DUP4"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "AND"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "AND"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "SHL"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "DUP2"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "MSTORE"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "ADD"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "DUP3"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "DUP2"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "MSTORE"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "ADD"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "SWAP3"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "POP"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "POP"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "POP"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "SWAP1"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29855,
											"end": 29891,
											"name": "MSTORE"
										},
										{
											"begin": 29845,
											"end": 29892,
											"name": "DUP1"
										},
										{
											"begin": 29845,
											"end": 29892,
											"name": "MLOAD"
										},
										{
											"begin": 29845,
											"end": 29892,
											"name": "SWAP1"
										},
										{
											"begin": 29845,
											"end": 29892,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29845,
											"end": 29892,
											"name": "ADD"
										},
										{
											"begin": 29845,
											"end": 29892,
											"name": "KECCAK256"
										},
										{
											"begin": 29826,
											"end": 29892,
											"name": "SWAP1"
										},
										{
											"begin": 29826,
											"end": 29892,
											"name": "POP"
										},
										{
											"begin": 29933,
											"end": 29938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29910,
											"end": 29938,
											"name": "ISZERO"
										},
										{
											"begin": 29910,
											"end": 29938,
											"name": "ISZERO"
										},
										{
											"begin": 29910,
											"end": 29919,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29920,
											"end": 29928,
											"name": "DUP4"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "DUP2"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "MSTORE"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "ADD"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "SWAP1"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "DUP2"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "MSTORE"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "ADD"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "KECCAK256"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "SWAP1"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "SLOAD"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "SWAP1"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "EXP"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "SWAP1"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "DIV"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 29910,
											"end": 29929,
											"name": "AND"
										},
										{
											"begin": 29910,
											"end": 29938,
											"name": "ISZERO"
										},
										{
											"begin": 29910,
											"end": 29938,
											"name": "ISZERO"
										},
										{
											"begin": 29910,
											"end": 29938,
											"name": "EQ"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "JUMPI"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "MLOAD"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP2"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "MSTORE"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "ADD"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP1"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP1"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "ADD"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP3"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP2"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "SUB"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP3"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "MSTORE"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP2"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "MSTORE"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "ADD"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP1"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "4E6F6E636520616C726561647920757365640000000000000000000000000000"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP2"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "MSTORE"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "POP"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "ADD"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "SWAP2"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "POP"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "POP"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "MLOAD"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "DUP1"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "SWAP2"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "SUB"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "SWAP1"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "REVERT"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 29902,
											"end": 29961,
											"name": "JUMPDEST"
										},
										{
											"begin": 29993,
											"end": 29997,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 29971,
											"end": 29980,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29981,
											"end": 29989,
											"name": "DUP4"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "DUP2"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "MSTORE"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "ADD"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "SWAP1"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "DUP2"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "MSTORE"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "ADD"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "KECCAK256"
										},
										{
											"begin": 29971,
											"end": 29990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "EXP"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "DUP2"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "SLOAD"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "DUP2"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "MUL"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "NOT"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "AND"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "SWAP1"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "DUP4"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "ISZERO"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "ISZERO"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "MUL"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "OR"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "SWAP1"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "SSTORE"
										},
										{
											"begin": 29971,
											"end": 29997,
											"name": "POP"
										},
										{
											"begin": 30026,
											"end": 30029,
											"name": "DUP8"
										},
										{
											"begin": 30012,
											"end": 30029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30012,
											"end": 30029,
											"name": "AND"
										},
										{
											"begin": 30012,
											"end": 30022,
											"name": "CALLER"
										},
										{
											"begin": 30012,
											"end": 30029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30012,
											"end": 30029,
											"name": "AND"
										},
										{
											"begin": 30012,
											"end": 30029,
											"name": "EQ"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "ISZERO"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "JUMPI"
										},
										{
											"begin": 30045,
											"end": 30083,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 30055,
											"end": 30059,
											"name": "DUP3"
										},
										{
											"begin": 30061,
											"end": 30064,
											"name": "DUP10"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 30077,
											"end": 30081,
											"name": "DUP10"
										},
										{
											"begin": 30066,
											"end": 30072,
											"name": "DUP12"
										},
										{
											"begin": 30066,
											"end": 30076,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 30066,
											"end": 30076,
											"name": "SWAP1"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "SWAP2"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "SWAP1"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "AND"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 30066,
											"end": 30082,
											"name": "JUMPDEST"
										},
										{
											"begin": 30045,
											"end": 30054,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 30045,
											"end": 30083,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30045,
											"end": 30083,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 30045,
											"end": 30083,
											"name": "JUMPDEST"
										},
										{
											"begin": 30097,
											"end": 30139,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 30111,
											"end": 30115,
											"name": "DUP3"
										},
										{
											"begin": 30117,
											"end": 30120,
											"name": "DUP10"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 30133,
											"end": 30137,
											"name": "DUP10"
										},
										{
											"begin": 30122,
											"end": 30128,
											"name": "DUP12"
										},
										{
											"begin": 30122,
											"end": 30132,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 30122,
											"end": 30132,
											"name": "SWAP1"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "SWAP2"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "SWAP1"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "AND"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 30122,
											"end": 30138,
											"name": "JUMPDEST"
										},
										{
											"begin": 30097,
											"end": 30110,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 30097,
											"end": 30139,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30097,
											"end": 30139,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 30097,
											"end": 30139,
											"name": "JUMPDEST"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "JUMP"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "JUMPDEST"
										},
										{
											"begin": 30170,
											"end": 30198,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 30180,
											"end": 30184,
											"name": "DUP3"
										},
										{
											"begin": 30186,
											"end": 30189,
											"name": "DUP10"
										},
										{
											"begin": 30191,
											"end": 30197,
											"name": "DUP10"
										},
										{
											"begin": 30170,
											"end": 30179,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 30170,
											"end": 30198,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30170,
											"end": 30198,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 30170,
											"end": 30198,
											"name": "JUMPDEST"
										},
										{
											"begin": 30212,
											"end": 30244,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 30226,
											"end": 30230,
											"name": "DUP3"
										},
										{
											"begin": 30232,
											"end": 30235,
											"name": "DUP10"
										},
										{
											"begin": 30237,
											"end": 30243,
											"name": "DUP10"
										},
										{
											"begin": 30212,
											"end": 30225,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 30212,
											"end": 30244,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30212,
											"end": 30244,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 30212,
											"end": 30244,
											"name": "JUMPDEST"
										},
										{
											"begin": 30258,
											"end": 30291,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 30268,
											"end": 30272,
											"name": "DUP3"
										},
										{
											"begin": 30274,
											"end": 30284,
											"name": "CALLER"
										},
										{
											"begin": 30286,
											"end": 30290,
											"name": "DUP9"
										},
										{
											"begin": 30258,
											"end": 30267,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 30258,
											"end": 30291,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30258,
											"end": 30291,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 30258,
											"end": 30291,
											"name": "JUMPDEST"
										},
										{
											"begin": 30305,
											"end": 30342,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 30319,
											"end": 30323,
											"name": "DUP3"
										},
										{
											"begin": 30325,
											"end": 30335,
											"name": "CALLER"
										},
										{
											"begin": 30337,
											"end": 30341,
											"name": "DUP9"
										},
										{
											"begin": 30305,
											"end": 30318,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 30305,
											"end": 30342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30305,
											"end": 30342,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 30305,
											"end": 30342,
											"name": "JUMPDEST"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 30008,
											"end": 30353,
											"name": "JUMPDEST"
										},
										{
											"begin": 30397,
											"end": 30407,
											"name": "CALLER"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "AND"
										},
										{
											"begin": 30392,
											"end": 30395,
											"name": "DUP9"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "AND"
										},
										{
											"begin": 30386,
											"end": 30390,
											"name": "DUP4"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "AND"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "EC5A73FD1F178BE20C1BCA1B406CBF4B5C20D833B66E582FC122FB4BAA0FC2A4"
										},
										{
											"begin": 30409,
											"end": 30415,
											"name": "DUP11"
										},
										{
											"begin": 30417,
											"end": 30421,
											"name": "DUP11"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "MLOAD"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "DUP1"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "DUP4"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "DUP2"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "MSTORE"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "ADD"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "DUP3"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "DUP2"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "MSTORE"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "ADD"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "SWAP3"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "POP"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "POP"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "POP"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "MLOAD"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "DUP1"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "SWAP2"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "SUB"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "SWAP1"
										},
										{
											"begin": 30368,
											"end": 30422,
											"name": "LOG4"
										},
										{
											"begin": 30439,
											"end": 30443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 30432,
											"end": 30443,
											"name": "SWAP4"
										},
										{
											"begin": 30432,
											"end": 30443,
											"name": "POP"
										},
										{
											"begin": 30432,
											"end": 30443,
											"name": "POP"
										},
										{
											"begin": 30432,
											"end": 30443,
											"name": "POP"
										},
										{
											"begin": 30432,
											"end": 30443,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP6"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "SWAP5"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "POP"
										},
										{
											"begin": 29275,
											"end": 30450,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMPDEST"
										},
										{
											"begin": 15913,
											"end": 15920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15939,
											"end": 15951,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15939,
											"end": 15951,
											"name": "SLOAD"
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "SWAP1"
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "POP"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "SWAP1"
										},
										{
											"begin": 15869,
											"end": 15958,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "JUMPDEST"
										},
										{
											"begin": 25832,
											"end": 25836,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25811,
											"end": 25817,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25818,
											"end": 25828,
											"name": "CALLER"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "AND"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "AND"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "DUP2"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "MSTORE"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "ADD"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "SWAP1"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "DUP2"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "MSTORE"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "ADD"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "KECCAK256"
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "EXP"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "DUP2"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "SLOAD"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "DUP2"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "MUL"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "NOT"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "AND"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "SWAP1"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "DUP4"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "ISZERO"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "ISZERO"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "MUL"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "OR"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "SWAP1"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "SSTORE"
										},
										{
											"begin": 25811,
											"end": 25836,
											"name": "POP"
										},
										{
											"begin": 25774,
											"end": 25843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "JUMPDEST"
										},
										{
											"begin": 27075,
											"end": 27079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27091,
											"end": 27103,
											"name": "DUP1"
										},
										{
											"begin": 27106,
											"end": 27141,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 27125,
											"end": 27129,
											"name": "DUP6"
										},
										{
											"begin": 27131,
											"end": 27133,
											"name": "DUP6"
										},
										{
											"begin": 27135,
											"end": 27140,
											"name": "DUP6"
										},
										{
											"begin": 27106,
											"end": 27124,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 27106,
											"end": 27141,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27106,
											"end": 27141,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 27106,
											"end": 27141,
											"name": "JUMPDEST"
										},
										{
											"begin": 27091,
											"end": 27141,
											"name": "SWAP1"
										},
										{
											"begin": 27091,
											"end": 27141,
											"name": "POP"
										},
										{
											"begin": 27155,
											"end": 27162,
											"name": "DUP1"
										},
										{
											"begin": 27151,
											"end": 27219,
											"name": "ISZERO"
										},
										{
											"begin": 27151,
											"end": 27219,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 27151,
											"end": 27219,
											"name": "JUMPI"
										},
										{
											"begin": 27178,
											"end": 27208,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 27192,
											"end": 27196,
											"name": "DUP6"
										},
										{
											"begin": 27198,
											"end": 27200,
											"name": "DUP6"
										},
										{
											"begin": 27202,
											"end": 27207,
											"name": "DUP6"
										},
										{
											"begin": 27178,
											"end": 27191,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 27178,
											"end": 27208,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27178,
											"end": 27208,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 27178,
											"end": 27208,
											"name": "JUMPDEST"
										},
										{
											"begin": 27151,
											"end": 27219,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 27151,
											"end": 27219,
											"name": "JUMPDEST"
										},
										{
											"begin": 27235,
											"end": 27242,
											"name": "DUP1"
										},
										{
											"begin": 27228,
											"end": 27242,
											"name": "SWAP2"
										},
										{
											"begin": 27228,
											"end": 27242,
											"name": "POP"
										},
										{
											"begin": 27228,
											"end": 27242,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP4"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "SWAP3"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "POP"
										},
										{
											"begin": 26996,
											"end": 27249,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "JUMPDEST"
										},
										{
											"begin": 25232,
											"end": 25234,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "DUP2"
										},
										{
											"begin": 25193,
											"end": 25235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMPDEST"
										},
										{
											"begin": 18137,
											"end": 18141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 18162,
											"end": 18172,
											"name": "CALLER"
										},
										{
											"begin": 18174,
											"end": 18181,
											"name": "DUP5"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 18220,
											"end": 18230,
											"name": "DUP6"
										},
										{
											"begin": 18183,
											"end": 18194,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18195,
											"end": 18205,
											"name": "CALLER"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18183,
											"end": 18206,
											"name": "KECCAK256"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18207,
											"end": 18214,
											"name": "DUP10"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "DUP2"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "MSTORE"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "ADD"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "KECCAK256"
										},
										{
											"begin": 18183,
											"end": 18215,
											"name": "SLOAD"
										},
										{
											"begin": 18183,
											"end": 18219,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 18183,
											"end": 18219,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "SWAP2"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "SWAP1"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "AND"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 18183,
											"end": 18231,
											"name": "JUMPDEST"
										},
										{
											"begin": 18153,
											"end": 18161,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 18153,
											"end": 18232,
											"name": "JUMPDEST"
										},
										{
											"begin": 18249,
											"end": 18253,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18242,
											"end": 18253,
											"name": "SWAP1"
										},
										{
											"begin": 18242,
											"end": 18253,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP3"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "SWAP2"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 18057,
											"end": 18260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "JUMPDEST"
										},
										{
											"begin": 28097,
											"end": 28101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 28148,
											"end": 28149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 28138,
											"end": 28143,
											"name": "DUP4"
										},
										{
											"begin": 28121,
											"end": 28133,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28121,
											"end": 28133,
											"name": "SLOAD"
										},
										{
											"begin": 28121,
											"end": 28137,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 28121,
											"end": 28137,
											"name": "SWAP1"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "SWAP2"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "SWAP1"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "AND"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 28121,
											"end": 28144,
											"name": "JUMPDEST"
										},
										{
											"begin": 28121,
											"end": 28149,
											"name": "LT"
										},
										{
											"begin": 28121,
											"end": 28149,
											"name": "ISZERO"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "JUMPI"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "MLOAD"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP2"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "MSTORE"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "ADD"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP1"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP1"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "ADD"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP3"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP2"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "SUB"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP3"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "MSTORE"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP2"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "MSTORE"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "ADD"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP1"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "4E6F7420656E6F75676820746F6B656E73206C65667400000000000000000000"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP2"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "MSTORE"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "POP"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "ADD"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "SWAP2"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "POP"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "POP"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "MLOAD"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "DUP1"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "SWAP2"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "SUB"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "SWAP1"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "REVERT"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 28113,
											"end": 28176,
											"name": "JUMPDEST"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 28218,
											"end": 28223,
											"name": "DUP3"
										},
										{
											"begin": 28201,
											"end": 28213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28201,
											"end": 28213,
											"name": "SLOAD"
										},
										{
											"begin": 28201,
											"end": 28217,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 28201,
											"end": 28217,
											"name": "SWAP1"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "SWAP2"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "SWAP1"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "AND"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "JUMPDEST"
										},
										{
											"begin": 28186,
											"end": 28198,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28186,
											"end": 28224,
											"name": "DUP2"
										},
										{
											"begin": 28186,
											"end": 28224,
											"name": "SWAP1"
										},
										{
											"begin": 28186,
											"end": 28224,
											"name": "SSTORE"
										},
										{
											"begin": 28186,
											"end": 28224,
											"name": "POP"
										},
										{
											"begin": 28234,
											"end": 28250,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 28240,
											"end": 28242,
											"name": "DUP4"
										},
										{
											"begin": 28244,
											"end": 28249,
											"name": "DUP4"
										},
										{
											"begin": 28234,
											"end": 28239,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 28234,
											"end": 28250,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28234,
											"end": 28250,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 28234,
											"end": 28250,
											"name": "JUMPDEST"
										},
										{
											"begin": 28260,
											"end": 28296,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 28282,
											"end": 28283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28286,
											"end": 28288,
											"name": "DUP5"
										},
										{
											"begin": 28290,
											"end": 28295,
											"name": "DUP5"
										},
										{
											"begin": 28260,
											"end": 28273,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 28260,
											"end": 28296,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28260,
											"end": 28296,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 28260,
											"end": 28296,
											"name": "JUMPDEST"
										},
										{
											"begin": 28313,
											"end": 28317,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28306,
											"end": 28317,
											"name": "SWAP1"
										},
										{
											"begin": 28306,
											"end": 28317,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP3"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "SWAP2"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "POP"
										},
										{
											"begin": 28030,
											"end": 28324,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "JUMPDEST"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "SWAP1"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "SLOAD"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "SWAP1"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "EXP"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "SWAP1"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "DIV"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28515,
											"end": 28526,
											"name": "AND"
										},
										{
											"begin": 28501,
											"end": 28526,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28501,
											"end": 28526,
											"name": "AND"
										},
										{
											"begin": 28501,
											"end": 28511,
											"name": "CALLER"
										},
										{
											"begin": 28501,
											"end": 28526,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28501,
											"end": 28526,
											"name": "AND"
										},
										{
											"begin": 28501,
											"end": 28526,
											"name": "EQ"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "JUMPI"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "MLOAD"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP2"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "MSTORE"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "ADD"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP1"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP1"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "ADD"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP3"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP2"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "SUB"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP3"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "MSTORE"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP2"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "MSTORE"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "ADD"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP1"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "4F6E6C79206275726E416464726573732063616E206275726E20746F6B656E73"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP2"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "MSTORE"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "POP"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "ADD"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "SWAP2"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "POP"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "POP"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "MLOAD"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "DUP1"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "SWAP2"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "SUB"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "SWAP1"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "REVERT"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 28493,
											"end": 28563,
											"name": "JUMPDEST"
										},
										{
											"begin": 28573,
											"end": 28597,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 28579,
											"end": 28589,
											"name": "CALLER"
										},
										{
											"begin": 28591,
											"end": 28596,
											"name": "DUP3"
										},
										{
											"begin": 28573,
											"end": 28578,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 28573,
											"end": 28597,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28573,
											"end": 28597,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 28573,
											"end": 28597,
											"name": "JUMPDEST"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "POP"
										},
										{
											"begin": 28447,
											"end": 28604,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 28720,
											"end": 28721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28693,
											"end": 28716,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 28703,
											"end": 28715,
											"name": "DUP3"
										},
										{
											"begin": 28693,
											"end": 28702,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 28693,
											"end": 28716,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28693,
											"end": 28716,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 28693,
											"end": 28716,
											"name": "JUMPDEST"
										},
										{
											"begin": 28693,
											"end": 28721,
											"name": "EQ"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "JUMPI"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "MLOAD"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP2"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "MSTORE"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "ADD"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP1"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP1"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "ADD"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP3"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP2"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "SUB"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP3"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "MSTORE"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP2"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "MSTORE"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "ADD"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP1"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH data",
											"value": "404F292E4068CDCD4D7EDF853A549D89B3798CE34C65EAF7DCF5A34F469BBEF7"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "SWAP2"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "CODECOPY"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "ADD"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "SWAP2"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "POP"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "POP"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "MLOAD"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "DUP1"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "SWAP2"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "SUB"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "SWAP1"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "REVERT"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 28685,
											"end": 28762,
											"name": "JUMPDEST"
										},
										{
											"begin": 28787,
											"end": 28799,
											"name": "DUP1"
										},
										{
											"begin": 28773,
											"end": 28784,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 28773,
											"end": 28784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "EXP"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "DUP2"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "SLOAD"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "DUP2"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "MUL"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "NOT"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "AND"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "SWAP1"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "DUP4"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "AND"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "MUL"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "OR"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "SWAP1"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "SSTORE"
										},
										{
											"begin": 28773,
											"end": 28799,
											"name": "POP"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "POP"
										},
										{
											"begin": 28610,
											"end": 28806,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "JUMPDEST"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SWAP1"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SLOAD"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SWAP1"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "EXP"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "SWAP1"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "DIV"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "AND"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "DUP2"
										},
										{
											"begin": 25439,
											"end": 25482,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 24774,
											"end": 24789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24792,
											"end": 24797,
											"name": "DUP4"
										},
										{
											"begin": 24792,
											"end": 24807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24807,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24807,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 24816,
											"end": 24820,
											"name": "ADDRESS"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP3"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SHL"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MSTORE"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP3"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MSTORE"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP4"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SUB"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP7"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "GAS"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "STATICCALL"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP3"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24774,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24774,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24851,
											"end": 24857,
											"name": "DUP2"
										},
										{
											"begin": 24840,
											"end": 24847,
											"name": "DUP2"
										},
										{
											"begin": 24840,
											"end": 24857,
											"name": "LT"
										},
										{
											"begin": 24840,
											"end": 24857,
											"name": "ISZERO"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "JUMPI"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MLOAD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MSTORE"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP3"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SUB"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP3"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MSTORE"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MSTORE"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH data",
											"value": "F88C2B987653742ECD02849285169F1EAAADF3E37FF12E2783D5486B802D0976"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "CODECOPY"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "POP"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "POP"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MLOAD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SUB"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "REVERT"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "JUMPDEST"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 24934,
											"end": 24936,
											"name": "DUP4"
										},
										{
											"begin": 24938,
											"end": 24944,
											"name": "DUP4"
										},
										{
											"begin": 24915,
											"end": 24920,
											"name": "DUP7"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "AND"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "SWAP1"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "SWAP3"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "SWAP2"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "SWAP1"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "AND"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "JUMPDEST"
										},
										{
											"begin": 23217,
											"end": 23218,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "JUMPDEST"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "MSTORE"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "MSTORE"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "KECCAK256"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP2"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "POP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SLOAD"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "EXP"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "SWAP1"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DIV"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "AND"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "DUP2"
										},
										{
											"begin": 25347,
											"end": 25385,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMPDEST"
										},
										{
											"begin": 16073,
											"end": 16080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16108,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16109,
											"end": 16116,
											"name": "DUP4"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "AND"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "AND"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "DUP2"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "MSTORE"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "ADD"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "SWAP1"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "DUP2"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "MSTORE"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "ADD"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "KECCAK256"
										},
										{
											"begin": 16099,
											"end": 16117,
											"name": "SLOAD"
										},
										{
											"begin": 16092,
											"end": 16117,
											"name": "SWAP1"
										},
										{
											"begin": 16092,
											"end": 16117,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP2"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16124,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "JUMPDEST"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SWAP1"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SLOAD"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SWAP1"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "EXP"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SWAP1"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "DIV"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "AND"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "DUP2"
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 23840,
											"end": 23841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "AND"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "DUP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SWAP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SLOAD"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SWAP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "EXP"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SWAP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "DIV"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "AND"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "AND"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "MLOAD"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "MLOAD"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "DUP1"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "SWAP2"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "SUB"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "SWAP1"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "LOG3"
										},
										{
											"begin": 23870,
											"end": 23871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23853,
											"end": 23859,
											"name": "DUP1"
										},
										{
											"begin": 23853,
											"end": 23859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "EXP"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "DUP2"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SLOAD"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "DUP2"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "MUL"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "NOT"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "AND"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SWAP1"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "DUP4"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "AND"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "MUL"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "OR"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SWAP1"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SSTORE"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "POP"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 26016,
											"end": 26020,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25989,
											"end": 26013,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25989,
											"end": 26013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "EXP"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "DUP2"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "SLOAD"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "DUP2"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "MUL"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "NOT"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "AND"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "SWAP1"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "DUP4"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "ISZERO"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "ISZERO"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "MUL"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "OR"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "SWAP1"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "SSTORE"
										},
										{
											"begin": 25989,
											"end": 26020,
											"name": "POP"
										},
										{
											"begin": 25927,
											"end": 26027,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 26123,
											"end": 26128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26096,
											"end": 26120,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 26096,
											"end": 26120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "EXP"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "DUP2"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "SLOAD"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "DUP2"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "MUL"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "NOT"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "AND"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "SWAP1"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "DUP4"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "ISZERO"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "ISZERO"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "MUL"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "OR"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "SWAP1"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "SSTORE"
										},
										{
											"begin": 26096,
											"end": 26128,
											"name": "POP"
										},
										{
											"begin": 26033,
											"end": 26135,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMPDEST"
										},
										{
											"begin": 22995,
											"end": 23002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "DUP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SLOAD"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "EXP"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "DIV"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "AND"
										},
										{
											"begin": 23014,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23014,
											"end": 23027,
											"name": "POP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMPDEST"
										},
										{
											"begin": 23348,
											"end": 23352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "DUP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SLOAD"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "EXP"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "DIV"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "AND"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "AND"
										},
										{
											"begin": 23371,
											"end": 23381,
											"name": "CALLER"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "AND"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "EQ"
										},
										{
											"begin": 23364,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23364,
											"end": 23391,
											"name": "POP"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "JUMPDEST"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MLOAD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ADD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MSTORE"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP1"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MSTORE"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "ADD"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "PUSH",
											"value": "4E4F494100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "MSTORE"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "POP"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "DUP2"
										},
										{
											"begin": 25149,
											"end": 25187,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMPDEST"
										},
										{
											"begin": 18832,
											"end": 18836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 18857,
											"end": 18867,
											"name": "CALLER"
										},
										{
											"begin": 18869,
											"end": 18876,
											"name": "DUP5"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 18915,
											"end": 18930,
											"name": "DUP6"
										},
										{
											"begin": 18878,
											"end": 18889,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18890,
											"end": 18900,
											"name": "CALLER"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18878,
											"end": 18901,
											"name": "KECCAK256"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18902,
											"end": 18909,
											"name": "DUP10"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "DUP2"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "MSTORE"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "ADD"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "KECCAK256"
										},
										{
											"begin": 18878,
											"end": 18910,
											"name": "SLOAD"
										},
										{
											"begin": 18878,
											"end": 18914,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 18878,
											"end": 18914,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "SWAP2"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "SWAP1"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "AND"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 18878,
											"end": 18931,
											"name": "JUMPDEST"
										},
										{
											"begin": 18848,
											"end": 18856,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 18848,
											"end": 18932,
											"name": "JUMPDEST"
										},
										{
											"begin": 18949,
											"end": 18953,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18942,
											"end": 18953,
											"name": "SWAP1"
										},
										{
											"begin": 18942,
											"end": 18953,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP3"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "SWAP2"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "POP"
										},
										{
											"begin": 18747,
											"end": 18960,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "JUMPDEST"
										},
										{
											"begin": 26363,
											"end": 26367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26379,
											"end": 26391,
											"name": "DUP1"
										},
										{
											"begin": 26394,
											"end": 26419,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 26409,
											"end": 26411,
											"name": "DUP5"
										},
										{
											"begin": 26413,
											"end": 26418,
											"name": "DUP5"
										},
										{
											"begin": 26394,
											"end": 26408,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 26394,
											"end": 26419,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26394,
											"end": 26419,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 26394,
											"end": 26419,
											"name": "JUMPDEST"
										},
										{
											"begin": 26379,
											"end": 26419,
											"name": "SWAP1"
										},
										{
											"begin": 26379,
											"end": 26419,
											"name": "POP"
										},
										{
											"begin": 26433,
											"end": 26440,
											"name": "DUP1"
										},
										{
											"begin": 26429,
											"end": 26503,
											"name": "ISZERO"
										},
										{
											"begin": 26429,
											"end": 26503,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 26429,
											"end": 26503,
											"name": "JUMPI"
										},
										{
											"begin": 26456,
											"end": 26492,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 26470,
											"end": 26480,
											"name": "CALLER"
										},
										{
											"begin": 26482,
											"end": 26484,
											"name": "DUP6"
										},
										{
											"begin": 26486,
											"end": 26491,
											"name": "DUP6"
										},
										{
											"begin": 26456,
											"end": 26469,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 26456,
											"end": 26492,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26456,
											"end": 26492,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 26456,
											"end": 26492,
											"name": "JUMPDEST"
										},
										{
											"begin": 26429,
											"end": 26503,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 26429,
											"end": 26503,
											"name": "JUMPDEST"
										},
										{
											"begin": 26519,
											"end": 26526,
											"name": "DUP1"
										},
										{
											"begin": 26512,
											"end": 26526,
											"name": "SWAP2"
										},
										{
											"begin": 26512,
											"end": 26526,
											"name": "POP"
										},
										{
											"begin": 26512,
											"end": 26526,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP3"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "SWAP2"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "POP"
										},
										{
											"begin": 26302,
											"end": 26533,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "JUMPDEST"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "SLOAD"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "DUP2"
										},
										{
											"begin": 25242,
											"end": 25285,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "JUMPDEST"
										},
										{
											"begin": 31092,
											"end": 31099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31149,
											"end": 31158,
											"name": "DUP7"
										},
										{
											"begin": 31160,
											"end": 31166,
											"name": "DUP7"
										},
										{
											"begin": 31168,
											"end": 31171,
											"name": "DUP7"
										},
										{
											"begin": 31173,
											"end": 31179,
											"name": "DUP7"
										},
										{
											"begin": 31181,
											"end": 31185,
											"name": "DUP7"
										},
										{
											"begin": 31187,
											"end": 31193,
											"name": "DUP7"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MLOAD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "ADD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP1"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP8"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "NOT"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "AND"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "NOT"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "AND"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP2"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MSTORE"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "ADD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP7"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "AND"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "AND"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "SHL"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP2"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MSTORE"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "ADD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP6"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "AND"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "AND"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "SHL"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP2"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MSTORE"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "ADD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP5"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP2"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MSTORE"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "ADD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP4"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP2"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MSTORE"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "ADD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP3"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "DUP2"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MSTORE"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "ADD"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "SWAP7"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "POP"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "POP"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "POP"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "POP"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "POP"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "POP"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "POP"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "SWAP1"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31132,
											"end": 31194,
											"name": "MSTORE"
										},
										{
											"begin": 31122,
											"end": 31195,
											"name": "DUP1"
										},
										{
											"begin": 31122,
											"end": 31195,
											"name": "MLOAD"
										},
										{
											"begin": 31122,
											"end": 31195,
											"name": "SWAP1"
										},
										{
											"begin": 31122,
											"end": 31195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31122,
											"end": 31195,
											"name": "ADD"
										},
										{
											"begin": 31122,
											"end": 31195,
											"name": "KECCAK256"
										},
										{
											"begin": 31115,
											"end": 31195,
											"name": "SWAP1"
										},
										{
											"begin": 31115,
											"end": 31195,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP7"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "SWAP6"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "POP"
										},
										{
											"begin": 30879,
											"end": 31202,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMPDEST"
										},
										{
											"begin": 16610,
											"end": 16617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16647,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16648,
											"end": 16653,
											"name": "DUP5"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "SWAP1"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16654,
											"name": "KECCAK256"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16655,
											"end": 16662,
											"name": "DUP4"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "AND"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "SWAP1"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "DUP2"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "MSTORE"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "KECCAK256"
										},
										{
											"begin": 16636,
											"end": 16663,
											"name": "SLOAD"
										},
										{
											"begin": 16629,
											"end": 16663,
											"name": "SWAP1"
										},
										{
											"begin": 16629,
											"end": 16663,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP3"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "SWAP2"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16670,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "JUMPDEST"
										},
										{
											"begin": 25909,
											"end": 25914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25888,
											"end": 25894,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25895,
											"end": 25905,
											"name": "CALLER"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "AND"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "AND"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "DUP2"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "MSTORE"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "ADD"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "SWAP1"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "DUP2"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "MSTORE"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "ADD"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "KECCAK256"
										},
										{
											"begin": 25888,
											"end": 25906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "EXP"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "DUP2"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "SLOAD"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "DUP2"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "MUL"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "NOT"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "AND"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "SWAP1"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "DUP4"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "ISZERO"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "ISZERO"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "MUL"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "OR"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "SWAP1"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "SSTORE"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "POP"
										},
										{
											"begin": 25849,
											"end": 25921,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 24119,
											"end": 24127,
											"name": "DUP2"
										},
										{
											"begin": 24100,
											"end": 24118,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "JUMPDEST"
										},
										{
											"begin": 21581,
											"end": 21582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "AND"
										},
										{
											"begin": 21564,
											"end": 21569,
											"name": "DUP4"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "AND"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "EQ"
										},
										{
											"begin": 21564,
											"end": 21583,
											"name": "ISZERO"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "JUMPI"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MLOAD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MSTORE"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP3"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SUB"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP3"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MSTORE"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MSTORE"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "CODECOPY"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "ADD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "POP"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "POP"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "MLOAD"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "DUP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP2"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SUB"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "SWAP1"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "REVERT"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 21556,
											"end": 21624,
											"name": "JUMPDEST"
										},
										{
											"begin": 21661,
											"end": 21662,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "AND"
										},
										{
											"begin": 21642,
											"end": 21649,
											"name": "DUP3"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "AND"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "EQ"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ISZERO"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "JUMPI"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MLOAD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MSTORE"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP3"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SUB"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP3"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MSTORE"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MSTORE"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "CODECOPY"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "ADD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "POP"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "POP"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "MLOAD"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "DUP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP2"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SUB"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "SWAP1"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "REVERT"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 21634,
											"end": 21702,
											"name": "JUMPDEST"
										},
										{
											"begin": 21743,
											"end": 21748,
											"name": "DUP1"
										},
										{
											"begin": 21713,
											"end": 21724,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21725,
											"end": 21730,
											"name": "DUP6"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "SWAP1"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "KECCAK256"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21732,
											"end": 21739,
											"name": "DUP5"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "AND"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "SWAP1"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "MSTORE"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "ADD"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21713,
											"end": 21740,
											"name": "KECCAK256"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "DUP2"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "SWAP1"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "SSTORE"
										},
										{
											"begin": 21713,
											"end": 21748,
											"name": "POP"
										},
										{
											"begin": 21779,
											"end": 21786,
											"name": "DUP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "AND"
										},
										{
											"begin": 21772,
											"end": 21777,
											"name": "DUP4"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "AND"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21788,
											"end": 21793,
											"name": "DUP4"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "MLOAD"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP1"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP3"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "MSTORE"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "ADD"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SWAP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "POP"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "POP"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "MLOAD"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "DUP1"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SWAP2"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SUB"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "SWAP1"
										},
										{
											"begin": 21763,
											"end": 21794,
											"name": "LOG3"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "POP"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "POP"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "POP"
										},
										{
											"begin": 21472,
											"end": 21801,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7853,
											"end": 8118,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 7853,
											"end": 8118,
											"name": "JUMPDEST"
										},
										{
											"begin": 7922,
											"end": 7929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "DUP2"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "PUSH",
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "DUP3"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "SWAP2"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "SWAP1"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8042,
											"end": 8111,
											"name": "DUP1"
										},
										{
											"begin": 8042,
											"end": 8111,
											"name": "MLOAD"
										},
										{
											"begin": 8042,
											"end": 8111,
											"name": "SWAP1"
										},
										{
											"begin": 8042,
											"end": 8111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8042,
											"end": 8111,
											"name": "ADD"
										},
										{
											"begin": 8042,
											"end": 8111,
											"name": "KECCAK256"
										},
										{
											"begin": 8035,
											"end": 8111,
											"name": "SWAP1"
										},
										{
											"begin": 8035,
											"end": 8111,
											"name": "POP"
										},
										{
											"begin": 7853,
											"end": 8118,
											"name": "SWAP2"
										},
										{
											"begin": 7853,
											"end": 8118,
											"name": "SWAP1"
										},
										{
											"begin": 7853,
											"end": 8118,
											"name": "POP"
										},
										{
											"begin": 7853,
											"end": 8118,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "JUMPDEST"
										},
										{
											"begin": 5774,
											"end": 5781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5857,
											"name": "PUSH",
											"value": "41"
										},
										{
											"begin": 5835,
											"end": 5844,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5857,
											"name": "EQ"
										},
										{
											"begin": 5831,
											"end": 5903,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 5831,
											"end": 5903,
											"name": "JUMPI"
										},
										{
											"begin": 5889,
											"end": 5890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5892,
											"name": "SWAP1"
										},
										{
											"begin": 5873,
											"end": 5892,
											"name": "POP"
										},
										{
											"begin": 5873,
											"end": 5892,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 5873,
											"end": 5892,
											"name": "JUMP"
										},
										{
											"begin": 5831,
											"end": 5903,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 5831,
											"end": 5903,
											"name": "JUMPDEST"
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP1"
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6242,
											"end": 6251,
											"name": "DUP6"
										},
										{
											"begin": 6238,
											"end": 6258,
											"name": "ADD"
										},
										{
											"begin": 6232,
											"end": 6259,
											"name": "MLOAD"
										},
										{
											"begin": 6227,
											"end": 6259,
											"name": "SWAP3"
										},
										{
											"begin": 6227,
											"end": 6259,
											"name": "POP"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6287,
											"end": 6296,
											"name": "DUP6"
										},
										{
											"begin": 6283,
											"end": 6303,
											"name": "ADD"
										},
										{
											"begin": 6277,
											"end": 6304,
											"name": "MLOAD"
										},
										{
											"begin": 6272,
											"end": 6304,
											"name": "SWAP2"
										},
										{
											"begin": 6272,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 6351,
											"end": 6355,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6340,
											"end": 6349,
											"name": "DUP6"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "ADD"
										},
										{
											"begin": 6330,
											"end": 6357,
											"name": "MLOAD"
										},
										{
											"begin": 6327,
											"end": 6328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6358,
											"name": "BYTE"
										},
										{
											"begin": 6317,
											"end": 6358,
											"name": "SWAP1"
										},
										{
											"begin": 6317,
											"end": 6358,
											"name": "POP"
										},
										{
											"begin": 7269,
											"end": 7335,
											"name": "PUSH",
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "DUP3"
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "SHR"
										},
										{
											"begin": 7256,
											"end": 7335,
											"name": "GT"
										},
										{
											"begin": 7252,
											"end": 7379,
											"name": "ISZERO"
										},
										{
											"begin": 7252,
											"end": 7379,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 7252,
											"end": 7379,
											"name": "JUMPI"
										},
										{
											"begin": 7366,
											"end": 7367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7368,
											"name": "SWAP4"
										},
										{
											"begin": 7351,
											"end": 7368,
											"name": "POP"
										},
										{
											"begin": 7351,
											"end": 7368,
											"name": "POP"
										},
										{
											"begin": 7351,
											"end": 7368,
											"name": "POP"
										},
										{
											"begin": 7351,
											"end": 7368,
											"name": "POP"
										},
										{
											"begin": 7351,
											"end": 7368,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 7351,
											"end": 7368,
											"name": "JUMP"
										},
										{
											"begin": 7252,
											"end": 7379,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 7252,
											"end": 7379,
											"name": "JUMPDEST"
										},
										{
											"begin": 7398,
											"end": 7400,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "DUP2"
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "AND"
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "EQ"
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "ISZERO"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "DUP1"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "ISZERO"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "JUMPI"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "POP"
										},
										{
											"begin": 7409,
											"end": 7411,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "DUP2"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "AND"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "EQ"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "ISZERO"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "JUMPDEST"
										},
										{
											"begin": 7389,
											"end": 7455,
											"name": "ISZERO"
										},
										{
											"begin": 7389,
											"end": 7455,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 7389,
											"end": 7455,
											"name": "JUMPI"
										},
										{
											"begin": 7442,
											"end": 7443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "SWAP4"
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "POP"
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "POP"
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "POP"
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "POP"
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 7427,
											"end": 7444,
											"name": "JUMP"
										},
										{
											"begin": 7389,
											"end": 7455,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 7389,
											"end": 7455,
											"name": "JUMPDEST"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "DUP7"
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "DUP3"
										},
										{
											"begin": 7575,
											"end": 7576,
											"name": "DUP6"
										},
										{
											"begin": 7578,
											"end": 7579,
											"name": "DUP6"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MLOAD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP2"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MSTORE"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "ADD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MSTORE"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MLOAD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP1"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP6"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP2"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MSTORE"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "ADD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP5"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "AND"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "AND"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP2"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MSTORE"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "ADD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP4"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP2"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MSTORE"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "ADD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP3"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP2"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MSTORE"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "ADD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "SWAP5"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MLOAD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP2"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "SUB"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "SWAP1"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP1"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP5"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "SUB"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "SWAP1"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "DUP6"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "GAS"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "STATICCALL"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MLOAD"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "SUB"
										},
										{
											"begin": 7556,
											"end": 7580,
											"name": "MLOAD"
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "SWAP4"
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "POP"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "JUMPDEST"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "SWAP3"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "SWAP2"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "POP"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "POP"
										},
										{
											"begin": 5696,
											"end": 7587,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 920,
											"end": 927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP1"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "DUP3"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP5"
										},
										{
											"begin": 951,
											"end": 956,
											"name": "ADD"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 980,
											"name": "DUP4"
										},
										{
											"begin": 974,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 974,
											"end": 980,
											"name": "LT"
										},
										{
											"begin": 974,
											"end": 980,
											"name": "ISZERO"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPI"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "REVERT"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1"
										},
										{
											"begin": 1023,
											"end": 1031,
											"name": "SWAP2"
										},
										{
											"begin": 1023,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 1023,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "SWAP3"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "JUMPDEST"
										},
										{
											"begin": 19549,
											"end": 19550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "AND"
										},
										{
											"begin": 19531,
											"end": 19537,
											"name": "DUP4"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "AND"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "EQ"
										},
										{
											"begin": 19531,
											"end": 19551,
											"name": "ISZERO"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "JUMPI"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MLOAD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MSTORE"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP3"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SUB"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP3"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MSTORE"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MSTORE"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "CODECOPY"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "ADD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "POP"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "POP"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "MLOAD"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "DUP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP2"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SUB"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "SWAP1"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "REVERT"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 19523,
											"end": 19593,
											"name": "JUMPDEST"
										},
										{
											"begin": 19632,
											"end": 19633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19620,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "EQ"
										},
										{
											"begin": 19611,
											"end": 19634,
											"name": "ISZERO"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "JUMPI"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MLOAD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MSTORE"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP3"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SUB"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP3"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MSTORE"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MSTORE"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "CODECOPY"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "POP"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "POP"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "MLOAD"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP2"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SUB"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP1"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "REVERT"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "JUMPDEST"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 19727,
											"end": 19733,
											"name": "DUP2"
										},
										{
											"begin": 19705,
											"end": 19714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19715,
											"end": 19721,
											"name": "DUP7"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "AND"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "AND"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "DUP2"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "MSTORE"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "ADD"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "SWAP1"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "DUP2"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "MSTORE"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "ADD"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "KECCAK256"
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "SLOAD"
										},
										{
											"begin": 19705,
											"end": 19726,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 19705,
											"end": 19726,
											"name": "SWAP1"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "SWAP2"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "SWAP1"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "AND"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 19705,
											"end": 19734,
											"name": "JUMPDEST"
										},
										{
											"begin": 19685,
											"end": 19694,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19701,
											"name": "DUP6"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "AND"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "AND"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "DUP2"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "MSTORE"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "ADD"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "SWAP1"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "DUP2"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "MSTORE"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "ADD"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "KECCAK256"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "DUP2"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "SWAP1"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "SSTORE"
										},
										{
											"begin": 19685,
											"end": 19734,
											"name": "POP"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "DUP2"
										},
										{
											"begin": 19767,
											"end": 19776,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19777,
											"end": 19786,
											"name": "DUP6"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "AND"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "AND"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "DUP2"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "MSTORE"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "ADD"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "SWAP1"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "DUP2"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "MSTORE"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "ADD"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "KECCAK256"
										},
										{
											"begin": 19767,
											"end": 19787,
											"name": "SLOAD"
										},
										{
											"begin": 19767,
											"end": 19791,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 19767,
											"end": 19791,
											"name": "SWAP1"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "SWAP2"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "SWAP1"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "AND"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 19767,
											"end": 19799,
											"name": "JUMPDEST"
										},
										{
											"begin": 19744,
											"end": 19753,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19754,
											"end": 19763,
											"name": "DUP5"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "AND"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "AND"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "DUP2"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "MSTORE"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "ADD"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "SWAP1"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "DUP2"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "MSTORE"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "ADD"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "KECCAK256"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "DUP2"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "SWAP1"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "SSTORE"
										},
										{
											"begin": 19744,
											"end": 19799,
											"name": "POP"
										},
										{
											"begin": 19831,
											"end": 19840,
											"name": "DUP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "AND"
										},
										{
											"begin": 19823,
											"end": 19829,
											"name": "DUP4"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "AND"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19842,
											"end": 19848,
											"name": "DUP4"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "MLOAD"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP1"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP3"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "MSTORE"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "ADD"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SWAP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "POP"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "POP"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "MLOAD"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "DUP1"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SWAP2"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SUB"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "SWAP1"
										},
										{
											"begin": 19814,
											"end": 19849,
											"name": "LOG3"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "POP"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "POP"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "POP"
										},
										{
											"begin": 19434,
											"end": 19856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "JUMPDEST"
										},
										{
											"begin": 27342,
											"end": 27357,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 27342,
											"end": 27344,
											"name": "DUP3"
										},
										{
											"begin": 27342,
											"end": 27355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27342,
											"end": 27355,
											"name": "AND"
										},
										{
											"begin": 27342,
											"end": 27355,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 27342,
											"end": 27357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27342,
											"end": 27357,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 27342,
											"end": 27357,
											"name": "JUMPDEST"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "ISZERO"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "JUMPI"
										},
										{
											"begin": 27391,
											"end": 27396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27377,
											"end": 27396,
											"name": "ISZERO"
										},
										{
											"begin": 27377,
											"end": 27396,
											"name": "ISZERO"
										},
										{
											"begin": 27377,
											"end": 27383,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27384,
											"end": 27386,
											"name": "DUP5"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "AND"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "AND"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "DUP2"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "MSTORE"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "ADD"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "SWAP1"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "DUP2"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "MSTORE"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "ADD"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "KECCAK256"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "SWAP1"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "SLOAD"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "SWAP1"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "EXP"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "SWAP1"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "DIV"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 27377,
											"end": 27387,
											"name": "AND"
										},
										{
											"begin": 27377,
											"end": 27396,
											"name": "ISZERO"
										},
										{
											"begin": 27377,
											"end": 27396,
											"name": "ISZERO"
										},
										{
											"begin": 27377,
											"end": 27396,
											"name": "EQ"
										},
										{
											"begin": 27373,
											"end": 27405,
											"name": "ISZERO"
										},
										{
											"begin": 27373,
											"end": 27405,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 27373,
											"end": 27405,
											"name": "JUMPI"
										},
										{
											"begin": 27398,
											"end": 27405,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 27398,
											"end": 27405,
											"name": "JUMP"
										},
										{
											"begin": 27373,
											"end": 27405,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 27373,
											"end": 27405,
											"name": "JUMPDEST"
										},
										{
											"begin": 27434,
											"end": 27436,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27419,
											"end": 27452,
											"name": "AND"
										},
										{
											"begin": 27419,
											"end": 27452,
											"name": "PUSH",
											"value": "29E9A3B9"
										},
										{
											"begin": 27453,
											"end": 27457,
											"name": "DUP5"
										},
										{
											"begin": 27459,
											"end": 27461,
											"name": "DUP5"
										},
										{
											"begin": 27463,
											"end": 27468,
											"name": "DUP5"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "MLOAD"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP5"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "AND"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "SHL"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "MSTORE"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "ADD"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP1"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP5"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "AND"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "AND"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "MSTORE"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "ADD"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP4"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "AND"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "AND"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "MSTORE"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "ADD"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP3"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "MSTORE"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "ADD"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "SWAP4"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "MLOAD"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP1"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP4"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "SUB"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP8"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "DUP1"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "GAS"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "CALL"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27469,
											"name": "POP"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "JUMP"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "JUMPDEST"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "SWAP1"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "SLOAD"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "SWAP1"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "EXP"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "SWAP1"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "DIV"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27510,
											"end": 27521,
											"name": "AND"
										},
										{
											"begin": 27504,
											"end": 27521,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27521,
											"name": "AND"
										},
										{
											"begin": 27504,
											"end": 27506,
											"name": "DUP3"
										},
										{
											"begin": 27504,
											"end": 27521,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27521,
											"name": "AND"
										},
										{
											"begin": 27504,
											"end": 27521,
											"name": "EQ"
										},
										{
											"begin": 27500,
											"end": 27581,
											"name": "ISZERO"
										},
										{
											"begin": 27500,
											"end": 27581,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 27500,
											"end": 27581,
											"name": "JUMPI"
										},
										{
											"begin": 27541,
											"end": 27566,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "SWAP1"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "SLOAD"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "SWAP1"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "EXP"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "SWAP1"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "DIV"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27547,
											"end": 27558,
											"name": "AND"
										},
										{
											"begin": 27560,
											"end": 27565,
											"name": "DUP3"
										},
										{
											"begin": 27541,
											"end": 27546,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 27541,
											"end": 27566,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27541,
											"end": 27566,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 27541,
											"end": 27566,
											"name": "JUMPDEST"
										},
										{
											"begin": 27500,
											"end": 27581,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 27500,
											"end": 27581,
											"name": "JUMPDEST"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 27338,
											"end": 27591,
											"name": "JUMPDEST"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "JUMPDEST"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "POP"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "POP"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "POP"
										},
										{
											"begin": 27255,
											"end": 27597,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "JUMPDEST"
										},
										{
											"begin": 17499,
											"end": 17503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 17525,
											"end": 17531,
											"name": "DUP5"
										},
										{
											"begin": 17533,
											"end": 17542,
											"name": "DUP5"
										},
										{
											"begin": 17544,
											"end": 17550,
											"name": "DUP5"
										},
										{
											"begin": 17515,
											"end": 17524,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 17515,
											"end": 17551,
											"name": "JUMPDEST"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 17570,
											"end": 17576,
											"name": "DUP5"
										},
										{
											"begin": 17578,
											"end": 17588,
											"name": "CALLER"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 17626,
											"end": 17632,
											"name": "DUP6"
										},
										{
											"begin": 17590,
											"end": 17601,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17608,
											"name": "DUP11"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "KECCAK256"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17610,
											"end": 17620,
											"name": "CALLER"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "DUP2"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "MSTORE"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "ADD"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "KECCAK256"
										},
										{
											"begin": 17590,
											"end": 17621,
											"name": "SLOAD"
										},
										{
											"begin": 17590,
											"end": 17625,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 17590,
											"end": 17625,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "SWAP2"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "SWAP1"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "AND"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 17590,
											"end": 17633,
											"name": "JUMPDEST"
										},
										{
											"begin": 17561,
											"end": 17569,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 17561,
											"end": 17634,
											"name": "JUMPDEST"
										},
										{
											"begin": 17651,
											"end": 17655,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17644,
											"end": 17655,
											"name": "SWAP1"
										},
										{
											"begin": 17644,
											"end": 17655,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP4"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "SWAP3"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "POP"
										},
										{
											"begin": 17410,
											"end": 17662,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "JUMPDEST"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1393,
											"name": "DUP3"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "GT"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "ISZERO"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "JUMPI"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MLOAD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP3"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SUB"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP3"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MSTORE"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "ADD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SWAP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "MLOAD"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "DUP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SWAP2"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SUB"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "SWAP1"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "REVERT"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 1379,
											"end": 1428,
											"name": "JUMPDEST"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "DUP3"
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "DUP5"
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "SUB"
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "SWAP1"
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "SWAP2"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "SWAP3"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "SWAP2"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1481,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20126,
											"end": 20428,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 20126,
											"end": 20428,
											"name": "JUMPDEST"
										},
										{
											"begin": 20220,
											"end": 20221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20201,
											"end": 20222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20201,
											"end": 20222,
											"name": "AND"
										},
										{
											"begin": 20201,
											"end": 20208,
											"name": "DUP3"
										},
										{
											"begin": 20201,
											"end": 20222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20201,
											"end": 20222,
											"name": "AND"
										},
										{
											"begin": 20201,
											"end": 20222,
											"name": "EQ"
										},
										{
											"begin": 20201,
											"end": 20222,
											"name": "ISZERO"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "JUMPI"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "MLOAD"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP2"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "MSTORE"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "ADD"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP1"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP1"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "ADD"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP3"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP2"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "SUB"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP3"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "MSTORE"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP2"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "MSTORE"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "ADD"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP1"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP2"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "MSTORE"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "POP"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "ADD"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "SWAP2"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "POP"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "POP"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "MLOAD"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "DUP1"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "SWAP2"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "SUB"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "SWAP1"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "REVERT"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 20193,
											"end": 20258,
											"name": "JUMPDEST"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 20301,
											"end": 20307,
											"name": "DUP2"
										},
										{
											"begin": 20284,
											"end": 20296,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 20284,
											"end": 20296,
											"name": "SLOAD"
										},
										{
											"begin": 20284,
											"end": 20300,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 20284,
											"end": 20300,
											"name": "SWAP1"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "SWAP2"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "SWAP1"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "AND"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 20284,
											"end": 20308,
											"name": "JUMPDEST"
										},
										{
											"begin": 20269,
											"end": 20281,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 20269,
											"end": 20308,
											"name": "DUP2"
										},
										{
											"begin": 20269,
											"end": 20308,
											"name": "SWAP1"
										},
										{
											"begin": 20269,
											"end": 20308,
											"name": "SSTORE"
										},
										{
											"begin": 20269,
											"end": 20308,
											"name": "POP"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 20362,
											"end": 20368,
											"name": "DUP2"
										},
										{
											"begin": 20339,
											"end": 20348,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20349,
											"end": 20356,
											"name": "DUP6"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "AND"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "AND"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "DUP2"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "MSTORE"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "ADD"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "SWAP1"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "DUP2"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "MSTORE"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "ADD"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "KECCAK256"
										},
										{
											"begin": 20339,
											"end": 20357,
											"name": "SLOAD"
										},
										{
											"begin": 20339,
											"end": 20361,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 20339,
											"end": 20361,
											"name": "SWAP1"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "SWAP2"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "SWAP1"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "AND"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 20339,
											"end": 20369,
											"name": "JUMPDEST"
										},
										{
											"begin": 20318,
											"end": 20327,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20328,
											"end": 20335,
											"name": "DUP5"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "AND"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "AND"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "DUP2"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "MSTORE"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "ADD"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "SWAP1"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "DUP2"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "MSTORE"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "ADD"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "KECCAK256"
										},
										{
											"begin": 20318,
											"end": 20369,
											"name": "DUP2"
										},
										{
											"begin": 20318,
											"end": 20369,
											"name": "SWAP1"
										},
										{
											"begin": 20318,
											"end": 20369,
											"name": "SSTORE"
										},
										{
											"begin": 20318,
											"end": 20369,
											"name": "POP"
										},
										{
											"begin": 20405,
											"end": 20412,
											"name": "DUP2"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "AND"
										},
										{
											"begin": 20401,
											"end": 20402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "AND"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20414,
											"end": 20420,
											"name": "DUP4"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "MLOAD"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "DUP1"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "DUP3"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "DUP2"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "MSTORE"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "ADD"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "SWAP2"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "POP"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "POP"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "MLOAD"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "DUP1"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "SWAP2"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "SUB"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "SWAP1"
										},
										{
											"begin": 20384,
											"end": 20421,
											"name": "LOG3"
										},
										{
											"begin": 20126,
											"end": 20428,
											"name": "POP"
										},
										{
											"begin": 20126,
											"end": 20428,
											"name": "POP"
										},
										{
											"begin": 20126,
											"end": 20428,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 27603,
											"end": 27783,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 27603,
											"end": 27783,
											"name": "JUMPDEST"
										},
										{
											"begin": 27693,
											"end": 27694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27677,
											"end": 27689,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27677,
											"end": 27689,
											"name": "SLOAD"
										},
										{
											"begin": 27677,
											"end": 27694,
											"name": "EQ"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "JUMPI"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "MLOAD"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP2"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "MSTORE"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "ADD"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP1"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP1"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "ADD"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP3"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP2"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "SUB"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP3"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "MSTORE"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP2"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "MSTORE"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "ADD"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP1"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH data",
											"value": "BF109196A8EE399B1CF59E8DCC3AB096280107A55C33327A0228F023E60B89F9"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "SWAP2"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "CODECOPY"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "ADD"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "SWAP2"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "POP"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "POP"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "MLOAD"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "DUP1"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "SWAP2"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "SUB"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "SWAP1"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "REVERT"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 27669,
											"end": 27739,
											"name": "JUMPDEST"
										},
										{
											"begin": 27749,
											"end": 27776,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 27761,
											"end": 27768,
											"name": "DUP3"
										},
										{
											"begin": 27770,
											"end": 27775,
											"name": "DUP3"
										},
										{
											"begin": 27749,
											"end": 27760,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 27749,
											"end": 27776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27749,
											"end": 27776,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 27749,
											"end": 27776,
											"name": "JUMPDEST"
										},
										{
											"begin": 27603,
											"end": 27783,
											"name": "POP"
										},
										{
											"begin": 27603,
											"end": 27783,
											"name": "POP"
										},
										{
											"begin": 27603,
											"end": 27783,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "JUMPDEST"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 11480,
											"end": 11485,
											"name": "DUP4"
										},
										{
											"begin": 11510,
											"end": 11515,
											"name": "DUP5"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "AND"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "SWAP1"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "POP"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "SHL"
										},
										{
											"begin": 11535,
											"end": 11537,
											"name": "DUP5"
										},
										{
											"begin": 11539,
											"end": 11544,
											"name": "DUP5"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MLOAD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP4"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP3"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP3"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "NOT"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "JUMPDEST"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "JUMPDEST"
										},
										{
											"begin": 16396,
											"end": 16400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 16422,
											"end": 16432,
											"name": "CALLER"
										},
										{
											"begin": 16434,
											"end": 16443,
											"name": "DUP5"
										},
										{
											"begin": 16445,
											"end": 16451,
											"name": "DUP5"
										},
										{
											"begin": 16412,
											"end": 16421,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 16412,
											"end": 16452,
											"name": "JUMPDEST"
										},
										{
											"begin": 16469,
											"end": 16473,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16462,
											"end": 16473,
											"name": "SWAP1"
										},
										{
											"begin": 16462,
											"end": 16473,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP3"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "SWAP2"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "POP"
										},
										{
											"begin": 16327,
											"end": 16480,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "JUMPDEST"
										},
										{
											"begin": 24329,
											"end": 24330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "AND"
										},
										{
											"begin": 24309,
											"end": 24317,
											"name": "DUP2"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "AND"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "EQ"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "ISZERO"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "JUMPI"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MLOAD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MSTORE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP3"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SUB"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP3"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MSTORE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MSTORE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "CODECOPY"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "POP"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "POP"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MLOAD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SUB"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "REVERT"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "JUMPDEST"
										},
										{
											"begin": 24418,
											"end": 24426,
											"name": "DUP1"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "AND"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "DUP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SWAP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SLOAD"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SWAP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "EXP"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SWAP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "DIV"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "AND"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "AND"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "MLOAD"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "MLOAD"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "DUP1"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "SWAP2"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "SUB"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "SWAP1"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "LOG3"
										},
										{
											"begin": 24446,
											"end": 24454,
											"name": "DUP1"
										},
										{
											"begin": 24437,
											"end": 24443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24437,
											"end": 24443,
											"name": "DUP1"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "EXP"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "DUP2"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SLOAD"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "DUP2"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "MUL"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "NOT"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "AND"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SWAP1"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "DUP4"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "AND"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "MUL"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "OR"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SWAP1"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SSTORE"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "POP"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "POP"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "JUMPDEST"
										},
										{
											"begin": 4134,
											"end": 4138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4446,
											"end": 4453,
											"name": "DUP3"
										},
										{
											"begin": 4434,
											"end": 4454,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4426,
											"end": 4454,
											"name": "SWAP1"
										},
										{
											"begin": 4426,
											"end": 4454,
											"name": "POP"
										},
										{
											"begin": 4479,
											"end": 4480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4476,
											"name": "DUP2"
										},
										{
											"begin": 4472,
											"end": 4480,
											"name": "GT"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "SWAP2"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "SWAP2"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "SWAP1"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "POP"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20747,
											"end": 21047,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 20747,
											"end": 21047,
											"name": "JUMPDEST"
										},
										{
											"begin": 20840,
											"end": 20841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "AND"
										},
										{
											"begin": 20821,
											"end": 20828,
											"name": "DUP3"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "AND"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "EQ"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "ISZERO"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "JUMPI"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "MLOAD"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP2"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "MSTORE"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "ADD"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP1"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP1"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "ADD"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP3"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP2"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "SUB"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP3"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "MSTORE"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP2"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "MSTORE"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "ADD"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP1"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH data",
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "SWAP2"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "CODECOPY"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "ADD"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "SWAP2"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "POP"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "POP"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "MLOAD"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "DUP1"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "SWAP2"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "SUB"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "SWAP1"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "REVERT"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 20813,
											"end": 20880,
											"name": "JUMPDEST"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 20923,
											"end": 20928,
											"name": "DUP2"
										},
										{
											"begin": 20906,
											"end": 20918,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 20906,
											"end": 20918,
											"name": "SLOAD"
										},
										{
											"begin": 20906,
											"end": 20922,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 20906,
											"end": 20922,
											"name": "SWAP1"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "SWAP2"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "SWAP1"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "AND"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 20906,
											"end": 20929,
											"name": "JUMPDEST"
										},
										{
											"begin": 20891,
											"end": 20903,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 20891,
											"end": 20929,
											"name": "DUP2"
										},
										{
											"begin": 20891,
											"end": 20929,
											"name": "SWAP1"
										},
										{
											"begin": 20891,
											"end": 20929,
											"name": "SSTORE"
										},
										{
											"begin": 20891,
											"end": 20929,
											"name": "POP"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 20983,
											"end": 20988,
											"name": "DUP2"
										},
										{
											"begin": 20960,
											"end": 20969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20970,
											"end": 20977,
											"name": "DUP6"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "AND"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "AND"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "DUP2"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "MSTORE"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "ADD"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "SWAP1"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "DUP2"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "MSTORE"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "ADD"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "KECCAK256"
										},
										{
											"begin": 20960,
											"end": 20978,
											"name": "SLOAD"
										},
										{
											"begin": 20960,
											"end": 20982,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 20960,
											"end": 20982,
											"name": "SWAP1"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "SWAP2"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "SWAP1"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "AND"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 20960,
											"end": 20989,
											"name": "JUMPDEST"
										},
										{
											"begin": 20939,
											"end": 20948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20949,
											"end": 20956,
											"name": "DUP5"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "AND"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "AND"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "DUP2"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "MSTORE"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "ADD"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "SWAP1"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "DUP2"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "MSTORE"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "ADD"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20939,
											"end": 20957,
											"name": "KECCAK256"
										},
										{
											"begin": 20939,
											"end": 20989,
											"name": "DUP2"
										},
										{
											"begin": 20939,
											"end": 20989,
											"name": "SWAP1"
										},
										{
											"begin": 20939,
											"end": 20989,
											"name": "SSTORE"
										},
										{
											"begin": 20939,
											"end": 20989,
											"name": "POP"
										},
										{
											"begin": 21030,
											"end": 21031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "AND"
										},
										{
											"begin": 21013,
											"end": 21020,
											"name": "DUP3"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "AND"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 21034,
											"end": 21039,
											"name": "DUP4"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "MLOAD"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "DUP1"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "DUP3"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "DUP2"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "MSTORE"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "ADD"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "SWAP2"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "POP"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "POP"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "MLOAD"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "DUP1"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "SWAP2"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "SUB"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "SWAP1"
										},
										{
											"begin": 21004,
											"end": 21040,
											"name": "LOG3"
										},
										{
											"begin": 20747,
											"end": 21047,
											"name": "POP"
										},
										{
											"begin": 20747,
											"end": 21047,
											"name": "POP"
										},
										{
											"begin": 20747,
											"end": 21047,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "JUMPDEST"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 13941,
											"end": 13946,
											"name": "DUP3"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "AND"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "JUMPDEST"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "JUMPI"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MLOAD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP3"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SUB"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP3"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MLOAD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SUB"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "REVERT"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "JUMPDEST"
										},
										{
											"begin": 14067,
											"end": 14079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14104,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14116,
											"end": 14121,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14108,
											"end": 14127,
											"name": "AND"
										},
										{
											"begin": 14128,
											"end": 14132,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP3"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "ADD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "ADD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SUB"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP7"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "GAS"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "CALL"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14158,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "JUMPI"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SUB"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SUB"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "REVERT"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "JUMPDEST"
										},
										{
											"begin": 14230,
											"end": 14231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14210,
											"end": 14220,
											"name": "DUP2"
										},
										{
											"begin": 14210,
											"end": 14227,
											"name": "MLOAD"
										},
										{
											"begin": 14210,
											"end": 14231,
											"name": "GT"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "ISZERO"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "JUMPI"
										},
										{
											"begin": 14350,
											"end": 14360,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP2"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "MLOAD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP3"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP2"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "JUMPI"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP3"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP3"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "CODECOPY"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "REVERT"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "JUMPDEST"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "JUMPDEST"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"404F292E4068CDCD4D7EDF853A549D89B3798CE34C65EAF7DCF5A34F469BBEF7": "4275726e2061646472657373206d7573742068617665207a65726f2062616c616e636521",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"A432D77761E9F48572AA7AFEF8CC88428F6F968FFE5A0155B531C488448BA1EF": "45746865726c657373207472616e736665722066756e6374696f6e616c6974792064697361626c6564",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"BF109196A8EE399B1CF59E8DCC3AB096280107A55C33327A0228F023E60B89F9": "416c6c20746f6b656e73206d757374206265206d696e746564206265666f7265206275726e696e67",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F88C2B987653742ECD02849285169F1EAAADF3E37FF12E2783D5486B802D0976": "476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnAddress()": "70d5ae05",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"disableEtherlessTransfer()": "8c680798",
							"enableEtherlessTransfer()": "74686fd2",
							"etherlessTransferEnabled()": "59c42cc4",
							"hashForSign(bytes4,address,address,uint256,uint256,uint256)": "cbb98c3f",
							"increaseAllowance(address,uint256)": "39509351",
							"isOwner()": "8f32d59b",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"notify(address)": "5fb9cf20",
							"owner()": "8da5cb5b",
							"recoverTokens(address,address,uint256)": "5f3e849f",
							"register()": "1aa3a008",
							"renounceOwnership()": "715018a6",
							"setBurnAddress(address)": "4b0e7216",
							"symbol()": "95d89b41",
							"tokensToMint()": "cbafee8a",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferPreSigned(bytes,address,uint256,uint256,uint256)": "1296830d",
							"unregister()": "e79a198f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_signature\",\"type\":\"bytes\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"transferPreSigned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherlessTransferEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"notify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableEtherlessTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableEtherlessTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensToMint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_selector\",\"type\":\"bytes4\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"hashForSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unregister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"TransferPreSigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"hashForSign(bytes4,address,address,uint256,uint256,uint256)\":{\"params\":{\"_fee\":\"uint256 The amount of tokens paid to msg.sender, by the owner.\",\"_nonce\":\"uint256 Presigned transaction number.\",\"_to\":\"address The address which you want to transfer to.\",\"_token\":\"address The address of the token.\",\"_value\":\"uint256 The amount of tokens to be transferred.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferPreSigned(bytes,address,uint256,uint256,uint256)\":{\"params\":{\"_fee\":\"uint256 The amount of tokens paid to msg.sender, by the owner.\",\"_nonce\":\"uint256 Presigned transaction number. Should be unique, per user.\",\"_signature\":\"bytes The signature, issued by the owner.\",\"_to\":\"address The address which you want to transfer to.\",\"_value\":\"uint256 The amount of tokens to be transferred.\"}}}},\"userdoc\":{\"methods\":{\"hashForSign(bytes4,address,address,uint256,uint256,uint256)\":{\"notice\":\"Hash (keccak256) of the payload used by transferPreSigned\"},\"transferPreSigned(bytes,address,uint256,uint256,uint256)\":{\"notice\":\"Submit a presigned transfer\"}}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"NOIAToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"hashForSign(bytes4,address,address,uint256,uint256,uint256)": {
								"notice": "Hash (keccak256) of the payload used by transferPreSigned"
							},
							"transferPreSigned(bytes,address,uint256,uint256,uint256)": {
								"notice": "Submit a presigned transfer"
							}
						}
					}
				},
				"NOIAVault": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "lockTill",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "release",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "NOIA_TOKEN_ADDRESS",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"name": "_lockTill",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":31206:32724  contract NOIAVault is ITokenReceiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"input/NOIAVault.sol\":31206:32724  contract NOIAVault is ITokenReceiver {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":31206:32724  contract NOIAVault is ITokenReceiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"input/NOIAVault.sol\":31206:32724  contract NOIAVault is ITokenReceiver {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f3e849f\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x5f3e849f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x99972d6b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x0186ff33\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29e9a3b9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"input/NOIAVault.sol\":31412:31435  uint256 public lockTill */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":32606:32722  function tokensReceived(... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"input/NOIAVault.sol\":32606:32722  function tokensReceived(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      stop\n        /* \"input/NOIAVault.sol\":31380:31406  address public beneficiary */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":32246:32600  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"input/NOIAVault.sol\":32246:32600  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"input/NOIAVault.sol\":32009:32240  function release() public {... */\n    tag_7:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"input/NOIAVault.sol\":31282:31369  address public constant NOIA_TOKEN_ADDRESS = 0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n    tag_8:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":31591:32003  function initialize(address _beneficiary, uint256 _lockTill) public {... */\n    tag_9:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"input/NOIAVault.sol\":31591:32003  function initialize(address _beneficiary, uint256 _lockTill) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"input/NOIAVault.sol\":31412:31435  uint256 public lockTill */\n    tag_12:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":32606:32722  function tokensReceived(... */\n    tag_15:\n        /* \"input/NOIAVault.sol\":32706:32715  release() */\n      tag_29\n        /* \"input/NOIAVault.sol\":32706:32713  release */\n      tag_22\n        /* \"input/NOIAVault.sol\":32706:32715  release() */\n      jump\t// in\n    tag_29:\n        /* \"input/NOIAVault.sol\":32606:32722  function tokensReceived(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":31380:31406  address public beneficiary */\n    tag_17:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":32246:32600  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n    tag_20:\n        /* \"input/NOIAVault.sol\":31327:31369  0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n      0xfc858154c0b2c4a3323046fb505811f110ebda57\n        /* \"input/NOIAVault.sol\":31495:31530  NOIAToken(NOIA_TOKEN_ADDRESS).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"input/NOIAVault.sol\":31495:31532  NOIAToken(NOIA_TOKEN_ADDRESS).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"input/NOIAVault.sol\":31495:31532  NOIAToken(NOIA_TOKEN_ADDRESS).owner() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"input/NOIAVault.sol\":31495:31532  NOIAToken(NOIA_TOKEN_ADDRESS).owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"input/NOIAVault.sol\":31495:31532  NOIAToken(NOIA_TOKEN_ADDRESS).owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":31481:31532  msg.sender == NOIAToken(NOIA_TOKEN_ADDRESS).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":31481:31491  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":31481:31532  msg.sender == NOIAToken(NOIA_TOKEN_ADDRESS).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/NOIAVault.sol\":31473:31567  require(msg.sender == NOIAToken(NOIA_TOKEN_ADDRESS).owner(), \"Caller is not NOIA Token owner\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616c6c6572206973206e6f74204e4f494120546f6b656e206f776e65720000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"input/NOIAVault.sol\":31327:31369  0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n      0xfc858154c0b2c4a3323046fb505811f110ebda57\n        /* \"input/NOIAVault.sol\":32346:32382  address(token) != NOIA_TOKEN_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":32354:32359  token */\n      dup4\n        /* \"input/NOIAVault.sol\":32346:32382  address(token) != NOIA_TOKEN_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":32338:32412  require(address(token) != NOIA_TOKEN_ADDRESS, \"Cannot recover NOIA Token\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74207265636f766572204e4f494120546f6b656e00000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"input/NOIAVault.sol\":32422:32437  uint256 balance */\n      0x00\n        /* \"input/NOIAVault.sol\":32440:32445  token */\n      dup4\n        /* \"input/NOIAVault.sol\":32440:32455  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"input/NOIAVault.sol\":32464:32468  this */\n      address\n        /* \"input/NOIAVault.sol\":32440:32470  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"input/NOIAVault.sol\":32440:32470  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"input/NOIAVault.sol\":32440:32470  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"input/NOIAVault.sol\":32440:32470  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":32422:32470  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":32499:32505  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":32488:32495  balance */\n      dup2\n        /* \"input/NOIAVault.sol\":32488:32505  balance >= amount */\n      lt\n      iszero\n        /* \"input/NOIAVault.sol\":32480:32553  require(balance >= amount, \"Given amount is larger than current balance\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"input/NOIAVault.sol\":32563:32593  token.safeTransfer(to, amount) */\n      tag_41\n        /* \"input/NOIAVault.sol\":32582:32584  to */\n      dup4\n        /* \"input/NOIAVault.sol\":32586:32592  amount */\n      dup4\n        /* \"input/NOIAVault.sol\":32563:32568  token */\n      dup7\n        /* \"input/NOIAVault.sol\":32563:32581  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_42\n      swap1\n        /* \"input/NOIAVault.sol\":32563:32593  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_41:\n        /* \"input/NOIAVault.sol\":31577:31578  _ */\n      pop\n        /* \"input/NOIAVault.sol\":32246:32600  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":32009:32240  function release() public {... */\n    tag_22:\n        /* \"input/NOIAVault.sol\":32060:32063  now */\n      timestamp\n        /* \"input/NOIAVault.sol\":32049:32057  lockTill */\n      sload(0x01)\n        /* \"input/NOIAVault.sol\":32049:32063  lockTill > now */\n      gt\n        /* \"input/NOIAVault.sol\":32045:32072  if (lockTill > now) return; */\n      iszero\n      tag_44\n      jumpi\n        /* \"input/NOIAVault.sol\":32065:32072  return; */\n      jump(tag_43)\n        /* \"input/NOIAVault.sol\":32045:32072  if (lockTill > now) return; */\n    tag_44:\n        /* \"input/NOIAVault.sol\":32082:32097  NOIAToken token */\n      0x00\n        /* \"input/NOIAVault.sol\":31327:31369  0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n      0xfc858154c0b2c4a3323046fb505811f110ebda57\n        /* \"input/NOIAVault.sol\":32082:32129  NOIAToken token = NOIAToken(NOIA_TOKEN_ADDRESS) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":32139:32154  uint256 balance */\n      0x00\n        /* \"input/NOIAVault.sol\":32157:32162  token */\n      dup2\n        /* \"input/NOIAVault.sol\":32157:32172  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"input/NOIAVault.sol\":32181:32185  this */\n      address\n        /* \"input/NOIAVault.sol\":32157:32187  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"input/NOIAVault.sol\":32157:32187  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"input/NOIAVault.sol\":32157:32187  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"input/NOIAVault.sol\":32157:32187  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":32139:32187  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":32197:32202  token */\n      dup2\n        /* \"input/NOIAVault.sol\":32197:32211  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"input/NOIAVault.sol\":32212:32223  beneficiary */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":32225:32232  balance */\n      dup4\n        /* \"input/NOIAVault.sol\":32197:32233  token.transfer(beneficiary, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"input/NOIAVault.sol\":32197:32233  token.transfer(beneficiary, balance) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"input/NOIAVault.sol\":32197:32233  token.transfer(beneficiary, balance) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"input/NOIAVault.sol\":32197:32233  token.transfer(beneficiary, balance) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":32009:32240  function release() public {... */\n      pop\n      pop\n    tag_43:\n      jump\t// out\n        /* \"input/NOIAVault.sol\":31282:31369  address public constant NOIA_TOKEN_ADDRESS = 0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n    tag_24:\n        /* \"input/NOIAVault.sol\":31327:31369  0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n      0xfc858154c0b2c4a3323046fb505811f110ebda57\n        /* \"input/NOIAVault.sol\":31282:31369  address public constant NOIA_TOKEN_ADDRESS = 0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n      dup2\n      jump\t// out\n        /* \"input/NOIAVault.sol\":31591:32003  function initialize(address _beneficiary, uint256 _lockTill) public {... */\n    tag_27:\n        /* \"input/NOIAVault.sol\":31700:31701  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":31677:31702  beneficiary == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":31677:31688  beneficiary */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":31677:31702  beneficiary == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/NOIAVault.sol\":31669:31735  require(beneficiary == address(0), \"Vault is already initialized\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5661756c7420697320616c726561647920696e697469616c697a656400000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"input/NOIAVault.sol\":31777:31778  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":31753:31779  _beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":31753:31765  _beneficiary */\n      dup3\n        /* \"input/NOIAVault.sol\":31753:31779  _beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":31745:31811  require(_beneficiary != address(0), \"Locking to the zero address\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4c6f636b696e6720746f20746865207a65726f20616464726573730000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"input/NOIAVault.sol\":31841:31844  now */\n      timestamp\n        /* \"input/NOIAVault.sol\":31829:31838  _lockTill */\n      dup2\n        /* \"input/NOIAVault.sol\":31829:31844  _lockTill > now */\n      gt\n        /* \"input/NOIAVault.sol\":31821:31879  require(_lockTill > now, \"Locking time must be in future\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4c6f636b696e672074696d65206d75737420626520696e206675747572650000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"input/NOIAVault.sol\":31904:31916  _beneficiary */\n      dup2\n        /* \"input/NOIAVault.sol\":31890:31901  beneficiary */\n      0x00\n      dup1\n        /* \"input/NOIAVault.sol\":31890:31916  beneficiary = _beneficiary */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":31937:31946  _lockTill */\n      dup1\n        /* \"input/NOIAVault.sol\":31926:31934  lockTill */\n      0x01\n        /* \"input/NOIAVault.sol\":31926:31946  lockTill = _lockTill */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":31327:31369  0xfc858154C0b2c4A3323046Fb505811F110EBdA57 */\n      0xfc858154c0b2c4a3323046fb505811f110ebda57\n        /* \"input/NOIAVault.sol\":31956:31994  NOIAToken(NOIA_TOKEN_ADDRESS).register */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1aa3a008\n        /* \"input/NOIAVault.sol\":31956:31996  NOIAToken(NOIA_TOKEN_ADDRESS).register() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"input/NOIAVault.sol\":31956:31996  NOIAToken(NOIA_TOKEN_ADDRESS).register() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_56:\n        /* \"input/NOIAVault.sol\":31956:31996  NOIAToken(NOIA_TOKEN_ADDRESS).register() */\n      pop\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":31591:32003  function initialize(address _beneficiary, uint256 _lockTill) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":11379:11553  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_42:\n        /* \"input/NOIAVault.sol\":11461:11546  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_58\n        /* \"input/NOIAVault.sol\":11480:11485  token */\n      dup4\n        /* \"input/NOIAVault.sol\":11510:11515  token */\n      dup5\n        /* \"input/NOIAVault.sol\":11510:11524  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"input/NOIAVault.sol\":11510:11533  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"input/NOIAVault.sol\":11535:11537  to */\n      dup5\n        /* \"input/NOIAVault.sol\":11539:11544  value */\n      dup5\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"input/NOIAVault.sol\":11461:11479  callOptionalReturn */\n      tag_59\n        /* \"input/NOIAVault.sol\":11461:11546  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_58:\n        /* \"input/NOIAVault.sol\":11379:11553  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":13338:14433  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_59:\n        /* \"input/NOIAVault.sol\":13933:13960  address(token).isContract() */\n      tag_61\n        /* \"input/NOIAVault.sol\":13941:13946  token */\n      dup3\n        /* \"input/NOIAVault.sol\":13933:13958  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_62\n        /* \"input/NOIAVault.sol\":13933:13960  address(token).isContract() */\n      jump\t// in\n    tag_61:\n        /* \"input/NOIAVault.sol\":13925:13996  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"input/NOIAVault.sol\":14067:14079  bool success */\n      0x00\n        /* \"input/NOIAVault.sol\":14081:14104  bytes memory returndata */\n      0x60\n        /* \"input/NOIAVault.sol\":14116:14121  token */\n      dup4\n        /* \"input/NOIAVault.sol\":14108:14127  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":14128:14132  data */\n      dup4\n        /* \"input/NOIAVault.sol\":14108:14133  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_64:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_64)\n    tag_66:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":14108:14133  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_67)\n        /* \"--CODEGEN--\":16:47   */\n    tag_68:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_67:\n      pop\n        /* \"input/NOIAVault.sol\":14066:14133  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"input/NOIAVault.sol\":14151:14158  success */\n      dup2\n        /* \"input/NOIAVault.sol\":14143:14195  require(success, \"SafeERC20: low-level call failed\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"input/NOIAVault.sol\":14230:14231  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":14210:14220  returndata */\n      dup2\n        /* \"input/NOIAVault.sol\":14210:14227  returndata.length */\n      mload\n        /* \"input/NOIAVault.sol\":14210:14231  returndata.length > 0 */\n      gt\n        /* \"input/NOIAVault.sol\":14206:14427  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_70\n      jumpi\n        /* \"input/NOIAVault.sol\":14350:14360  returndata */\n      dup1\n        /* \"input/NOIAVault.sol\":14339:14369  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_71:\n        /* \"input/NOIAVault.sol\":14339:14369  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":14331:14416  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"input/NOIAVault.sol\":14206:14427  if (returndata.length > 0) { // Return data is optional... */\n    tag_70:\n        /* \"input/NOIAVault.sol\":13338:14433  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":4074:4487  function isContract(address account) internal view returns (bool) {... */\n    tag_62:\n        /* \"input/NOIAVault.sol\":4134:4138  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":4337:4349  uint256 size */\n      dup1\n        /* \"input/NOIAVault.sol\":4446:4453  account */\n      dup3\n        /* \"input/NOIAVault.sol\":4434:4454  extcodesize(account) */\n      extcodesize\n        /* \"input/NOIAVault.sol\":4426:4454  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":4479:4480  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":4472:4476  size */\n      dup2\n        /* \"input/NOIAVault.sol\":4472:4480  size > 0 */\n      gt\n        /* \"input/NOIAVault.sol\":4465:4480  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":4074:4487  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976 476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365\n\n    auxdata: 0xa265627a7a72305820d8d134b0cc9477643f8b8062c34cd64e17426f8352b9eada8c8daeb8d44c7cc564736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610e09806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635f3e849f1161005b5780635f3e849f1461015857806386d1a69f146101c657806399972d6b146101d0578063cd6dc6871461021a5761007d565b80630186ff331461008257806329e9a3b9146100a057806338af3eed1461010e575b600080fd5b61008a610268565b6040518082815260200191505060405180910390f35b61010c600480360360608110156100b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061026e565b005b61011661027b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c46004803603606081101561016e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102a0565b005b6101ce6105d1565b005b6101d861079e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102666004803603604081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107b6565b005b60015481565b6102766105d1565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73fc858154c0b2c4a3323046fb505811f110ebda5773ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102fa57600080fd5b505afa15801561030e573d6000803e3d6000fd5b505050506040513d602081101561032457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616c6c6572206973206e6f74204e4f494120546f6b656e206f776e6572000081525060200191505060405180910390fd5b73fc858154c0b2c4a3323046fb505811f110ebda5773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561048b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616e6e6f74207265636f766572204e4f494120546f6b656e0000000000000081525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561050a57600080fd5b505afa15801561051e573d6000803e3d6000fd5b505050506040513d602081101561053457600080fd5b81019080805190602001909291905050509050818110156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610daa602b913960400191505060405180910390fd5b6105cb83838673ffffffffffffffffffffffffffffffffffffffff16610a509092919063ffffffff16565b50505050565b4260015411156105e05761079c565b600073fc858154c0b2c4a3323046fb505811f110ebda57905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d60208110156106a257600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561075d57600080fd5b505af1158015610771573d6000803e3d6000fd5b505050506040513d602081101561078757600080fd5b81019080805190602001909291905050505050505b565b73fc858154c0b2c4a3323046fb505811f110ebda5781565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5661756c7420697320616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561091c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4c6f636b696e6720746f20746865207a65726f2061646472657373000000000081525060200191505060405180910390fd5b428111610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4c6f636b696e672074696d65206d75737420626520696e20667574757265000081525060200191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018190555073fc858154c0b2c4a3323046fb505811f110ebda5773ffffffffffffffffffffffffffffffffffffffff16631aa3a0086040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050505050565b610b1c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b21565b505050565b610b408273ffffffffffffffffffffffffffffffffffffffff16610d6c565b610bb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310610c015780518252602082019150602081019050602083039250610bde565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610c63576040519150601f19603f3d011682016040523d82523d6000602084013e610c68565b606091505b509150915081610ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115610d6657808060200190516020811015610cff57600080fd5b8101908080519060200190929190505050610d65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610d80602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365a265627a7a72305820d8d134b0cc9477643f8b8062c34cd64e17426f8352b9eada8c8daeb8d44c7cc564736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE09 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F3E849F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x99972D6B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x21A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x186FF33 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x29E9A3B9 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x116 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7B6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x5D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616C6C6572206973206E6F74204E4F494120546F6B656E206F776E65720000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207265636F766572204E4F494120546F6B656E00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDAA PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CB DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA50 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x1 SLOAD GT ISZERO PUSH2 0x5E0 JUMPI PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5661756C7420697320616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C6F636B696E6720746F20746865207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C6F636B696E672074696D65206D75737420626520696E206675747572650000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1AA3A008 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB1C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB40 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6C JUMP JUMPDEST PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xC01 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD66 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD80 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564476976656E20616D6F756E742069 PUSH20 0x206C6172676572207468616E2063757272656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365A265627A7A72305820D8D134B0 0xcc SWAP5 PUSH24 0x643F8B8062C34CD64E17426F8352B9EADA8C8DAEB8D44C7C 0xc5 PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "31206:1518:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31206:1518:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80635f3e849f1161005b5780635f3e849f1461015857806386d1a69f146101c657806399972d6b146101d0578063cd6dc6871461021a5761007d565b80630186ff331461008257806329e9a3b9146100a057806338af3eed1461010e575b600080fd5b61008a610268565b6040518082815260200191505060405180910390f35b61010c600480360360608110156100b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061026e565b005b61011661027b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c46004803603606081101561016e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102a0565b005b6101ce6105d1565b005b6101d861079e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102666004803603604081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107b6565b005b60015481565b6102766105d1565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73fc858154c0b2c4a3323046fb505811f110ebda5773ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102fa57600080fd5b505afa15801561030e573d6000803e3d6000fd5b505050506040513d602081101561032457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616c6c6572206973206e6f74204e4f494120546f6b656e206f776e6572000081525060200191505060405180910390fd5b73fc858154c0b2c4a3323046fb505811f110ebda5773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561048b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616e6e6f74207265636f766572204e4f494120546f6b656e0000000000000081525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561050a57600080fd5b505afa15801561051e573d6000803e3d6000fd5b505050506040513d602081101561053457600080fd5b81019080805190602001909291905050509050818110156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610daa602b913960400191505060405180910390fd5b6105cb83838673ffffffffffffffffffffffffffffffffffffffff16610a509092919063ffffffff16565b50505050565b4260015411156105e05761079c565b600073fc858154c0b2c4a3323046fb505811f110ebda57905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d60208110156106a257600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561075d57600080fd5b505af1158015610771573d6000803e3d6000fd5b505050506040513d602081101561078757600080fd5b81019080805190602001909291905050505050505b565b73fc858154c0b2c4a3323046fb505811f110ebda5781565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5661756c7420697320616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561091c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4c6f636b696e6720746f20746865207a65726f2061646472657373000000000081525060200191505060405180910390fd5b428111610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4c6f636b696e672074696d65206d75737420626520696e20667574757265000081525060200191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018190555073fc858154c0b2c4a3323046fb505811f110ebda5773ffffffffffffffffffffffffffffffffffffffff16631aa3a0086040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050505050565b610b1c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b21565b505050565b610b408273ffffffffffffffffffffffffffffffffffffffff16610d6c565b610bb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310610c015780518252602082019150602081019050602083039250610bde565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610c63576040519150601f19603f3d011682016040523d82523d6000602084013e610c68565b606091505b509150915081610ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115610d6657808060200190516020811015610cff57600080fd5b8101908080519060200190929190505050610d65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610d80602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365a265627a7a72305820d8d134b0cc9477643f8b8062c34cd64e17426f8352b9eada8c8daeb8d44c7cc564736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F3E849F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x99972D6B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x21A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x186FF33 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x29E9A3B9 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x116 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7B6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x5D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616C6C6572206973206E6F74204E4F494120546F6B656E206F776E65720000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207265636F766572204E4F494120546F6B656E00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDAA PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CB DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA50 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x1 SLOAD GT ISZERO PUSH2 0x5E0 JUMPI PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5661756C7420697320616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C6F636B696E6720746F20746865207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C6F636B696E672074696D65206D75737420626520696E206675747572650000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH20 0xFC858154C0B2C4A3323046FB505811F110EBDA57 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1AA3A008 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB1C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB40 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6C JUMP JUMPDEST PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xC01 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD66 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD80 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564476976656E20616D6F756E742069 PUSH20 0x206C6172676572207468616E2063757272656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365A265627A7A72305820D8D134B0 0xcc SWAP5 PUSH24 0x643F8B8062C34CD64E17426F8352B9EADA8C8DAEB8D44C7C 0xc5 PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "31206:1518:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31206:1518:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31412:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;32606:116;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32606:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;31380:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;32246:354;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32246:354:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;32009:231;;;:::i;:::-;;31282:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;31591:412;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;31591:412:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;31412:23;;;;:::o;32606:116::-;32706:9;:7;:9::i;:::-;32606:116;;;:::o;31380:26::-;;;;;;;;;;;;;:::o;32246:354::-;31327:42;31495:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31495:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31495:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;31495:37:0;;;;;;;;;;;;;;;;31481:51;;:10;:51;;;31473:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31327:42;32346:36;;32354:5;32346:36;;;;32338:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32422:15;32440:5;:15;;;32464:4;32440:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32440:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32440:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32440:30:0;;;;;;;;;;;;;;;;32422:48;;32499:6;32488:7;:17;;32480:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32563:30;32582:2;32586:6;32563:5;:18;;;;:30;;;;;:::i;:::-;31577:1;32246:354;;;:::o;32009:231::-;32060:3;32049:8;;:14;32045:27;;;32065:7;;32045:27;32082:15;31327:42;32082:47;;32139:15;32157:5;:15;;;32181:4;32157:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32157:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32157:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32157:30:0;;;;;;;;;;;;;;;;32139:48;;32197:5;:14;;;32212:11;;;;;;;;;;;32225:7;32197:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32197:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32197:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32197:36:0;;;;;;;;;;;;;;;;;32009:231;;;:::o;31282:87::-;31327:42;31282:87;:::o;31591:412::-;31700:1;31677:25;;:11;;;;;;;;;;;:25;;;31669:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31777:1;31753:26;;:12;:26;;;;31745:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31841:3;31829:9;:15;31821:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31904:12;31890:11;;:26;;;;;;;;;;;;;;;;;;31937:9;31926:8;:20;;;;31327:42;31956:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31956:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31956:40:0;;;;31591:412;;:::o;11379:174::-;11461:85;11480:5;11510;:14;;;:23;;;;11535:2;11539:5;11487:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11487:58:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;11487:58:0;11461:18;:85::i;:::-;11379:174;;;:::o;13338:1095::-;13933:27;13941:5;13933:25;;;:27::i;:::-;13925:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14067:12;14081:23;14116:5;14108:19;;14128:4;14108:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14108:25:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14066:67:0;;;;14151:7;14143:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14230:1;14210:10;:17;:21;14206:221;;;14350:10;14339:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14339:30:0;;;;;;;;;;;;;;;;14331:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14206:221;13338:1095;;;;:::o;4074:413::-;4134:4;4337:12;4446:7;4434:20;4426:28;;4479:1;4472:4;:8;4465:15;;;4074:413;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "718600",
								"executionCost": "753",
								"totalCost": "719353"
							},
							"external": {
								"NOIA_TOKEN_ADDRESS()": "261",
								"beneficiary()": "498",
								"initialize(address,uint256)": "infinite",
								"lockTill()": "406",
								"recoverTokens(address,address,uint256)": "infinite",
								"release()": "infinite",
								"tokensReceived(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 31206,
									"end": 32724,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "MSTORE"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "POP"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "DUP1"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "CODECOPY"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 31206,
									"end": 32724,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820d8d134b0cc9477643f8b8062c34cd64e17426f8352b9eada8c8daeb8d44c7cc564736f6c634300050a0032",
									".code": [
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "MSTORE"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "POP"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "LT"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "SHR"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "5F3E849F"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "GT"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "5F3E849F"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "EQ"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "86D1A69F"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "EQ"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "99972D6B"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "EQ"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "CD6DC687"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "EQ"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMP"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPDEST"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "186FF33"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "EQ"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "29E9A3B9"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "EQ"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "38AF3EED"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "EQ"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPI"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "JUMPDEST"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "DUP1"
										},
										{
											"begin": 31206,
											"end": 32724,
											"name": "REVERT"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "JUMPDEST"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "JUMPDEST"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "MLOAD"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "DUP1"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "DUP3"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "DUP2"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "MSTORE"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "ADD"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "SWAP2"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "POP"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "POP"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "MLOAD"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "DUP1"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "SWAP2"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "SUB"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "SWAP1"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "RETURN"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "JUMPDEST"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "DUP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "DUP2"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "ADD"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "DUP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "DUP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "AND"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "ADD"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP3"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP2"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "DUP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "AND"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "ADD"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP3"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP2"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "DUP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "ADD"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP3"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP2"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "SWAP1"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "POP"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "POP"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "POP"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "JUMPDEST"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "STOP"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "JUMPDEST"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "JUMPDEST"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "MLOAD"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "DUP1"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "DUP3"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "AND"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "AND"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "DUP2"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "MSTORE"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "ADD"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SWAP2"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "POP"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "POP"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "MLOAD"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "DUP1"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SWAP2"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SUB"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SWAP1"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "RETURN"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "JUMPDEST"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "DUP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "DUP2"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "ADD"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "DUP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "DUP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "AND"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "ADD"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP3"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP2"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "DUP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "AND"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "ADD"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP3"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP2"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "DUP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "ADD"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP3"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP2"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "SWAP1"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "POP"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "POP"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "POP"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "JUMPDEST"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "STOP"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "JUMPDEST"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "JUMPDEST"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "STOP"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "JUMPDEST"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "JUMPDEST"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "MLOAD"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "DUP1"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "DUP3"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "AND"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "AND"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "DUP2"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "MSTORE"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "ADD"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "SWAP2"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "POP"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "POP"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "MLOAD"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "DUP1"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "SWAP2"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "SUB"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "SWAP1"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "RETURN"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "JUMPDEST"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "DUP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "DUP2"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "ADD"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "DUP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "DUP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "AND"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "ADD"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP3"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP2"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "DUP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "ADD"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP3"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP2"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "SWAP1"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "POP"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "POP"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "POP"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "JUMPDEST"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "STOP"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "JUMPDEST"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "SLOAD"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "DUP2"
										},
										{
											"begin": 31412,
											"end": 31435,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "JUMPDEST"
										},
										{
											"begin": 32706,
											"end": 32715,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 32706,
											"end": 32713,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 32706,
											"end": 32715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32706,
											"end": 32715,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 32706,
											"end": 32715,
											"name": "JUMPDEST"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "POP"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "POP"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "POP"
										},
										{
											"begin": 32606,
											"end": 32722,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "JUMPDEST"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "DUP1"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SWAP1"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SLOAD"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SWAP1"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "EXP"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "SWAP1"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "DIV"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "AND"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "DUP2"
										},
										{
											"begin": 31380,
											"end": 31406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "JUMPDEST"
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "PUSH",
											"value": "FC858154C0B2C4A3323046FB505811F110EBDA57"
										},
										{
											"begin": 31495,
											"end": 31530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31495,
											"end": 31530,
											"name": "AND"
										},
										{
											"begin": 31495,
											"end": 31530,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "MLOAD"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP2"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "AND"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SHL"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP2"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "MSTORE"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "ADD"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "MLOAD"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP4"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SUB"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP2"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP7"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "GAS"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "STATICCALL"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "MLOAD"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP2"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "ADD"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SWAP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "DUP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "MLOAD"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SWAP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "ADD"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SWAP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SWAP3"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SWAP2"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "SWAP1"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31495,
											"end": 31532,
											"name": "POP"
										},
										{
											"begin": 31481,
											"end": 31532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31481,
											"end": 31532,
											"name": "AND"
										},
										{
											"begin": 31481,
											"end": 31491,
											"name": "CALLER"
										},
										{
											"begin": 31481,
											"end": 31532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31481,
											"end": 31532,
											"name": "AND"
										},
										{
											"begin": 31481,
											"end": 31532,
											"name": "EQ"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "JUMPI"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "MLOAD"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP2"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "MSTORE"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "ADD"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP1"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP1"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "ADD"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP3"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP2"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "SUB"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP3"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "MSTORE"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP2"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "MSTORE"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "ADD"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP1"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "43616C6C6572206973206E6F74204E4F494120546F6B656E206F776E65720000"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP2"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "MSTORE"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "POP"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "ADD"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "SWAP2"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "POP"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "POP"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "MLOAD"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "DUP1"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "SWAP2"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "SUB"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "SWAP1"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "REVERT"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 31473,
											"end": 31567,
											"name": "JUMPDEST"
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "PUSH",
											"value": "FC858154C0B2C4A3323046FB505811F110EBDA57"
										},
										{
											"begin": 32346,
											"end": 32382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32346,
											"end": 32382,
											"name": "AND"
										},
										{
											"begin": 32354,
											"end": 32359,
											"name": "DUP4"
										},
										{
											"begin": 32346,
											"end": 32382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32346,
											"end": 32382,
											"name": "AND"
										},
										{
											"begin": 32346,
											"end": 32382,
											"name": "EQ"
										},
										{
											"begin": 32346,
											"end": 32382,
											"name": "ISZERO"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "JUMPI"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "MLOAD"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP2"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "MSTORE"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "ADD"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP1"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP1"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "ADD"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP3"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP2"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "SUB"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP3"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "MSTORE"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP2"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "MSTORE"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "ADD"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP1"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "43616E6E6F74207265636F766572204E4F494120546F6B656E00000000000000"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP2"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "MSTORE"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "POP"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "ADD"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "SWAP2"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "POP"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "POP"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "MLOAD"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "DUP1"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "SWAP2"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "SUB"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "SWAP1"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "REVERT"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 32338,
											"end": 32412,
											"name": "JUMPDEST"
										},
										{
											"begin": 32422,
											"end": 32437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32440,
											"end": 32445,
											"name": "DUP4"
										},
										{
											"begin": 32440,
											"end": 32455,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32440,
											"end": 32455,
											"name": "AND"
										},
										{
											"begin": 32440,
											"end": 32455,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 32464,
											"end": 32468,
											"name": "ADDRESS"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "MLOAD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP3"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "AND"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SHL"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP2"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "MSTORE"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "ADD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP3"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "AND"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "AND"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP2"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "MSTORE"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "ADD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SWAP2"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "MLOAD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP4"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SUB"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP2"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP7"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "GAS"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "STATICCALL"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "MLOAD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP2"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "ADD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SWAP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "DUP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "MLOAD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SWAP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "ADD"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SWAP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SWAP3"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SWAP2"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "SWAP1"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32440,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32422,
											"end": 32470,
											"name": "SWAP1"
										},
										{
											"begin": 32422,
											"end": 32470,
											"name": "POP"
										},
										{
											"begin": 32499,
											"end": 32505,
											"name": "DUP2"
										},
										{
											"begin": 32488,
											"end": 32495,
											"name": "DUP2"
										},
										{
											"begin": 32488,
											"end": 32505,
											"name": "LT"
										},
										{
											"begin": 32488,
											"end": 32505,
											"name": "ISZERO"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "JUMPI"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "MLOAD"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP2"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "MSTORE"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "ADD"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP1"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP1"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "ADD"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP3"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP2"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "SUB"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP3"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "MSTORE"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP2"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "MSTORE"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "ADD"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP1"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH data",
											"value": "F88C2B987653742ECD02849285169F1EAAADF3E37FF12E2783D5486B802D0976"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "SWAP2"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "CODECOPY"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "ADD"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "SWAP2"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "POP"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "POP"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "MLOAD"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "DUP1"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "SWAP2"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "SUB"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "SWAP1"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "REVERT"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 32480,
											"end": 32553,
											"name": "JUMPDEST"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 32582,
											"end": 32584,
											"name": "DUP4"
										},
										{
											"begin": 32586,
											"end": 32592,
											"name": "DUP4"
										},
										{
											"begin": 32563,
											"end": 32568,
											"name": "DUP7"
										},
										{
											"begin": 32563,
											"end": 32581,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32563,
											"end": 32581,
											"name": "AND"
										},
										{
											"begin": 32563,
											"end": 32581,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 32563,
											"end": 32581,
											"name": "SWAP1"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "SWAP3"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "SWAP2"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "SWAP1"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "AND"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 32563,
											"end": 32593,
											"name": "JUMPDEST"
										},
										{
											"begin": 31577,
											"end": 31578,
											"name": "POP"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "POP"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "POP"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "POP"
										},
										{
											"begin": 32246,
											"end": 32600,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "JUMPDEST"
										},
										{
											"begin": 32060,
											"end": 32063,
											"name": "TIMESTAMP"
										},
										{
											"begin": 32049,
											"end": 32057,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 32049,
											"end": 32057,
											"name": "SLOAD"
										},
										{
											"begin": 32049,
											"end": 32063,
											"name": "GT"
										},
										{
											"begin": 32045,
											"end": 32072,
											"name": "ISZERO"
										},
										{
											"begin": 32045,
											"end": 32072,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 32045,
											"end": 32072,
											"name": "JUMPI"
										},
										{
											"begin": 32065,
											"end": 32072,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 32065,
											"end": 32072,
											"name": "JUMP"
										},
										{
											"begin": 32045,
											"end": 32072,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 32045,
											"end": 32072,
											"name": "JUMPDEST"
										},
										{
											"begin": 32082,
											"end": 32097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "PUSH",
											"value": "FC858154C0B2C4A3323046FB505811F110EBDA57"
										},
										{
											"begin": 32082,
											"end": 32129,
											"name": "SWAP1"
										},
										{
											"begin": 32082,
											"end": 32129,
											"name": "POP"
										},
										{
											"begin": 32139,
											"end": 32154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32157,
											"end": 32162,
											"name": "DUP2"
										},
										{
											"begin": 32157,
											"end": 32172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32172,
											"name": "AND"
										},
										{
											"begin": 32157,
											"end": 32172,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 32181,
											"end": 32185,
											"name": "ADDRESS"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "MLOAD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP3"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "AND"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SHL"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP2"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "MSTORE"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "ADD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP3"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "AND"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "AND"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP2"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "MSTORE"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "ADD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SWAP2"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "MLOAD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP4"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SUB"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP2"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP7"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "GAS"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "STATICCALL"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "MLOAD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP2"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "ADD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SWAP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "DUP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "MLOAD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SWAP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "ADD"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SWAP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SWAP3"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SWAP2"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "SWAP1"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32157,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32139,
											"end": 32187,
											"name": "SWAP1"
										},
										{
											"begin": 32139,
											"end": 32187,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32202,
											"name": "DUP2"
										},
										{
											"begin": 32197,
											"end": 32211,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32197,
											"end": 32211,
											"name": "AND"
										},
										{
											"begin": 32197,
											"end": 32211,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "DUP1"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "SWAP1"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "SLOAD"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "SWAP1"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "EXP"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "SWAP1"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "DIV"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32212,
											"end": 32223,
											"name": "AND"
										},
										{
											"begin": 32225,
											"end": 32232,
											"name": "DUP4"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "MLOAD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP4"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "AND"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SHL"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP2"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "MSTORE"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "ADD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP4"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "AND"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "AND"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP2"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "MSTORE"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "ADD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP3"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP2"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "MSTORE"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "ADD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SWAP3"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "MLOAD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP4"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SUB"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP2"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP8"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "GAS"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "CALL"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "MLOAD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP2"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "ADD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SWAP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "DUP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "MLOAD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SWAP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "ADD"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SWAP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SWAP3"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SWAP2"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "SWAP1"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32197,
											"end": 32233,
											"name": "POP"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "POP"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "POP"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "JUMPDEST"
										},
										{
											"begin": 32009,
											"end": 32240,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "JUMPDEST"
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "PUSH",
											"value": "FC858154C0B2C4A3323046FB505811F110EBDA57"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "DUP2"
										},
										{
											"begin": 31282,
											"end": 31369,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "JUMPDEST"
										},
										{
											"begin": 31700,
											"end": 31701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31677,
											"end": 31702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31677,
											"end": 31702,
											"name": "AND"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "DUP1"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "SWAP1"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "SLOAD"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "SWAP1"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "EXP"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "SWAP1"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "DIV"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31677,
											"end": 31688,
											"name": "AND"
										},
										{
											"begin": 31677,
											"end": 31702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31677,
											"end": 31702,
											"name": "AND"
										},
										{
											"begin": 31677,
											"end": 31702,
											"name": "EQ"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "JUMPI"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "MLOAD"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP2"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "MSTORE"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "ADD"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP1"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP1"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "ADD"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP3"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP2"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "SUB"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP3"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "MSTORE"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP2"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "MSTORE"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "ADD"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP1"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "5661756C7420697320616C726561647920696E697469616C697A656400000000"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP2"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "MSTORE"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "POP"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "ADD"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "SWAP2"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "POP"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "POP"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "MLOAD"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "DUP1"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "SWAP2"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "SUB"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "SWAP1"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "REVERT"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 31669,
											"end": 31735,
											"name": "JUMPDEST"
										},
										{
											"begin": 31777,
											"end": 31778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31753,
											"end": 31779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31753,
											"end": 31779,
											"name": "AND"
										},
										{
											"begin": 31753,
											"end": 31765,
											"name": "DUP3"
										},
										{
											"begin": 31753,
											"end": 31779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31753,
											"end": 31779,
											"name": "AND"
										},
										{
											"begin": 31753,
											"end": 31779,
											"name": "EQ"
										},
										{
											"begin": 31753,
											"end": 31779,
											"name": "ISZERO"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "JUMPI"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "MLOAD"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP2"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "MSTORE"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "ADD"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP1"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP1"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "ADD"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP3"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP2"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "SUB"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP3"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "MSTORE"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP2"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "MSTORE"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "ADD"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP1"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "4C6F636B696E6720746F20746865207A65726F20616464726573730000000000"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP2"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "MSTORE"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "POP"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "ADD"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "SWAP2"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "POP"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "POP"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "MLOAD"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "DUP1"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "SWAP2"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "SUB"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "SWAP1"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "REVERT"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 31745,
											"end": 31811,
											"name": "JUMPDEST"
										},
										{
											"begin": 31841,
											"end": 31844,
											"name": "TIMESTAMP"
										},
										{
											"begin": 31829,
											"end": 31838,
											"name": "DUP2"
										},
										{
											"begin": 31829,
											"end": 31844,
											"name": "GT"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "JUMPI"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "MLOAD"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP2"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "MSTORE"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "ADD"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP1"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP1"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "ADD"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP3"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP2"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "SUB"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP3"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "MSTORE"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP2"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "MSTORE"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "ADD"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP1"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "4C6F636B696E672074696D65206D75737420626520696E206675747572650000"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP2"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "MSTORE"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "POP"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "ADD"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "SWAP2"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "POP"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "POP"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "MLOAD"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "DUP1"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "SWAP2"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "SUB"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "SWAP1"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "REVERT"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 31821,
											"end": 31879,
											"name": "JUMPDEST"
										},
										{
											"begin": 31904,
											"end": 31916,
											"name": "DUP2"
										},
										{
											"begin": 31890,
											"end": 31901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31890,
											"end": 31901,
											"name": "DUP1"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "EXP"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "DUP2"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "SLOAD"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "DUP2"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "MUL"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "NOT"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "AND"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "SWAP1"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "DUP4"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "AND"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "MUL"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "OR"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "SWAP1"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "SSTORE"
										},
										{
											"begin": 31890,
											"end": 31916,
											"name": "POP"
										},
										{
											"begin": 31937,
											"end": 31946,
											"name": "DUP1"
										},
										{
											"begin": 31926,
											"end": 31934,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 31926,
											"end": 31946,
											"name": "DUP2"
										},
										{
											"begin": 31926,
											"end": 31946,
											"name": "SWAP1"
										},
										{
											"begin": 31926,
											"end": 31946,
											"name": "SSTORE"
										},
										{
											"begin": 31926,
											"end": 31946,
											"name": "POP"
										},
										{
											"begin": 31327,
											"end": 31369,
											"name": "PUSH",
											"value": "FC858154C0B2C4A3323046FB505811F110EBDA57"
										},
										{
											"begin": 31956,
											"end": 31994,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31956,
											"end": 31994,
											"name": "AND"
										},
										{
											"begin": 31956,
											"end": 31994,
											"name": "PUSH",
											"value": "1AA3A008"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "MLOAD"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "DUP2"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "AND"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "SHL"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "DUP2"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "MSTORE"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "ADD"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "MLOAD"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "DUP1"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "DUP4"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "SUB"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "DUP2"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "DUP8"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "DUP1"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "POP"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "GAS"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "CALL"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "POP"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "POP"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "POP"
										},
										{
											"begin": 31956,
											"end": 31996,
											"name": "POP"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "POP"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "POP"
										},
										{
											"begin": 31591,
											"end": 32003,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "JUMPDEST"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11480,
											"end": 11485,
											"name": "DUP4"
										},
										{
											"begin": 11510,
											"end": 11515,
											"name": "DUP5"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "AND"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "SWAP1"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "POP"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "SHL"
										},
										{
											"begin": 11535,
											"end": 11537,
											"name": "DUP5"
										},
										{
											"begin": 11539,
											"end": 11544,
											"name": "DUP5"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MLOAD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP4"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP3"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP3"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "NOT"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "JUMPDEST"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "JUMPDEST"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 13941,
											"end": 13946,
											"name": "DUP3"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "AND"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "JUMPDEST"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "JUMPI"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MLOAD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP3"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SUB"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP3"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MLOAD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SUB"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "REVERT"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "JUMPDEST"
										},
										{
											"begin": 14067,
											"end": 14079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14104,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14116,
											"end": 14121,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14108,
											"end": 14127,
											"name": "AND"
										},
										{
											"begin": 14128,
											"end": 14132,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP3"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "ADD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "ADD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SUB"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP7"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "GAS"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "CALL"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14158,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "JUMPI"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SUB"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SUB"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "REVERT"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "JUMPDEST"
										},
										{
											"begin": 14230,
											"end": 14231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14210,
											"end": 14220,
											"name": "DUP2"
										},
										{
											"begin": 14210,
											"end": 14227,
											"name": "MLOAD"
										},
										{
											"begin": 14210,
											"end": 14231,
											"name": "GT"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "ISZERO"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "JUMPI"
										},
										{
											"begin": 14350,
											"end": 14360,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP2"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "MLOAD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP3"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP2"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "JUMPI"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP3"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP3"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "CODECOPY"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "REVERT"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "JUMPDEST"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "JUMPDEST"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "JUMPDEST"
										},
										{
											"begin": 4134,
											"end": 4138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4446,
											"end": 4453,
											"name": "DUP3"
										},
										{
											"begin": 4434,
											"end": 4454,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4426,
											"end": 4454,
											"name": "SWAP1"
										},
										{
											"begin": 4426,
											"end": 4454,
											"name": "POP"
										},
										{
											"begin": 4479,
											"end": 4480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4476,
											"name": "DUP2"
										},
										{
											"begin": 4472,
											"end": 4480,
											"name": "GT"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "SWAP2"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "SWAP2"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "SWAP1"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "POP"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F88C2B987653742ECD02849285169F1EAAADF3E37FF12E2783D5486B802D0976": "476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"NOIA_TOKEN_ADDRESS()": "99972d6b",
							"beneficiary()": "38af3eed",
							"initialize(address,uint256)": "cd6dc687",
							"lockTill()": "0186ff33",
							"recoverTokens(address,address,uint256)": "5f3e849f",
							"release()": "86d1a69f",
							"tokensReceived(address,address,uint256)": "29e9a3b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"lockTill\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NOIA_TOKEN_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_lockTill\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"NOIAVault\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"Ownable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":11291:14435  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":11291:14435  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7230582073ade9e21b8ed6326bc89fdc8313a68e98e2d03d9264c67cc634f622efe2de0964736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7230582073ade9e21b8ed6326bc89fdc8313a68e98e2d03d9264c67cc634f622efe2de0964736f6c634300050a0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH20 0xADE9E21B8ED6326BC89FDC8313A68E98E2D03D92 PUSH5 0xC67CC634F6 0x22 0xef 0xe2 0xde MULMOD PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "11291:3144:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7230582073ade9e21b8ed6326bc89fdc8313a68e98e2d03d9264c67cc634f622efe2de0964736f6c634300050a0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH20 0xADE9E21B8ED6326BC89FDC8313A68E98E2D03D92 PUSH5 0xC67CC634F6 0x22 0xef 0xe2 0xde MULMOD PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "11291:3144:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11291,
									"end": 14435,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11291,
									"end": 14435,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7230582073ade9e21b8ed6326bc89fdc8313a68e98e2d03d9264c67cc634f622efe2de0964736f6c634300050a0032",
									".code": [
										{
											"begin": 11291,
											"end": 14435,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "ADDRESS"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "EQ"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "MSTORE"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "DUP1"
										},
										{
											"begin": 11291,
											"end": 14435,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"SafeERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":617:3555  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":617:3555  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058206f0119b0d6a7bd92ef9996e788c5943d0a4efa13a73af46d56a314d5d4a4d33a64736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058206f0119b0d6a7bd92ef9996e788c5943d0a4efa13a73af46d56a314d5d4a4d33a64736f6c634300050a0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH16 0x119B0D6A7BD92EF9996E788C5943D0A 0x4e STATICCALL SGT 0xa7 GASPRICE DELEGATECALL PUSH14 0x56A314D5D4A4D33A64736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "617:2938:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723058206f0119b0d6a7bd92ef9996e788c5943d0a4efa13a73af46d56a314d5d4a4d33a64736f6c634300050a0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH16 0x119B0D6A7BD92EF9996E788C5943D0A 0x4e STATICCALL SGT 0xa7 GASPRICE DELEGATECALL PUSH14 0x56A314D5D4A4D33A64736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "617:2938:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 617,
									"end": 3555,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 3555,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723058206f0119b0d6a7bd92ef9996e788c5943d0a4efa13a73af46d56a314d5d4a4d33a64736f6c634300050a0032",
									".code": [
										{
											"begin": 617,
											"end": 3555,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "ADDRESS"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "EQ"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "MSTORE"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 3555,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"SafeMath\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"TokenRecoverable": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"input/NOIAVault.sol\":24606:24954  contract TokenRecoverable is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"input/NOIAVault.sol\":22809:22819  msg.sender */\n  caller\n    /* \"input/NOIAVault.sol\":22800:22806  _owner */\n  0x00\n  dup1\n    /* \"input/NOIAVault.sol\":22800:22819  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/NOIAVault.sol\":22867:22873  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"input/NOIAVault.sol\":22834:22874  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"input/NOIAVault.sol\":22863:22864  0 */\n  0x00\n    /* \"input/NOIAVault.sol\":22834:22874  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"input/NOIAVault.sol\":24606:24954  contract TokenRecoverable is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/NOIAVault.sol\":24606:24954  contract TokenRecoverable is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"input/NOIAVault.sol\":24606:24954  contract TokenRecoverable is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f3e849f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      stop\n        /* \"input/NOIAVault.sol\":23742:23879  function renounceOwnership() public onlyOwner {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"input/NOIAVault.sol\":22957:23034  function owner() public view returns (address) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":23308:23398  function isOwner() public view returns (bool) {... */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_21\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_16\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_21:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"input/NOIAVault.sol\":24774:24789  uint256 balance */\n      0x00\n        /* \"input/NOIAVault.sol\":24792:24797  token */\n      dup4\n        /* \"input/NOIAVault.sol\":24792:24807  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"input/NOIAVault.sol\":24816:24820  this */\n      address\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"input/NOIAVault.sol\":24792:24822  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":24774:24822  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":24851:24857  amount */\n      dup2\n        /* \"input/NOIAVault.sol\":24840:24847  balance */\n      dup2\n        /* \"input/NOIAVault.sol\":24840:24857  balance >= amount */\n      lt\n      iszero\n        /* \"input/NOIAVault.sol\":24832:24905  require(balance >= amount, \"Given amount is larger than current balance\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"input/NOIAVault.sol\":24915:24945  token.safeTransfer(to, amount) */\n      tag_28\n        /* \"input/NOIAVault.sol\":24934:24936  to */\n      dup4\n        /* \"input/NOIAVault.sol\":24938:24944  amount */\n      dup4\n        /* \"input/NOIAVault.sol\":24915:24920  token */\n      dup7\n        /* \"input/NOIAVault.sol\":24915:24933  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_29\n      swap1\n        /* \"input/NOIAVault.sol\":24915:24945  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n        /* \"input/NOIAVault.sol\":23217:23218  _ */\n      pop\n        /* \"input/NOIAVault.sol\":24682:24952  function recoverTokens(IERC20 token, address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":23742:23879  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_31\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_16\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_31:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"input/NOIAVault.sol\":23840:23841  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":23803:23843  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23824:23830  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23803:23843  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":23870:23871  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":23853:23859  _owner */\n      dup1\n      0x00\n        /* \"input/NOIAVault.sol\":23853:23872  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":23742:23879  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"input/NOIAVault.sol\":22957:23034  function owner() public view returns (address) {... */\n    tag_14:\n        /* \"input/NOIAVault.sol\":22995:23002  address */\n      0x00\n        /* \"input/NOIAVault.sol\":23021:23027  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23014:23027  return _owner */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":22957:23034  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"input/NOIAVault.sol\":23308:23398  function isOwner() public view returns (bool) {... */\n    tag_16:\n        /* \"input/NOIAVault.sol\":23348:23352  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":23385:23391  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23371:23391  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":23371:23381  msg.sender */\n      caller\n        /* \"input/NOIAVault.sol\":23371:23391  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/NOIAVault.sol\":23364:23391  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":23308:23398  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_19:\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      tag_37\n        /* \"input/NOIAVault.sol\":23161:23168  isOwner */\n      tag_16\n        /* \"input/NOIAVault.sol\":23161:23170  isOwner() */\n      jump\t// in\n    tag_37:\n        /* \"input/NOIAVault.sol\":23153:23207  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"input/NOIAVault.sol\":24100:24128  _transferOwnership(newOwner) */\n      tag_40\n        /* \"input/NOIAVault.sol\":24119:24127  newOwner */\n      dup2\n        /* \"input/NOIAVault.sol\":24100:24118  _transferOwnership */\n      tag_41\n        /* \"input/NOIAVault.sol\":24100:24128  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_40:\n        /* \"input/NOIAVault.sol\":24028:24135  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":11379:11553  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_29:\n        /* \"input/NOIAVault.sol\":11461:11546  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_43\n        /* \"input/NOIAVault.sol\":11480:11485  token */\n      dup4\n        /* \"input/NOIAVault.sol\":11510:11515  token */\n      dup5\n        /* \"input/NOIAVault.sol\":11510:11524  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"input/NOIAVault.sol\":11510:11533  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"input/NOIAVault.sol\":11535:11537  to */\n      dup5\n        /* \"input/NOIAVault.sol\":11539:11544  value */\n      dup5\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":11487:11545  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"input/NOIAVault.sol\":11461:11479  callOptionalReturn */\n      tag_44\n        /* \"input/NOIAVault.sol\":11461:11546  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_43:\n        /* \"input/NOIAVault.sol\":11379:11553  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":24236:24461  function _transferOwnership(address newOwner) internal {... */\n    tag_41:\n        /* \"input/NOIAVault.sol\":24329:24330  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":24309:24331  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":24309:24317  newOwner */\n      dup2\n        /* \"input/NOIAVault.sol\":24309:24331  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/NOIAVault.sol\":24301:24374  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"input/NOIAVault.sol\":24418:24426  newOwner */\n      dup1\n        /* \"input/NOIAVault.sol\":24389:24427  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":24410:24416  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":24389:24427  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"input/NOIAVault.sol\":24446:24454  newOwner */\n      dup1\n        /* \"input/NOIAVault.sol\":24437:24443  _owner */\n      0x00\n      dup1\n        /* \"input/NOIAVault.sol\":24437:24454  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/NOIAVault.sol\":24236:24461  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":13338:14433  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_44:\n        /* \"input/NOIAVault.sol\":13933:13960  address(token).isContract() */\n      tag_48\n        /* \"input/NOIAVault.sol\":13941:13946  token */\n      dup3\n        /* \"input/NOIAVault.sol\":13933:13958  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_49\n        /* \"input/NOIAVault.sol\":13933:13960  address(token).isContract() */\n      jump\t// in\n    tag_48:\n        /* \"input/NOIAVault.sol\":13925:13996  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"input/NOIAVault.sol\":14067:14079  bool success */\n      0x00\n        /* \"input/NOIAVault.sol\":14081:14104  bytes memory returndata */\n      0x60\n        /* \"input/NOIAVault.sol\":14116:14121  token */\n      dup4\n        /* \"input/NOIAVault.sol\":14108:14127  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/NOIAVault.sol\":14128:14132  data */\n      dup4\n        /* \"input/NOIAVault.sol\":14108:14133  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_51:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_51)\n    tag_53:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":14108:14133  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_54)\n        /* \"--CODEGEN--\":16:47   */\n    tag_55:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_54:\n      pop\n        /* \"input/NOIAVault.sol\":14066:14133  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"input/NOIAVault.sol\":14151:14158  success */\n      dup2\n        /* \"input/NOIAVault.sol\":14143:14195  require(success, \"SafeERC20: low-level call failed\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"input/NOIAVault.sol\":14230:14231  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":14210:14220  returndata */\n      dup2\n        /* \"input/NOIAVault.sol\":14210:14227  returndata.length */\n      mload\n        /* \"input/NOIAVault.sol\":14210:14231  returndata.length > 0 */\n      gt\n        /* \"input/NOIAVault.sol\":14206:14427  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_57\n      jumpi\n        /* \"input/NOIAVault.sol\":14350:14360  returndata */\n      dup1\n        /* \"input/NOIAVault.sol\":14339:14369  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"input/NOIAVault.sol\":14339:14369  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":14331:14416  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"input/NOIAVault.sol\":14206:14427  if (returndata.length > 0) { // Return data is optional... */\n    tag_57:\n        /* \"input/NOIAVault.sol\":13338:14433  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/NOIAVault.sol\":4074:4487  function isContract(address account) internal view returns (bool) {... */\n    tag_49:\n        /* \"input/NOIAVault.sol\":4134:4138  bool */\n      0x00\n        /* \"input/NOIAVault.sol\":4337:4349  uint256 size */\n      dup1\n        /* \"input/NOIAVault.sol\":4446:4453  account */\n      dup3\n        /* \"input/NOIAVault.sol\":4434:4454  extcodesize(account) */\n      extcodesize\n        /* \"input/NOIAVault.sol\":4426:4454  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"input/NOIAVault.sol\":4479:4480  0 */\n      0x00\n        /* \"input/NOIAVault.sol\":4472:4476  size */\n      dup2\n        /* \"input/NOIAVault.sol\":4472:4480  size > 0 */\n      gt\n        /* \"input/NOIAVault.sol\":4465:4480  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"input/NOIAVault.sol\":4074:4487  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976 476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365\n\n    auxdata: 0xa265627a7a72305820f49fda3defea214aa91b9b26ffb366491dceaa75aeb7f495cc2cf284e09c367064736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610aa6806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635f3e849f1461005c578063715018a6146100ca5780638da5cb5b146100d45780638f32d59b1461011e578063f2fde38b14610140575b600080fd5b6100c86004803603606081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610184565b005b6100d2610344565b005b6100dc61047d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101266104a6565b604051808215151515815260200191505060405180910390f35b6101826004803603602081101561015657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104fd565b005b61018c6104a6565b6101fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561027d57600080fd5b505afa158015610291573d6000803e3d6000fd5b505050506040513d60208110156102a757600080fd5b8101908080519060200190929190505050905081811015610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610a47602b913960400191505060405180910390fd5b61033e83838673ffffffffffffffffffffffffffffffffffffffff166105839092919063ffffffff16565b50505050565b61034c6104a6565b6103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6105056104a6565b610577576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61058081610654565b50565b61064f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610798565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109f76026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6107b78273ffffffffffffffffffffffffffffffffffffffff166109e3565b610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106108785780518252602082019150602081019050602083039250610855565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146108da576040519150601f19603f3d011682016040523d82523d6000602084013e6108df565b606091505b509150915081610957576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b6000815111156109dd5780806020019051602081101561097657600080fd5b81019080805190602001909291905050506109dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610a1d602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365a265627a7a72305820f49fda3defea214aa91b9b26ffb366491dceaa75aeb7f495cc2cf284e09c367064736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xAA6 DUP1 PUSH2 0xCF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0x344 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x291 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA47 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33E DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x583 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x34C PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x580 DUP2 PUSH2 0x654 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x64F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x798 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7B7 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x878 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x9DD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA1D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735361666545524332303A204552433230 KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564476976656E20616D6F756E742069 PUSH20 0x206C6172676572207468616E2063757272656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365A265627A7A72305820F49FDA3D 0xef 0xea 0x21 0x4a 0xa9 SHL SWAP12 0x26 SELFDESTRUCT 0xb3 PUSH7 0x491DCEAA75AEB7 DELEGATECALL SWAP6 0xcc 0x2c CALLCODE DUP5 0xe0 SWAP13 CALLDATASIZE PUSH17 0x64736F6C634300050A0032000000000000 ",
							"sourceMap": "24606:348:0:-;;;22809:10;22800:6;;:19;;;;;;;;;;;;;;;;;;22867:6;;;;;;;;;;;22834:40;;22863:1;22834:40;;;;;;;;;;;;24606:348;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80635f3e849f1461005c578063715018a6146100ca5780638da5cb5b146100d45780638f32d59b1461011e578063f2fde38b14610140575b600080fd5b6100c86004803603606081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610184565b005b6100d2610344565b005b6100dc61047d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101266104a6565b604051808215151515815260200191505060405180910390f35b6101826004803603602081101561015657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104fd565b005b61018c6104a6565b6101fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561027d57600080fd5b505afa158015610291573d6000803e3d6000fd5b505050506040513d60208110156102a757600080fd5b8101908080519060200190929190505050905081811015610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610a47602b913960400191505060405180910390fd5b61033e83838673ffffffffffffffffffffffffffffffffffffffff166105839092919063ffffffff16565b50505050565b61034c6104a6565b6103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6105056104a6565b610577576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61058081610654565b50565b61064f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610798565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109f76026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6107b78273ffffffffffffffffffffffffffffffffffffffff166109e3565b610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106108785780518252602082019150602081019050602083039250610855565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146108da576040519150601f19603f3d011682016040523d82523d6000602084013e6108df565b606091505b509150915081610957576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b6000815111156109dd5780806020019051602081101561097657600080fd5b81019080805190602001909291905050506109dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610a1d602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365a265627a7a72305820f49fda3defea214aa91b9b26ffb366491dceaa75aeb7f495cc2cf284e09c367064736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0x344 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x291 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA47 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33E DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x583 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x34C PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x580 DUP2 PUSH2 0x654 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x64F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x798 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7B7 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x878 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x9DD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA1D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735361666545524332303A204552433230 KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564476976656E20616D6F756E742069 PUSH20 0x206C6172676572207468616E2063757272656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x6365A265627A7A72305820F49FDA3D 0xef 0xea 0x21 0x4a 0xa9 SHL SWAP12 0x26 SELFDESTRUCT 0xb3 PUSH7 0x491DCEAA75AEB7 DELEGATECALL SWAP6 0xcc 0x2c CALLCODE DUP5 0xe0 SWAP13 CALLDATASIZE PUSH17 0x64736F6C634300050A0032000000000000 ",
							"sourceMap": "24606:348:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24606:348:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24682:270;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24682:270:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23742:137;;;:::i;:::-;;22957:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;23308:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;24028:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24028:107:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;24682:270;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24774:15;24792:5;:15;;;24816:4;24792:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24792:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24792:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24792:30:0;;;;;;;;;;;;;;;;24774:48;;24851:6;24840:7;:17;;24832:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24915:30;24934:2;24938:6;24915:5;:18;;;;:30;;;;;:::i;:::-;23217:1;24682:270;;;:::o;23742:137::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23840:1;23803:40;;23824:6;;;;;;;;;;;23803:40;;;;;;;;;;;;23870:1;23853:6;;:19;;;;;;;;;;;;;;;;;;23742:137::o;22957:77::-;22995:7;23021:6;;;;;;;;;;;23014:13;;22957:77;:::o;23308:90::-;23348:4;23385:6;;;;;;;;;;;23371:20;;:10;:20;;;23364:27;;23308:90;:::o;24028:107::-;23161:9;:7;:9::i;:::-;23153:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24100:28;24119:8;24100:18;:28::i;:::-;24028:107;:::o;11379:174::-;11461:85;11480:5;11510;:14;;;:23;;;;11535:2;11539:5;11487:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11487:58:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;11487:58:0;11461:18;:85::i;:::-;11379:174;;;:::o;24236:225::-;24329:1;24309:22;;:8;:22;;;;24301:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24418:8;24389:38;;24410:6;;;;;;;;;;;24389:38;;;;;;;;;;;;24446:8;24437:6;;:17;;;;;;;;;;;;;;;;;;24236:225;:::o;13338:1095::-;13933:27;13941:5;13933:25;;;:27::i;:::-;13925:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14067:12;14081:23;14116:5;14108:19;;14128:4;14108:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14108:25:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14066:67:0;;;;14151:7;14143:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14230:1;14210:10;:17;:21;14206:221;;;14350:10;14339:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14339:30:0;;;;;;;;;;;;;;;;14331:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14206:221;13338:1095;;;;:::o;4074:413::-;4134:4;4337:12;4446:7;4434:20;4426:28;;4479:1;4472:4;:8;4465:15;;;4074:413;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "545200",
								"executionCost": "22604",
								"totalCost": "567804"
							},
							"external": {
								"isOwner()": "522",
								"owner()": "483",
								"recoverTokens(address,address,uint256)": "infinite",
								"renounceOwnership()": "22497",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24606,
									"end": 24954,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "MSTORE"
								},
								{
									"begin": 22809,
									"end": 22819,
									"name": "CALLER"
								},
								{
									"begin": 22800,
									"end": 22806,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 22800,
									"end": 22806,
									"name": "DUP1"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "EXP"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "DUP2"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SLOAD"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "DUP2"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "MUL"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "NOT"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "AND"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SWAP1"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "DUP4"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "AND"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "MUL"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "OR"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SWAP1"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "SSTORE"
								},
								{
									"begin": 22800,
									"end": 22819,
									"name": "POP"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "DUP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SWAP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SLOAD"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SWAP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "EXP"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "SWAP1"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "DIV"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22867,
									"end": 22873,
									"name": "AND"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "AND"
								},
								{
									"begin": 22863,
									"end": 22864,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "AND"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "MLOAD"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "MLOAD"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "DUP1"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "SWAP2"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "SUB"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "SWAP1"
								},
								{
									"begin": 22834,
									"end": 22874,
									"name": "LOG3"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "DUP1"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "CODECOPY"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24606,
									"end": 24954,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820f49fda3defea214aa91b9b26ffb366491dceaa75aeb7f495cc2cf284e09c367064736f6c634300050a0032",
									".code": [
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "MSTORE"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "POP"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "LT"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "JUMPI"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "SHR"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "DUP1"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "5F3E849F"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "EQ"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "JUMPI"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "DUP1"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "EQ"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "JUMPI"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "DUP1"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "EQ"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "JUMPI"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "DUP1"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "EQ"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "JUMPI"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "DUP1"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "EQ"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "JUMPI"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "JUMPDEST"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "DUP1"
										},
										{
											"begin": 24606,
											"end": 24954,
											"name": "REVERT"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMPDEST"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "AND"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP3"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "AND"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP3"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "DUP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "ADD"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP3"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP2"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "SWAP1"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMPDEST"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "STOP"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMPDEST"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMPDEST"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "STOP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMPDEST"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMPDEST"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "MLOAD"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP3"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "AND"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "AND"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP2"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "MSTORE"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "ADD"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP2"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "POP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "POP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "MLOAD"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "DUP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP2"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SUB"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "RETURN"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMPDEST"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMPDEST"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "MLOAD"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP3"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ISZERO"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP2"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "MSTORE"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "ADD"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP2"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "POP"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "POP"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "MLOAD"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "DUP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP2"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SUB"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "RETURN"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP2"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "AND"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP3"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP2"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "STOP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 24774,
											"end": 24789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24792,
											"end": 24797,
											"name": "DUP4"
										},
										{
											"begin": 24792,
											"end": 24807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24807,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24807,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 24816,
											"end": 24820,
											"name": "ADDRESS"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP3"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SHL"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MSTORE"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP3"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "AND"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MSTORE"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP4"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SUB"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP7"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "GAS"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "STATICCALL"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "DUP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "MLOAD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "ADD"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP3"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP2"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24792,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24774,
											"end": 24822,
											"name": "SWAP1"
										},
										{
											"begin": 24774,
											"end": 24822,
											"name": "POP"
										},
										{
											"begin": 24851,
											"end": 24857,
											"name": "DUP2"
										},
										{
											"begin": 24840,
											"end": 24847,
											"name": "DUP2"
										},
										{
											"begin": 24840,
											"end": 24857,
											"name": "LT"
										},
										{
											"begin": 24840,
											"end": 24857,
											"name": "ISZERO"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "JUMPI"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MLOAD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MSTORE"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP3"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SUB"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP3"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MSTORE"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MSTORE"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH data",
											"value": "F88C2B987653742ECD02849285169F1EAAADF3E37FF12E2783D5486B802D0976"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "CODECOPY"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "ADD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "POP"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "POP"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "MLOAD"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "DUP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP2"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SUB"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "SWAP1"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "REVERT"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 24832,
											"end": 24905,
											"name": "JUMPDEST"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 24934,
											"end": 24936,
											"name": "DUP4"
										},
										{
											"begin": 24938,
											"end": 24944,
											"name": "DUP4"
										},
										{
											"begin": 24915,
											"end": 24920,
											"name": "DUP7"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "AND"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "SWAP1"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "SWAP3"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "SWAP2"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "SWAP1"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "AND"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 24915,
											"end": 24945,
											"name": "JUMPDEST"
										},
										{
											"begin": 23217,
											"end": 23218,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "POP"
										},
										{
											"begin": 24682,
											"end": 24952,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 23840,
											"end": 23841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "AND"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "DUP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SWAP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SLOAD"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SWAP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "EXP"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "SWAP1"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "DIV"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23824,
											"end": 23830,
											"name": "AND"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "AND"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "MLOAD"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "MLOAD"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "DUP1"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "SWAP2"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "SUB"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "SWAP1"
										},
										{
											"begin": 23803,
											"end": 23843,
											"name": "LOG3"
										},
										{
											"begin": 23870,
											"end": 23871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23853,
											"end": 23859,
											"name": "DUP1"
										},
										{
											"begin": 23853,
											"end": 23859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "EXP"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "DUP2"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SLOAD"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "DUP2"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "MUL"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "NOT"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "AND"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SWAP1"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "DUP4"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "AND"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "MUL"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "OR"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SWAP1"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "SSTORE"
										},
										{
											"begin": 23853,
											"end": 23872,
											"name": "POP"
										},
										{
											"begin": 23742,
											"end": 23879,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMPDEST"
										},
										{
											"begin": 22995,
											"end": 23002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "DUP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SLOAD"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "EXP"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "DIV"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23021,
											"end": 23027,
											"name": "AND"
										},
										{
											"begin": 23014,
											"end": 23027,
											"name": "SWAP1"
										},
										{
											"begin": 23014,
											"end": 23027,
											"name": "POP"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "SWAP1"
										},
										{
											"begin": 22957,
											"end": 23034,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMPDEST"
										},
										{
											"begin": 23348,
											"end": 23352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "DUP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SLOAD"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "EXP"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "DIV"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23385,
											"end": 23391,
											"name": "AND"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "AND"
										},
										{
											"begin": 23371,
											"end": 23381,
											"name": "CALLER"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "AND"
										},
										{
											"begin": 23371,
											"end": 23391,
											"name": "EQ"
										},
										{
											"begin": 23364,
											"end": 23391,
											"name": "SWAP1"
										},
										{
											"begin": 23364,
											"end": 23391,
											"name": "POP"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "SWAP1"
										},
										{
											"begin": 23308,
											"end": 23398,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMPDEST"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 23161,
											"end": 23168,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 23161,
											"end": 23170,
											"name": "JUMPDEST"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPI"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP3"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MSTORE"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "ADD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "POP"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "MLOAD"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "DUP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP2"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SUB"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "SWAP1"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "REVERT"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 23153,
											"end": 23207,
											"name": "JUMPDEST"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 24119,
											"end": 24127,
											"name": "DUP2"
										},
										{
											"begin": 24100,
											"end": 24118,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 24100,
											"end": 24128,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24135,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "JUMPDEST"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 11480,
											"end": 11485,
											"name": "DUP4"
										},
										{
											"begin": 11510,
											"end": 11515,
											"name": "DUP5"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "AND"
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "SWAP1"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "POP"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "SHL"
										},
										{
											"begin": 11535,
											"end": 11537,
											"name": "DUP5"
										},
										{
											"begin": 11539,
											"end": 11544,
											"name": "DUP5"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MLOAD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP4"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP3"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "DUP2"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "ADD"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP3"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "MSTORE"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "NOT"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 11487,
											"end": 11545,
											"name": "POP"
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 11461,
											"end": 11546,
											"name": "JUMPDEST"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "POP"
										},
										{
											"begin": 11379,
											"end": 11553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "JUMPDEST"
										},
										{
											"begin": 24329,
											"end": 24330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "AND"
										},
										{
											"begin": 24309,
											"end": 24317,
											"name": "DUP2"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "AND"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "EQ"
										},
										{
											"begin": 24309,
											"end": 24331,
											"name": "ISZERO"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "JUMPI"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MLOAD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MSTORE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP3"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SUB"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP3"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MSTORE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MSTORE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "CODECOPY"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "ADD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "POP"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "POP"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "MLOAD"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "DUP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP2"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SUB"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "SWAP1"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "REVERT"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 24301,
											"end": 24374,
											"name": "JUMPDEST"
										},
										{
											"begin": 24418,
											"end": 24426,
											"name": "DUP1"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "AND"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "DUP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SWAP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SLOAD"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SWAP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "EXP"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "SWAP1"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "DIV"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24410,
											"end": 24416,
											"name": "AND"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "AND"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "MLOAD"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "MLOAD"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "DUP1"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "SWAP2"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "SUB"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "SWAP1"
										},
										{
											"begin": 24389,
											"end": 24427,
											"name": "LOG3"
										},
										{
											"begin": 24446,
											"end": 24454,
											"name": "DUP1"
										},
										{
											"begin": 24437,
											"end": 24443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24437,
											"end": 24443,
											"name": "DUP1"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "EXP"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "DUP2"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SLOAD"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "DUP2"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "MUL"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "NOT"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "AND"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SWAP1"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "DUP4"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "AND"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "MUL"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "OR"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SWAP1"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "SSTORE"
										},
										{
											"begin": 24437,
											"end": 24454,
											"name": "POP"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "POP"
										},
										{
											"begin": 24236,
											"end": 24461,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "JUMPDEST"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 13941,
											"end": 13946,
											"name": "DUP3"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "AND"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 13933,
											"end": 13960,
											"name": "JUMPDEST"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "JUMPI"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MLOAD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP3"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SUB"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP3"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MSTORE"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "ADD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "POP"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "MLOAD"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "DUP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP2"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SUB"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "SWAP1"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "REVERT"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 13925,
											"end": 13996,
											"name": "JUMPDEST"
										},
										{
											"begin": 14067,
											"end": 14079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14104,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14116,
											"end": 14121,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14108,
											"end": 14127,
											"name": "AND"
										},
										{
											"begin": 14128,
											"end": 14132,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP3"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "ADD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "ADD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MLOAD"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SUB"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP7"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "GAS"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "CALL"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "SWAP2"
										},
										{
											"begin": 14066,
											"end": 14133,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14158,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "JUMPI"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SUB"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP3"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MSTORE"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "ADD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "POP"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "MLOAD"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP2"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SUB"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "SWAP1"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "REVERT"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 14143,
											"end": 14195,
											"name": "JUMPDEST"
										},
										{
											"begin": 14230,
											"end": 14231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14210,
											"end": 14220,
											"name": "DUP2"
										},
										{
											"begin": 14210,
											"end": 14227,
											"name": "MLOAD"
										},
										{
											"begin": 14210,
											"end": 14231,
											"name": "GT"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "ISZERO"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "JUMPI"
										},
										{
											"begin": 14350,
											"end": 14360,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP2"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "MLOAD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "ADD"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP3"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP2"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "SWAP1"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14339,
											"end": 14369,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "JUMPI"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP3"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP3"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MSTORE"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "CODECOPY"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "ADD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "POP"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "MLOAD"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "DUP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP2"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SUB"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "SWAP1"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "REVERT"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 14331,
											"end": 14416,
											"name": "JUMPDEST"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 14206,
											"end": 14427,
											"name": "JUMPDEST"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "POP"
										},
										{
											"begin": 13338,
											"end": 14433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "JUMPDEST"
										},
										{
											"begin": 4134,
											"end": 4138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4446,
											"end": 4453,
											"name": "DUP3"
										},
										{
											"begin": 4434,
											"end": 4454,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4426,
											"end": 4454,
											"name": "SWAP1"
										},
										{
											"begin": 4426,
											"end": 4454,
											"name": "POP"
										},
										{
											"begin": 4479,
											"end": 4480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4476,
											"name": "DUP2"
										},
										{
											"begin": 4472,
											"end": 4480,
											"name": "GT"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "SWAP2"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "SWAP2"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "SWAP1"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "POP"
										},
										{
											"begin": 4074,
											"end": 4487,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F88C2B987653742ECD02849285169F1EAAADF3E37FF12E2783D5486B802D0976": "476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"recoverTokens(address,address,uint256)": "5f3e849f",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/NOIAVault.sol\":\"TokenRecoverable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/NOIAVault.sol\":{\"keccak256\":\"0xecff2266fd5b3ee54e50b1450baf1176a05d9849763839a32a8180c18aecea1d\",\"urls\":[\"bzzr://9671e470066aaaeda43e1d3ec4c6ad0bae7cd11581531b426286a758e7b23d9a\",\"dweb:/ipfs/QmUT8DY1fuLDk5GwM1XmhW1DntRG3kGE8M7GJrK6dTf16c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"input/NOIAVault.sol": {
				"ast": {
					"absolutePath": "input/NOIAVault.sol",
					"exportedSymbols": {
						"Address": [
							149
						],
						"ECDSA": [
							228
						],
						"ERC20": [
							902
						],
						"IERC20": [
							295
						],
						"ITokenReceiver": [
							1021
						],
						"NOIAToken": [
							1555
						],
						"NOIAVault": [
							1719
						],
						"Ownable": [
							1011
						],
						"SafeERC20": [
							509
						],
						"SafeMath": [
							132
						],
						"TokenRecoverable": [
							1062
						]
					},
					"id": 1720,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "28:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "929:109:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 25,
														"src": "939:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "939:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 12,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "951:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 13,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "955:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "951:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "939:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 17,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "974:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 18,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "979:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "974:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "982:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "966:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "966:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 23,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "1030:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 24,
												"nodeType": "Return",
												"src": "1023:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "875:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "886:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "920:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "919:9:0"
									},
									"scope": 132,
									"src": "862:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1369:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "1387:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1392:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1387:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "1379:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1379:49:0"
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "1438:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 42,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 44,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1454:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1438:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "1473:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 34,
												"id": 49,
												"nodeType": "Return",
												"src": "1466:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1315:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1326:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1314:22:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1360:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1359:9:0"
									},
									"scope": 132,
									"src": "1302:179:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1788:391:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2019:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2024:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 66,
												"nodeType": "IfStatement",
												"src": "2015:45:0",
												"trueBody": {
													"id": 65,
													"nodeType": "Block",
													"src": "2027:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2048:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 59,
															"id": 64,
															"nodeType": "Return",
															"src": "2041:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "2070:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 67,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2070:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 70,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2086:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2070:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 74,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "2105:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 75,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "2109:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2105:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 77,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "2114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2105:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2117:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "2097:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2097:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 82,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 68,
													"src": "2171:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 59,
												"id": 83,
												"nodeType": "Return",
												"src": "2164:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1734:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1745:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1733:22:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1778:9:0"
									},
									"scope": 132,
									"src": "1721:458:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2701:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2785:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2789:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2785:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "2777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2777:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "2777:44:0"
											},
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "2831:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 103,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 104,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "2847:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2831:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 107,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "2952:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 93,
												"id": 108,
												"nodeType": "Return",
												"src": "2945:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2647:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2658:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2646:22:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2692:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2691:9:0"
									},
									"scope": 132,
									"src": "2634:326:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3471:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 120,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "3489:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3494:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3489:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3497:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "3481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "3481:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3541:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 118,
												"id": 129,
												"nodeType": "Return",
												"src": "3534:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3417:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3428:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3416:22:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3462:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3461:9:0"
									},
									"scope": 132,
									"src": "3404:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1720,
							"src": "617:2938:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type,",
							"fullyImplemented": true,
							"id": 149,
							"linearizedBaseContracts": [
								149
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4140:347:0",
										"statements": [
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 147,
														"src": "4337:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4337:12:0"
											},
											{
												"externalReferences": [
													{
														"size": {
															"declaration": 140,
															"isOffset": false,
															"isSlot": false,
															"src": "4426:4:0",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 134,
															"isOffset": false,
															"isSlot": false,
															"src": "4446:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 142,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "4415:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 143,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "4472:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4479:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4472:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 138,
												"id": 146,
												"nodeType": "Return",
												"src": "4465:15:0"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n     * > It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4094:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4093:17:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4133:6:0"
									},
									"scope": 149,
									"src": "4074:413:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1720,
							"src": "3626:863:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n * These functions can be used to verify that a message was signed by the holder\nof the private keys of a given address.",
							"fullyImplemented": true,
							"id": 228,
							"linearizedBaseContracts": [
								228
							],
							"name": "ECDSA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "5783:1804:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 158,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "5835:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5835:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3635",
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5855:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "5835:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 168,
												"nodeType": "IfStatement",
												"src": "5831:72:0",
												"trueBody": {
													"id": 167,
													"nodeType": "Block",
													"src": "5859:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5889:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5881:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5881:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"id": 165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5880:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"functionReturnParameters": 157,
															"id": 166,
															"nodeType": "Return",
															"src": "5873:19:0"
														}
													]
												}
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "5969:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 169,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5969:9:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "5988:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 172,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5988:9:0"
											},
											{
												"assignments": [
													176
												],
												"declarations": [
													{
														"constant": false,
														"id": 176,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "6007:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 175,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "6007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6007:7:0"
											},
											{
												"externalReferences": [
													{
														"r": {
															"declaration": 170,
															"isOffset": false,
															"isSlot": false,
															"src": "6227:1:0",
															"valueSize": 1
														}
													},
													{
														"signature": {
															"declaration": 153,
															"isOffset": false,
															"isSlot": false,
															"src": "6287:9:0",
															"valueSize": 1
														}
													},
													{
														"v": {
															"declaration": 176,
															"isOffset": false,
															"isSlot": false,
															"src": "6317:1:0",
															"valueSize": 1
														}
													},
													{
														"s": {
															"declaration": 173,
															"isOffset": false,
															"isSlot": false,
															"src": "6272:1:0",
															"valueSize": 1
														}
													},
													{
														"signature": {
															"declaration": 153,
															"isOffset": false,
															"isSlot": false,
															"src": "6340:9:0",
															"valueSize": 1
														}
													},
													{
														"signature": {
															"declaration": 153,
															"isOffset": false,
															"isSlot": false,
															"src": "6242:9:0",
															"valueSize": 1
														}
													}
												],
												"id": 178,
												"nodeType": "InlineAssembly",
												"operations": "{\n    r := mload(add(signature, 0x20))\n    s := mload(add(signature, 0x40))\n    v := byte(0, mload(add(signature, 0x60)))\n}",
												"src": "6204:164:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 180,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "7264:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7256:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7256:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7269:66:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "7256:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 189,
												"nodeType": "IfStatement",
												"src": "7252:127:0",
												"trueBody": {
													"id": 188,
													"nodeType": "Block",
													"src": "7337:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7366:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7358:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"functionReturnParameters": 157,
															"id": 187,
															"nodeType": "Return",
															"src": "7351:17:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 190,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "7393:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3237",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7398:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															},
															"value": "27"
														},
														"src": "7393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 193,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "7404:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3238",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7409:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28_by_1",
																"typeString": "int_const 28"
															},
															"value": "28"
														},
														"src": "7404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7393:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 202,
												"nodeType": "IfStatement",
												"src": "7389:66:0",
												"trueBody": {
													"id": 201,
													"nodeType": "Block",
													"src": "7413:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7442:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7434:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7434:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"functionReturnParameters": 157,
															"id": 200,
															"nodeType": "Return",
															"src": "7427:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 204,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "7566:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 205,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "7572:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 206,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "7575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 207,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "7578:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 203,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "7556:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7556:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 157,
												"id": 209,
												"nodeType": "Return",
												"src": "7549:31:0"
											}
										]
									},
									"documentation": "@dev Returns the address that signed a hashed message (`hash`) with\n`signature`. This address can then be used for verification purposes.\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\nthis function rejects them by requiring the `s` value to be in the lower\nhalf order, and the `v` value to be either 27 or 28.\n     * (.note) This call _does not revert_ if the signature is invalid, or\nif the signer is otherwise unable to be retrieved. In those scenarios,\nthe zero address is returned.\n     * (.warning) `hash` _must_ be the result of a hash operation for the\nverification to be secure: it is possible to craft signatures that\nrecover to arbitrary addresses for non-hashed data. A safe way to ensure\nthis is by receiving a hash of the original message (which may otherwise)\nbe too long), and then calling `toEthSignedMessageHash` on it.",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "5713:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "5727:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5712:38:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "5774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5773:9:0"
									},
									"scope": 228,
									"src": "5696:1891:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "7931:187:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8069:34:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"argumentTypes": null,
																	"id": 222,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "8105:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 219,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "8052:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8052:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8052:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 218,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "8042:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8042:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 217,
												"id": 225,
												"nodeType": "Return",
												"src": "8035:76:0"
											}
										]
									},
									"documentation": "@dev Returns an Ethereum Signed Message, created from a `hash`. This\nreplicates the behavior of the\n[`eth_sign`](https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign)\nJSON-RPC method.\n     * See `recover`.",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "7885:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7884:14:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "7922:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7921:9:0"
									},
									"scope": 228,
									"src": "7853:265:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1720,
							"src": "4698:3422:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8388:2:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "8414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8413:9:0"
									},
									"scope": 295,
									"src": "8368:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "8525:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8524:17:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "8565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8564:9:0"
									},
									"scope": 295,
									"src": "8506:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8812:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8831:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8811:35:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8865:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8864:6:0"
									},
									"scope": 295,
									"src": "8794:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through `transferFrom`. This is\nzero by default.\n     * This value changes when `approve` or `transferFrom` are called.",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "9165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "9180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9164:32:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "9220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9219:9:0"
									},
									"scope": 295,
									"src": "9146:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * > Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an `Approval` event.",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "9890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "9907:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9889:33:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "9941:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9940:6:0"
									},
									"scope": 295,
									"src": "9873:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10276:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10292:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10311:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10275:51:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10345:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10344:6:0"
									},
									"scope": 295,
									"src": "10254:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 286,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "10535:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "10557:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "10577:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10534:57:0"
									},
									"src": "10520:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to `approve`. `value` is the new allowance.",
									"id": 294,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "10766:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "10789:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "10814:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10765:63:0"
									},
									"src": "10751:78:0"
								}
							],
							"scope": 1720,
							"src": "8274:2557:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 509,
							"linearizedBaseContracts": [
								509
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 298,
									"libraryName": {
										"contractScope": null,
										"id": 296,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 132,
										"src": "11321:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$132",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11315:27:0",
									"typeName": {
										"id": 297,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11334:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 301,
									"libraryName": {
										"contractScope": null,
										"id": 299,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 149,
										"src": "11353:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$149",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11347:26:0",
									"typeName": {
										"id": 300,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11365:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "11451:102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "11480:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 314,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 303,
																			"src": "11510:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$295",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 249,
																		"src": "11510:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11510:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 317,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "11535:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "11539:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "11487:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11487:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11487:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 310,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "11461:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$295_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11461:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "11461:85:0"
											}
										]
									},
									"documentation": null,
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "11401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 302,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "11401:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "11415:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "11427:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11400:41:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11451:0:0"
									},
									"scope": 509,
									"src": "11379:174:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "11649:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 335,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "11678:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 338,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 325,
																			"src": "11708:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$295",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 278,
																		"src": "11708:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11708:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 341,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "11737:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 342,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "11743:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 343,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "11747:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 336,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "11685:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11685:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11685:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 334,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "11659:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$295_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11659:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "11659:95:0"
											}
										]
									},
									"documentation": null,
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11585:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 324,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "11585:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11599:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11613:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11584:55:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11649:0:0"
									},
									"scope": 509,
									"src": "11559:202:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "11843:536:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 358,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "12132:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12141:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12132:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12131:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 365,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1756,
																							"src": "12172:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$509",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$509",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 364,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "12164:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 366,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12164:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 367,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 352,
																					"src": "12179:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 362,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 350,
																					"src": "12148:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$295",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 258,
																				"src": "12148:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12148:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12191:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12148:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 371,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12147:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12131:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12207:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "12123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12123:150:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "12123:150:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "12302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 380,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 350,
																			"src": "12332:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$295",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 267,
																		"src": "12332:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12332:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 383,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "12356:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 384,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "12365:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "12309:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12309:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12309:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 376,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "12283:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$295_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12283:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "12283:89:0"
											}
										]
									},
									"documentation": null,
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "11788:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 349,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "11788:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "11802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "11819:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11787:46:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11843:0:0"
									},
									"scope": 509,
									"src": "11767:612:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "12471:196:0",
										"statements": [
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 423,
														"src": "12481:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12481:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 408,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12548:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 403,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "12528:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$509",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$509",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12520:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12520:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 405,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "12535:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 400,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "12504:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$295",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "12504:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12504:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "12504:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12504:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12481:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 412,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "12583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 415,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "12613:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$295",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 267,
																		"src": "12613:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12613:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 418,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "12637:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 419,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "12646:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 413,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "12590:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12590:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12590:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 411,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "12564:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$295_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12564:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "12564:96:0"
											}
										]
									},
									"documentation": null,
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "12416:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 390,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "12416:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "12430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "12447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12415:46:0"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12471:0:0"
									},
									"scope": 509,
									"src": "12385:282:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "12759:196:0",
										"statements": [
											{
												"assignments": [
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "12769:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 443,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "12836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 438,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "12816:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$509",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$509",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12808:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 440,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "12823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "12792:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$295",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "12792:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12792:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "12792:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12792:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12769:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 447,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "12871:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 450,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 426,
																			"src": "12901:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$295",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 267,
																		"src": "12901:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12901:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 453,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "12925:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 454,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "12934:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 448,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "12878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12878:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12878:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 446,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "12852:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$295_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "12852:96:0"
											}
										]
									},
									"documentation": null,
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "12704:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 425,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "12704:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "12718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "12735:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12703:46:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12759:0:0"
									},
									"scope": 509,
									"src": "12673:282:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "13407:1026:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 468,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 461,
																			"src": "13941:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$295",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$295",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13933:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13933:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 148,
																"src": "13933:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13933:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13962:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "13925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13925:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "13925:71:0"
											},
											{
												"assignments": [
													476,
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "14067:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 475,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 478,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "14081:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14081:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 483,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "14128:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 480,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "14116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$295",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$295",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14108:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14108:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14108:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14108:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14066:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 487,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "14151:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14160:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "14143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14143:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "14143:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 491,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "14210:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14210:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14230:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14210:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 506,
												"nodeType": "IfStatement",
												"src": "14206:221:0",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "14233:194:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 498,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "14350:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 499,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14363:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 500,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "14362:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 496,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1721,
																				"src": "14339:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "14339:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14339:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14371:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 495,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1737,
																		1738
																	],
																	"referencedDeclaration": 1738,
																	"src": "14331:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14331:85:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "14331:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "13366:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 460,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "13366:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "13380:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13365:33:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13407:0:0"
									},
									"scope": 509,
									"src": "13338:1095:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 1720,
							"src": "11291:3144:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 510,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 295,
										"src": "15605:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$295",
											"typeString": "contract IERC20"
										}
									},
									"id": 511,
									"nodeType": "InheritanceSpecifier",
									"src": "15605:6:0"
								}
							],
							"contractDependencies": [
								295
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IERC20` interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using `_mint`.\nFor a generic mechanism see `ERC20Mintable`.\n * *For a detailed writeup see our guide [How to implement supply\nmechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See `IERC20.approve`.",
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [
								902,
								295
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 514,
									"libraryName": {
										"contractScope": null,
										"id": 512,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 132,
										"src": "15624:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$132",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15618:27:0",
									"typeName": {
										"id": 513,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15637:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 518,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "15651:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 517,
										"keyType": {
											"id": 515,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15660:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15651:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 516,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15671:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 524,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "15704:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 523,
										"keyType": {
											"id": 519,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15713:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15704:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 522,
											"keyType": {
												"id": 520,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "15733:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "15724:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 521,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "15744:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "15780:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15780:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "15922:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 531,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 526,
													"src": "15939:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 530,
												"id": 532,
												"nodeType": "Return",
												"src": "15932:19:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.totalSupply`.",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15889:2:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "15913:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15912:9:0"
									},
									"scope": 902,
									"src": "15869:89:0",
									"stateMutability": "view",
									"superFunction": 233,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "16082:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 541,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "16099:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 543,
													"indexExpression": {
														"argumentTypes": null,
														"id": 542,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "16109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16099:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 540,
												"id": 544,
												"nodeType": "Return",
												"src": "16092:25:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.balanceOf`.",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "16035:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16034:17:0"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "16073:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16072:9:0"
									},
									"scope": 902,
									"src": "16016:108:0",
									"stateMutability": "view",
									"superFunction": 240,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "16402:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 556,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "16422:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16422:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 558,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "16434:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "16445:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "16412:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16412:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "16412:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16469:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 554,
												"id": 563,
												"nodeType": "Return",
												"src": "16462:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "16345:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "16364:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16344:35:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "16396:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16395:6:0"
									},
									"scope": 902,
									"src": "16327:153:0",
									"stateMutability": "nonpayable",
									"superFunction": 249,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "16619:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 574,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "16636:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 576,
														"indexExpression": {
															"argumentTypes": null,
															"id": 575,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "16648:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16636:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 578,
													"indexExpression": {
														"argumentTypes": null,
														"id": 577,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "16655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16636:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 573,
												"id": 579,
												"nodeType": "Return",
												"src": "16629:34:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.allowance`.",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "16557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "16572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16556:32:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "16610:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16609:9:0"
									},
									"scope": 902,
									"src": "16538:132:0",
									"stateMutability": "view",
									"superFunction": 258,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "16879:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 591,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "16898:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16898:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 593,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "16910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 594,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "16919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "16889:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16889:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "16889:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16942:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 589,
												"id": 598,
												"nodeType": "Return",
												"src": "16935:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "16825:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "16842:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16824:32:0"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "16873:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16873:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16872:6:0"
									},
									"scope": 902,
									"src": "16808:145:0",
									"stateMutability": "nonpayable",
									"superFunction": 267,
									"visibility": "public"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "17505:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 612,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "17525:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 613,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "17533:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 614,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "17544:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 611,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "17515:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17515:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "17515:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 618,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "17570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 619,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "17578:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17578:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 628,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "17626:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 621,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "17590:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 623,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 622,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "17602:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17590:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 626,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 624,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "17610:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "17610:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17590:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "17590:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17590:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "17561:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17561:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "17561:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17651:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 610,
												"id": 633,
												"nodeType": "Return",
												"src": "17644:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of `ERC20`;\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "17432:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "17448:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "17467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17431:51:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "17499:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17499:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17498:6:0"
									},
									"scope": 902,
									"src": "17410:252:0",
									"stateMutability": "nonpayable",
									"superFunction": 278,
									"visibility": "public"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "18143:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 645,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "18162:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "18162:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "18174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 655,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "18220:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 648,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "18183:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 651,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 649,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1734,
																				"src": "18195:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "18195:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18183:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 653,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 652,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "18207:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18183:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "18183:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18183:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "18153:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18153:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "18153:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18249:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 643,
												"id": 660,
												"nodeType": "Return",
												"src": "18242:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "18084:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "18101:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18083:37:0"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "18137:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18136:6:0"
									},
									"scope": 902,
									"src": "18057:203:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "18838:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 672,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "18857:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "18857:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "18869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 682,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "18915:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 675,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "18878:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 678,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 676,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1734,
																				"src": "18890:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "18890:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18878:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 680,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 679,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "18902:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18878:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "18878:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18878:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 671,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "18848:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18848:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "18848:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18949:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 670,
												"id": 687,
												"nodeType": "Return",
												"src": "18942:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "18774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "18791:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18773:42:0"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "18832:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18832:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18831:6:0"
									},
									"scope": 902,
									"src": "18747:213:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "19513:343:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 699,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "19531:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19549:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19541:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19541:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19531:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19553:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "19523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19523:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "19523:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 708,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "19611:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19632:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19624:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19624:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19611:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19636:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "19603:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19603:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "19603:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 716,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "19685:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 718,
														"indexExpression": {
															"argumentTypes": null,
															"id": 717,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "19695:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19685:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 723,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "19727:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 719,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "19705:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 720,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "19715:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19705:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "19705:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19705:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19685:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "19685:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 727,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "19744:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 729,
														"indexExpression": {
															"argumentTypes": null,
															"id": 728,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "19754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19744:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 734,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "19792:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 730,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "19767:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 732,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 731,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "19777:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19767:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "19767:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19767:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19744:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "19744:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 739,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "19823:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 740,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "19831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 741,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "19842:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "19814:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19814:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "EmitStatement",
												"src": "19809:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "19453:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "19469:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "19488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19452:51:0"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19513:0:0"
									},
									"scope": 902,
									"src": "19434:422:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "20183:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 753,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "20201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20220:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20212:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20212:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20201:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20224:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "20193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20193:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "20193:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 761,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "20269:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 764,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "20301:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 762,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "20284:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "20284:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20284:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20269:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "20269:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 768,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "20318:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 770,
														"indexExpression": {
															"argumentTypes": null,
															"id": 769,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "20328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20318:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 775,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "20362:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 771,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "20339:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 773,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 772,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "20349:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20339:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "20339:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20339:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20318:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "20318:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20401:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20393:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 783,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "20405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 784,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "20414:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "20384:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20384:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "EmitStatement",
												"src": "20379:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "20141:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "20158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20140:33:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20183:0:0"
									},
									"scope": 902,
									"src": "20126:302:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "20803:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 796,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "20821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20840:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20832:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20832:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20821:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20844:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "20813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20813:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "20813:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 804,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "20891:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20923:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 805,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "20906:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "20906:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20906:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20891:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "20891:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 811,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "20939:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 813,
														"indexExpression": {
															"argumentTypes": null,
															"id": 812,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "20949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20939:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 818,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20983:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "20960:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 816,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "20970:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20960:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "20960:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20960:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20939:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "20939:50:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "21013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21030:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21022:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 827,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "21034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "21004:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21004:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "EmitStatement",
												"src": "20999:41:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "20762:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "20779:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20761:32:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20803:0:0"
									},
									"scope": 902,
									"src": "20747:300:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "21546:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "21564:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21581:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21573:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21573:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21564:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21585:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "21556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21556:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "21556:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 850,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "21642:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21661:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21653:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21653:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21642:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21665:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "21634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21634:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "21634:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "21713:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 861,
															"indexExpression": {
																"argumentTypes": null,
																"id": 859,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "21725:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21713:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 862,
														"indexExpression": {
															"argumentTypes": null,
															"id": 860,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "21732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21713:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 863,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "21743:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21713:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "21713:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 867,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "21772:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 868,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "21779:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 869,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "21788:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "21763:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21763:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "EmitStatement",
												"src": "21758:36:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "21490:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "21505:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "21522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21489:47:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21546:0:0"
									},
									"scope": 902,
									"src": "21472:329:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "22039:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 881,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "22055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "22064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "22049:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22049:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "22049:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 886,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "22090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "22099:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "22099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 896,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "22148:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 889,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "22111:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 891,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 890,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "22123:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22111:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 894,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 892,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "22132:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "22132:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22111:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "22111:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22111:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "22081:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22081:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "22081:75:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "21997:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "22014:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21996:33:0"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22039:0:0"
									},
									"scope": 902,
									"src": "21978:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1720,
							"src": "15587:6578:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be aplied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 904,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "22551:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 903,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22551:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 910,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "22607:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "22638:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22606:57:0"
									},
									"src": "22580:84:0"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "22790:91:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 913,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "22800:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 914,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "22809:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "22809:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "22800:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "22800:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22863:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22855:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22855:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 922,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "22867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 918,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "22834:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22834:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "EmitStatement",
												"src": "22829:45:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 926,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22778:2:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22790:0:0"
									},
									"scope": 1011,
									"src": "22766:115:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "23004:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 931,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "23021:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 930,
												"id": 932,
												"nodeType": "Return",
												"src": "23014:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22971:2:0"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "22995:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22994:9:0"
									},
									"scope": 1011,
									"src": "22957:77:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "23143:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 937,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "23161:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23161:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23172:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "23153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23153:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "23153:54:0"
											},
											{
												"id": 942,
												"nodeType": "PlaceholderStatement",
												"src": "23217:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 944,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23140:2:0"
									},
									"src": "23122:103:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "23354:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 949,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "23371:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "23371:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 951,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "23385:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23371:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 948,
												"id": 953,
												"nodeType": "Return",
												"src": "23364:27:0"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23324:2:0"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "23348:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23348:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23347:6:0"
									},
									"scope": 1011,
									"src": "23308:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "23788:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 961,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "23824:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23840:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23832:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23832:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 960,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "23803:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23803:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "EmitStatement",
												"src": "23798:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 967,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "23853:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23870:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23862:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23862:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "23853:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "23853:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * > Note: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 958,
											"modifierName": {
												"argumentTypes": null,
												"id": 957,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 944,
												"src": "23778:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "23778:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23768:2:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23788:0:0"
									},
									"scope": 1011,
									"src": "23742:137:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "24090:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 982,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "24119:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "24100:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24100:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "24100:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 979,
											"modifierName": {
												"argumentTypes": null,
												"id": 978,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 944,
												"src": "24080:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "24080:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "24055:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24054:18:0"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24090:0:0"
									},
									"scope": 1011,
									"src": "24028:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "24291:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 992,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "24309:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24329:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24321:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24321:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "24309:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24333:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "24301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24301:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "24301:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1001,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "24410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1002,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "24418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1000,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "24389:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24389:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "EmitStatement",
												"src": "24384:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1005,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "24437:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1006,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "24446:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24437:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "24437:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "24264:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24263:18:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24291:0:0"
									},
									"scope": 1011,
									"src": "24236:225:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1720,
							"src": "22528:1935:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1021,
							"linearizedBaseContracts": [
								1021
							],
							"name": "ITokenReceiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24530:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24552:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24520:72:0"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24601:0:0"
									},
									"scope": 1021,
									"src": "24497:105:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1720,
							"src": "24466:138:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1022,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1011,
										"src": "24635:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1011",
											"typeString": "contract Ownable"
										}
									},
									"id": 1023,
									"nodeType": "InheritanceSpecifier",
									"src": "24635:7:0"
								}
							],
							"contractDependencies": [
								1011
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1062,
							"linearizedBaseContracts": [
								1062,
								1011
							],
							"name": "TokenRecoverable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1026,
									"libraryName": {
										"contractScope": null,
										"id": 1024,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 509,
										"src": "24655:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$509",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "24649:27:0",
									"typeName": {
										"contractScope": null,
										"id": 1025,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 295,
										"src": "24669:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$295",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "24764:188:0",
										"statements": [
											{
												"assignments": [
													1038
												],
												"declarations": [
													{
														"constant": false,
														"id": 1038,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1060,
														"src": "24774:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1037,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1042,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "24816:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenRecoverable_$1062",
																		"typeString": "contract TokenRecoverable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenRecoverable_$1062",
																		"typeString": "contract TokenRecoverable"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24808:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24808:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1039,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "24792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 240,
														"src": "24792:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24792:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24774:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1047,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "24840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1048,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "24851:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24840:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24859:45:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976",
																"typeString": "literal_string \"Given amount is larger than current balance\""
															},
															"value": "Given amount is larger than current balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976",
																"typeString": "literal_string \"Given amount is larger than current balance\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "24832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24832:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "24832:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1056,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "24934:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1057,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "24938:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1053,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "24915:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 323,
														"src": "24915:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$295_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$295_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24915:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "24915:30:0"
											}
										]
									},
									"documentation": null,
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1035,
											"modifierName": {
												"argumentTypes": null,
												"id": 1034,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 944,
												"src": "24754:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "24754:9:0"
										}
									],
									"name": "recoverTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "24705:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1027,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "24705:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "24719:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "24731:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24704:42:0"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24764:0:0"
									},
									"scope": 1062,
									"src": "24682:270:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1720,
							"src": "24606:348:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1063,
										"name": "TokenRecoverable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1062,
										"src": "24978:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TokenRecoverable_$1062",
											"typeString": "contract TokenRecoverable"
										}
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "24978:16:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1065,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 902,
										"src": "24996:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$902",
											"typeString": "contract ERC20"
										}
									},
									"id": 1066,
									"nodeType": "InheritanceSpecifier",
									"src": "24996:5:0"
								}
							],
							"contractDependencies": [
								1062,
								902,
								1011,
								295
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1555,
							"linearizedBaseContracts": [
								1555,
								902,
								295,
								1062,
								1011
							],
							"name": "NOIAToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1069,
									"libraryName": {
										"contractScope": null,
										"id": 1067,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 132,
										"src": "25014:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$132",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "25008:27:0",
									"typeName": {
										"id": 1068,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1072,
									"libraryName": {
										"contractScope": null,
										"id": 1070,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 149,
										"src": "25046:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$149",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "25040:26:0",
									"typeName": {
										"id": 1071,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "25058:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1075,
									"libraryName": {
										"contractScope": null,
										"id": 1073,
										"name": "ECDSA",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 228,
										"src": "25077:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ECDSA_$228",
											"typeString": "library ECDSA"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "25071:24:0",
									"typeName": {
										"id": 1074,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "25087:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": true,
									"id": 1078,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25101:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 1076,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "25101:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e4f494120546f6b656e",
										"id": 1077,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25131:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_90f5bccf6160813215730ba13b03adf03e1f663b815839db9311bf26f1b00a93",
											"typeString": "literal_string \"NOIA Token\""
										},
										"value": "NOIA Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1081,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25149:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 1079,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "25149:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e4f4941",
										"id": 1080,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25181:6:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a7950044eb01e091286e84df490fc4aaa7e5de5fb1170d7e54ed3b45a6e68583",
											"typeString": "literal_string \"NOIA\""
										},
										"value": "NOIA"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1086,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25193:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1082,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "25193:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "3138",
												"id": 1084,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "25232:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												}
											],
											"id": 1083,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "25226:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint8_$",
												"typeString": "type(uint8)"
											},
											"typeName": "uint8"
										},
										"id": 1085,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "25226:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1089,
									"name": "tokensToMint",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25242:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1087,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25242:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030303030303030653138",
										"id": 1088,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25272:13:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"value": "1000000000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1091,
									"name": "burnAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25315:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1090,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "25315:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1095,
									"name": "notify",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25347:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1094,
										"keyType": {
											"id": 1092,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25355:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25347:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1093,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "25366:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1099,
									"name": "hashedTxs",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25391:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 1098,
										"keyType": {
											"id": 1096,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "25399:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "25391:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueType": {
											"id": 1097,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "25410:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1102,
									"name": "etherlessTransferEnabled",
									"nodeType": "VariableDeclaration",
									"scope": 1555,
									"src": "25439:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1100,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "25439:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "74727565",
										"id": 1101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25478:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1114,
									"name": "TransferPreSigned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25535:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25555:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "25597:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25512:97:0"
									},
									"src": "25489:121:0"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "25654:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1117,
																"name": "etherlessTransferEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "25672:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25700:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "25672:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45746865726c657373207472616e736665722066756e6374696f6e616c6974792064697361626c6564",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25706:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a432d77761e9f48572aa7afef8cc88428f6f968ffe5a0155b531c488448ba1ef",
																"typeString": "literal_string \"Etherless transfer functionality disabled\""
															},
															"value": "Etherless transfer functionality disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a432d77761e9f48572aa7afef8cc88428f6f968ffe5a0155b531c488448ba1ef",
																"typeString": "literal_string \"Etherless transfer functionality disabled\""
															}
														],
														"id": 1116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "25664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25664:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "25664:86:0"
											},
											{
												"id": 1123,
												"nodeType": "PlaceholderStatement",
												"src": "25760:1:0"
											}
										]
									},
									"documentation": null,
									"id": 1125,
									"name": "onlyEtherlessTransferEnabled",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25654:0:0"
									},
									"src": "25616:152:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "25801:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1128,
															"name": "notify",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "25811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1131,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "25818:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "25818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25811:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25832:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25811:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "25811:25:0"
											}
										]
									},
									"documentation": null,
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25791:2:0"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25801:0:0"
									},
									"scope": 1555,
									"src": "25774:69:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "25878:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1139,
															"name": "notify",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "25888:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1142,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1140,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "25895:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "25895:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25909:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25888:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "25888:26:0"
											}
										]
									},
									"documentation": null,
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unregister",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25868:2:0"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25878:0:0"
									},
									"scope": 1555,
									"src": "25849:72:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "25979:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1152,
														"name": "etherlessTransferEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "25989:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26016:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25989:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "25989:31:0"
											}
										]
									},
									"documentation": null,
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1150,
											"modifierName": {
												"argumentTypes": null,
												"id": 1149,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 944,
												"src": "25969:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "25969:9:0"
										}
									],
									"name": "enableEtherlessTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25959:2:0"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25979:0:0"
									},
									"scope": 1555,
									"src": "25927:100:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "26086:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1162,
														"name": "etherlessTransferEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "26096:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26123:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "26096:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "26096:32:0"
											}
										]
									},
									"documentation": null,
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1160,
											"modifierName": {
												"argumentTypes": null,
												"id": 1159,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 944,
												"src": "26076:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "26076:9:0"
										}
									],
									"name": "disableEtherlessTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26066:2:0"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26086:0:0"
									},
									"scope": 1555,
									"src": "26033:102:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "26369:164:0",
										"statements": [
											{
												"assignments": [
													1177
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "26379:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "26379:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1180,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "26409:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1181,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "26413:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1178,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "26394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_NOIAToken_$1555",
																"typeString": "contract super NOIAToken"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "26394:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26394:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26379:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1184,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1177,
													"src": "26433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1193,
												"nodeType": "IfStatement",
												"src": "26429:74:0",
												"trueBody": {
													"id": 1192,
													"nodeType": "Block",
													"src": "26442:61:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1186,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "26470:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "26470:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1188,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "26482:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1189,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "26486:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1185,
																	"name": "_postTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "26456:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26456:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1191,
															"nodeType": "ExpressionStatement",
															"src": "26456:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1194,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1177,
													"src": "26519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1195,
												"nodeType": "Return",
												"src": "26512:14:0"
											}
										]
									},
									"documentation": "@dev Transfer token to a specified address\n@param to The address to transfer to.\n@param value The amount to be transferred.",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "26320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "26332:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26319:27:0"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "26363:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26362:6:0"
									},
									"scope": 1555,
									"src": "26302:231:0",
									"stateMutability": "nonpayable",
									"superFunction": 565,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "27081:168:0",
										"statements": [
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "27091:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1208,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "27091:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1212,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "27125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1213,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "27131:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1214,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "27135:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1210,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "27106:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_NOIAToken_$1555",
																"typeString": "contract super NOIAToken"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "27106:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27106:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27091:50:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1217,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1209,
													"src": "27155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1225,
												"nodeType": "IfStatement",
												"src": "27151:68:0",
												"trueBody": {
													"id": 1224,
													"nodeType": "Block",
													"src": "27164:55:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1219,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "27192:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1220,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "27198:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1221,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "27202:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1218,
																	"name": "_postTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "27178:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27178:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1223,
															"nodeType": "ExpressionStatement",
															"src": "27178:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1226,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1209,
													"src": "27235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1207,
												"id": 1227,
												"nodeType": "Return",
												"src": "27228:14:0"
											}
										]
									},
									"documentation": "@dev Transfer tokens from one address to another.\nNote that while this function emits an Approval event, this is not required as per the specification,\nand other compliant implementations may not emit the event.\n@param from address The address which you want to send tokens from\n@param to address The address which you want to transfer to\n@param value uint256 the amount of tokens to be transferred",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "27018:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "27032:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "27044:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27017:41:0"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "27075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27074:6:0"
									},
									"scope": 1555,
									"src": "26996:253:0",
									"stateMutability": "nonpayable",
									"superFunction": 635,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "27328:269:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1238,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "27342:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 148,
														"src": "27342:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27342:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "27486:105:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1258,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "27504:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1259,
																	"name": "burnAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "27510:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "27504:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1267,
															"nodeType": "IfStatement",
															"src": "27500:81:0",
															"trueBody": {
																"id": 1266,
																"nodeType": "Block",
																"src": "27523:58:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1262,
																					"name": "burnAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1091,
																					"src": "27547:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1263,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1235,
																					"src": "27560:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1261,
																				"name": "_burn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1293
																				],
																				"referencedDeclaration": 1293,
																				"src": "27541:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27541:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1265,
																		"nodeType": "ExpressionStatement",
																		"src": "27541:25:0"
																	}
																]
															}
														}
													]
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "27338:253:0",
												"trueBody": {
													"id": 1257,
													"nodeType": "Block",
													"src": "27359:121:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1241,
																		"name": "notify",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "27377:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1242,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "27384:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27377:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27391:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "27377:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1247,
															"nodeType": "IfStatement",
															"src": "27373:32:0",
															"trueBody": {
																"expression": null,
																"functionReturnParameters": 1237,
																"id": 1246,
																"nodeType": "Return",
																"src": "27398:7:0"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1252,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "27453:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1253,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "27459:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1254,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "27463:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1249,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "27434:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1248,
																			"name": "ITokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "27419:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ITokenReceiver_$1021_$",
																				"typeString": "type(contract ITokenReceiver)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27419:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITokenReceiver_$1021",
																			"typeString": "contract ITokenReceiver"
																		}
																	},
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokensReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1020,
																	"src": "27419:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27419:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1256,
															"nodeType": "ExpressionStatement",
															"src": "27419:50:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "27278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "27292:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "27304:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27277:41:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27328:0:0"
									},
									"scope": 1555,
									"src": "27255:342:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "27659:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1279,
																"name": "tokensToMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "27677:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27693:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27677:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c6c20746f6b656e73206d757374206265206d696e746564206265666f7265206275726e696e67",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27696:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf109196a8ee399b1cf59e8dcc3ab096280107a55c33327a0228f023e60b89f9",
																"typeString": "literal_string \"All tokens must be minted before burning\""
															},
															"value": "All tokens must be minted before burning"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf109196a8ee399b1cf59e8dcc3ab096280107a55c33327a0228f023e60b89f9",
																"typeString": "literal_string \"All tokens must be minted before burning\""
															}
														],
														"id": 1278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "27669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27669:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "27669:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1288,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "27761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1289,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "27770:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1285,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "27749:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_NOIAToken_$1555",
																"typeString": "contract super NOIAToken"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 831,
														"src": "27749:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27749:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "27749:27:0"
											}
										]
									},
									"documentation": null,
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "27618:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "27635:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27617:32:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27659:0:0"
									},
									"scope": 1555,
									"src": "27603:180:0",
									"stateMutability": "nonpayable",
									"superFunction": 831,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "28103:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1307,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "28138:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1305,
																		"name": "tokensToMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "28121:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 51,
																	"src": "28121:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28121:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28148:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28121:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420656e6f75676820746f6b656e73206c656674",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28151:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fc23a2810690359aab0e389166ea51ebf839685c0516423f0f8dc783116668f",
																"typeString": "literal_string \"Not enough tokens left\""
															},
															"value": "Not enough tokens left"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fc23a2810690359aab0e389166ea51ebf839685c0516423f0f8dc783116668f",
																"typeString": "literal_string \"Not enough tokens left\""
															}
														],
														"id": 1304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "28113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28113:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "28113:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1314,
														"name": "tokensToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "28186:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1317,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "28218:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1315,
																"name": "tokensToMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "28201:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "28201:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28201:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28186:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "28186:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1322,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "28240:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1323,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "28244:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "28234:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28234:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "28234:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28282:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1330,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "28286:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "28290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "_postTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "28260:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28260:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "28260:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28313:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1303,
												"id": 1335,
												"nodeType": "Return",
												"src": "28306:11:0"
											}
										]
									},
									"documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1300,
											"modifierName": {
												"argumentTypes": null,
												"id": 1299,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 944,
												"src": "28078:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28078:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "28044:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "28056:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28043:27:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "28097:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28097:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28096:6:0"
									},
									"scope": 1555,
									"src": "28030:294:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "28483:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1343,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "28501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "28501:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1345,
																"name": "burnAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "28515:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28501:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c79206275726e416464726573732063616e206275726e20746f6b656e73",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28528:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29717d6b86942e834c189fbcc2a34306c77fc526f487f73eed53c5285e9ec957",
																"typeString": "literal_string \"Only burnAddress can burn tokens\""
															},
															"value": "Only burnAddress can burn tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29717d6b86942e834c189fbcc2a34306c77fc526f487f73eed53c5285e9ec957",
																"typeString": "literal_string \"Only burnAddress can burn tokens\""
															}
														],
														"id": 1342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "28493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28493:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "28493:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1351,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "28579:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28579:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "28591:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1350,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1293
														],
														"referencedDeclaration": 1293,
														"src": "28573:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28573:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "28573:24:0"
											}
										]
									},
									"documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "28461:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28460:15:0"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28483:0:0"
									},
									"scope": 1555,
									"src": "28447:157:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "28675:131:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1366,
																		"name": "_burnAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "28703:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1365,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "28693:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28693:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28720:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28693:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e2061646472657373206d7573742068617665207a65726f2062616c616e636521",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28723:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_404f292e4068cdcd4d7edf853a549d89b3798ce34c65eaf7dcf5a34f469bbef7",
																"typeString": "literal_string \"Burn address must have zero balance!\""
															},
															"value": "Burn address must have zero balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_404f292e4068cdcd4d7edf853a549d89b3798ce34c65eaf7dcf5a34f469bbef7",
																"typeString": "literal_string \"Burn address must have zero balance!\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "28685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28685:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "28685:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1373,
														"name": "burnAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "28773:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1374,
														"name": "_burnAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "28787:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28773:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "28773:26:0"
											}
										]
									},
									"documentation": null,
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1362,
											"modifierName": {
												"argumentTypes": null,
												"id": 1361,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 944,
												"src": "28665:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28665:9:0"
										}
									],
									"name": "setBurnAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"name": "_burnAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "28634:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28633:22:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28675:0:0"
									},
									"scope": 1555,
									"src": "28610:196:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "29511:939:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1396,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "29529:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29544:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "29529:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29548:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0ce1be0f42288523d6bdd45a6d07b8d2b08d1f5986a347b5e5c14064be46e9c",
																"typeString": "literal_string \"Transfer to the zero address\""
															},
															"value": "Transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0ce1be0f42288523d6bdd45a6d07b8d2b08d1f5986a347b5e5c14064be46e9c",
																"typeString": "literal_string \"Transfer to the zero address\""
															}
														],
														"id": 1395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "29521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29521:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "29521:58:0"
											},
											{
												"assignments": [
													1405
												],
												"declarations": [
													{
														"constant": false,
														"id": 1405,
														"name": "hashedParams",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "29590:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1404,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "29590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "29625:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sig",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "29625:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "29642:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NOIAToken_$1555",
																		"typeString": "contract NOIAToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NOIAToken_$1555",
																		"typeString": "contract NOIAToken"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29634:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29634:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1412,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "29649:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1413,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "29654:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1414,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "29662:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1415,
															"name": "_nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "29668:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1406,
														"name": "hashForSign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "29613:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (bytes4,address,address,uint256,uint256,uint256) pure returns (bytes32)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29613:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29590:85:0"
											},
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"name": "from",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "29685:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1418,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29685:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1424,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "29746:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 1420,
																	"name": "hashedParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "29700:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toEthSignedMessageHash",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 227,
																"src": "29700:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
																	"typeString": "function (bytes32) pure returns (bytes32)"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29700:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "29700:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29700:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29685:72:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1428,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "29775:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29791:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29783:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "29775:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29795:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 1427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "29767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29767:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "29767:48:0"
											},
											{
												"assignments": [
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"name": "hashedTx",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "29826:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1436,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "29826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1441,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "29872:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1442,
																	"name": "hashedParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "29878:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1439,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "29855:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "29855:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29855:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1438,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "29845:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29845:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29826:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1447,
																	"name": "hashedTxs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "29910:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 1449,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1448,
																	"name": "hashedTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "29920:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29910:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29933:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "29910:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f6e636520616c72656164792075736564",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29940:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28",
																"typeString": "literal_string \"Nonce already used\""
															},
															"value": "Nonce already used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28",
																"typeString": "literal_string \"Nonce already used\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "29902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29902:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "29902:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1455,
															"name": "hashedTxs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "29971:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 1457,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1456,
															"name": "hashedTx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "29981:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29971:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29993:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29971:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "29971:26:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1461,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "30012:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "30012:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1463,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "30026:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30012:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "30156:197:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1485,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "30180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1486,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "30186:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1487,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "30191:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1484,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "30170:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30170:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1489,
															"nodeType": "ExpressionStatement",
															"src": "30170:28:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1491,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "30226:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1492,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "30232:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1493,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "30237:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1490,
																	"name": "_postTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "30212:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30212:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1495,
															"nodeType": "ExpressionStatement",
															"src": "30212:32:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1497,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "30268:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1498,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "30274:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "30274:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1500,
																		"name": "_fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "30286:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1496,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "30258:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30258:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "30258:33:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1504,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "30319:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1505,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "30325:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "30325:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1507,
																		"name": "_fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "30337:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1503,
																	"name": "_postTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "30305:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30305:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1509,
															"nodeType": "ExpressionStatement",
															"src": "30305:37:0"
														}
													]
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "30008:345:0",
												"trueBody": {
													"id": 1483,
													"nodeType": "Block",
													"src": "30031:119:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1466,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "30055:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1467,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "30061:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1470,
																				"name": "_fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1386,
																				"src": "30077:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1468,
																				"name": "_value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1384,
																				"src": "30066:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 26,
																			"src": "30066:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30066:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1465,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "30045:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30045:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "30045:38:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1475,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "30111:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1476,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "30117:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1479,
																				"name": "_fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1386,
																				"src": "30133:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1477,
																				"name": "_value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1384,
																				"src": "30122:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 26,
																			"src": "30122:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30122:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1474,
																	"name": "_postTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "30097:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30097:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1482,
															"nodeType": "ExpressionStatement",
															"src": "30097:42:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1513,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "30386:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1514,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "30392:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "30397:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "30397:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1517,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "30409:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1518,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "30417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "TransferPreSigned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "30368:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30368:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "EmitStatement",
												"src": "30363:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30439:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1394,
												"id": 1522,
												"nodeType": "Return",
												"src": "30432:11:0"
											}
										]
									},
									"documentation": "@notice Submit a presigned transfer\n@param _signature bytes The signature, issued by the owner.\n@param _to address The address which you want to transfer to.\n@param _value uint256 The amount of tokens to be transferred.\n@param _fee uint256 The amount of tokens paid to msg.sender, by the owner.\n@param _nonce uint256 Presigned transaction number. Should be unique, per user.",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1391,
											"modifierName": {
												"argumentTypes": null,
												"id": 1390,
												"name": "onlyEtherlessTransferEnabled",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1125,
												"src": "29455:28:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29455:28:0"
										}
									],
									"name": "transferPreSigned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"name": "_signature",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "29311:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "29344:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "29365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "29389:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"name": "_nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "29411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29301:130:0"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "29501:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29500:6:0"
									},
									"scope": 1555,
									"src": "29275:1175:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "31105:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1544,
																	"name": "_selector",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "31149:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1545,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "31160:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1546,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "31168:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1547,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "31173:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1548,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "31181:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1549,
																	"name": "_nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "31187:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1542,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "31132:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31132:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31132:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1541,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "31122:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31122:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1552,
												"nodeType": "Return",
												"src": "31115:80:0"
											}
										]
									},
									"documentation": "@notice Hash (keccak256) of the payload used by transferPreSigned\n@param _token address The address of the token.\n@param _to address The address which you want to transfer to.\n@param _value uint256 The amount of tokens to be transferred.\n@param _fee uint256 The amount of tokens paid to msg.sender, by the owner.\n@param _nonce uint256 Presigned transaction number.",
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashForSign",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"name": "_selector",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "30909:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "30935:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "30959:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "30980:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "31004:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"name": "_nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "31026:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30899:147:0"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "31092:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31091:9:0"
									},
									"scope": 1555,
									"src": "30879:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1720,
							"src": "24956:6248:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1556,
										"name": "ITokenReceiver",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1021,
										"src": "31228:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenReceiver_$1021",
											"typeString": "contract ITokenReceiver"
										}
									},
									"id": 1557,
									"nodeType": "InheritanceSpecifier",
									"src": "31228:14:0"
								}
							],
							"contractDependencies": [
								1021
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1719,
							"linearizedBaseContracts": [
								1719,
								1021
							],
							"name": "NOIAVault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1560,
									"libraryName": {
										"contractScope": null,
										"id": 1558,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 509,
										"src": "31255:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$509",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "31249:27:0",
									"typeName": {
										"contractScope": null,
										"id": 1559,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 295,
										"src": "31269:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$295",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 1563,
									"name": "NOIA_TOKEN_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 1719,
									"src": "31282:87:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1561,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "31282:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307866633835383135344330623263344133333233303436466235303538313146313130454264413537",
										"id": 1562,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "31327:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xfc858154C0b2c4A3323046Fb505811F110EBdA57"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1565,
									"name": "beneficiary",
									"nodeType": "VariableDeclaration",
									"scope": 1719,
									"src": "31380:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1564,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "31380:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1567,
									"name": "lockTill",
									"nodeType": "VariableDeclaration",
									"scope": 1719,
									"src": "31412:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1566,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "31412:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "31463:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1570,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "31481:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1573,
																				"name": "NOIA_TOKEN_ADDRESS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "31505:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1572,
																			"name": "NOIAToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1555,
																			"src": "31495:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_NOIAToken_$1555_$",
																				"typeString": "type(contract NOIAToken)"
																			}
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31495:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NOIAToken_$1555",
																			"typeString": "contract NOIAToken"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 934,
																	"src": "31495:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31495:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31481:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616c6c6572206973206e6f74204e4f494120546f6b656e206f776e6572",
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31534:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35c978d93fef0a9c1eb4d0794dd910054335e99067ce07b1de81353d6deef9b2",
																"typeString": "literal_string \"Caller is not NOIA Token owner\""
															},
															"value": "Caller is not NOIA Token owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35c978d93fef0a9c1eb4d0794dd910054335e99067ce07b1de81353d6deef9b2",
																"typeString": "literal_string \"Caller is not NOIA Token owner\""
															}
														],
														"id": 1569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "31473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31473:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "31473:94:0"
											},
											{
												"id": 1581,
												"nodeType": "PlaceholderStatement",
												"src": "31577:1:0"
											}
										]
									},
									"documentation": null,
									"id": 1583,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31460:2:0"
									},
									"src": "31442:143:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "31659:344:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1591,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "31677:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31700:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31692:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31692:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "31677:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5661756c7420697320616c726561647920696e697469616c697a6564",
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31704:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b00cb3925b14e4b476673449f9e2d0f2614211a08d3dcbc011e9e8def9ed4aaa",
																"typeString": "literal_string \"Vault is already initialized\""
															},
															"value": "Vault is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b00cb3925b14e4b476673449f9e2d0f2614211a08d3dcbc011e9e8def9ed4aaa",
																"typeString": "literal_string \"Vault is already initialized\""
															}
														],
														"id": 1590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "31669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31669:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "31669:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1600,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1585,
																"src": "31753:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31777:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31769:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "31753:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b696e6720746f20746865207a65726f2061646472657373",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31781:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3112c6ee713b241e56cef1088cee1c6a953ec11f3a2533511fe231cecbf50c1",
																"typeString": "literal_string \"Locking to the zero address\""
															},
															"value": "Locking to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3112c6ee713b241e56cef1088cee1c6a953ec11f3a2533511fe231cecbf50c1",
																"typeString": "literal_string \"Locking to the zero address\""
															}
														],
														"id": 1599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "31745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31745:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "31745:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1609,
																"name": "_lockTill",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "31829:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1610,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "31841:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31829:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c6f636b696e672074696d65206d75737420626520696e20667574757265",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31846:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee24aae67fdb9221b5a1dcbe9fc5c9e908a4b8623c751de1159881817170ef79",
																"typeString": "literal_string \"Locking time must be in future\""
															},
															"value": "Locking time must be in future"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee24aae67fdb9221b5a1dcbe9fc5c9e908a4b8623c751de1159881817170ef79",
																"typeString": "literal_string \"Locking time must be in future\""
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "31821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31821:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "31821:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1615,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "31890:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1616,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "31904:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31890:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "31890:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1619,
														"name": "lockTill",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "31926:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1620,
														"name": "_lockTill",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "31937:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31926:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "31926:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1624,
																	"name": "NOIA_TOKEN_ADDRESS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "31966:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1623,
																"name": "NOIAToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "31956:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_NOIAToken_$1555_$",
																	"typeString": "type(contract NOIAToken)"
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31956:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NOIAToken_$1555",
																"typeString": "contract NOIAToken"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "register",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1136,
														"src": "31956:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31956:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "31956:40:0"
											}
										]
									},
									"documentation": null,
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"name": "_beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31611:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"name": "_lockTill",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31633:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31610:41:0"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31659:0:0"
									},
									"scope": 1719,
									"src": "31591:412:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "32035:205:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1633,
														"name": "lockTill",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "32049:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1634,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "32060:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32049:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "32045:27:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 1632,
													"id": 1636,
													"nodeType": "Return",
													"src": "32065:7:0"
												}
											},
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"name": "token",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "32082:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NOIAToken_$1555",
															"typeString": "contract NOIAToken"
														},
														"typeName": {
															"contractScope": null,
															"id": 1638,
															"name": "NOIAToken",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1555,
															"src": "32082:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NOIAToken_$1555",
																"typeString": "contract NOIAToken"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1643,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1641,
															"name": "NOIA_TOKEN_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "32110:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1640,
														"name": "NOIAToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "32100:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_NOIAToken_$1555_$",
															"typeString": "type(contract NOIAToken)"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32100:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_NOIAToken_$1555",
														"typeString": "contract NOIAToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32082:47:0"
											},
											{
												"assignments": [
													1645
												],
												"declarations": [
													{
														"constant": false,
														"id": 1645,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "32139:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32139:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1652,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1649,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "32181:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NOIAVault_$1719",
																		"typeString": "contract NOIAVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NOIAVault_$1719",
																		"typeString": "contract NOIAVault"
																	}
																],
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32173:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1646,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "32157:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NOIAToken_$1555",
																"typeString": "contract NOIAToken"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 546,
														"src": "32157:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32157:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32139:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1656,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "32212:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1657,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "32225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1653,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "32197:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NOIAToken_$1555",
																"typeString": "contract NOIAToken"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1197,
														"src": "32197:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32197:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "32197:36:0"
											}
										]
									},
									"documentation": null,
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32025:2:0"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32035:0:0"
									},
									"scope": 1719,
									"src": "32009:231:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "32328:272:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1674,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "32354:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$295",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$295",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32346:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32346:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1676,
																"name": "NOIA_TOKEN_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "32364:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32346:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207265636f766572204e4f494120546f6b656e",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32384:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_772311c4b9f4d43342fa3f0eda5c971379ca565ce55969d75febe3fe15a3ca00",
																"typeString": "literal_string \"Cannot recover NOIA Token\""
															},
															"value": "Cannot recover NOIA Token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_772311c4b9f4d43342fa3f0eda5c971379ca565ce55969d75febe3fe15a3ca00",
																"typeString": "literal_string \"Cannot recover NOIA Token\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "32338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32338:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "32338:74:0"
											},
											{
												"assignments": [
													1682
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1704,
														"src": "32422:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1689,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1686,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "32464:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NOIAVault_$1719",
																		"typeString": "contract NOIAVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NOIAVault_$1719",
																		"typeString": "contract NOIAVault"
																	}
																],
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32456:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32456:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1683,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "32440:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 240,
														"src": "32440:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32440:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32422:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1691,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "32488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1692,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "32499:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32488:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "476976656e20616d6f756e74206973206c6172676572207468616e2063757272656e742062616c616e6365",
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32507:45:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976",
																"typeString": "literal_string \"Given amount is larger than current balance\""
															},
															"value": "Given amount is larger than current balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f88c2b987653742ecd02849285169f1eaaadf3e37ff12e2783d5486b802d0976",
																"typeString": "literal_string \"Given amount is larger than current balance\""
															}
														],
														"id": 1690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1738
														],
														"referencedDeclaration": 1738,
														"src": "32480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32480:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "32480:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "32582:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1701,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "32586:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1697,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "32563:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$295",
																"typeString": "contract IERC20"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 323,
														"src": "32563:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$295_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$295_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32563:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "32563:30:0"
											}
										]
									},
									"documentation": null,
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1670,
											"modifierName": {
												"argumentTypes": null,
												"id": 1669,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1583,
												"src": "32318:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "32318:9:0"
										}
									],
									"name": "recoverTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "32269:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1662,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "32269:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$295",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "32283:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "32295:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32268:42:0"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32328:0:0"
									},
									"scope": 1719,
									"src": "32246:354:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "32696:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1714,
														"name": "release",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "32706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32706:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "32706:9:0"
											}
										]
									},
									"documentation": null,
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "32639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "32656:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "32673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32629:57:0"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32696:0:0"
									},
									"scope": 1719,
									"src": "32606:116:0",
									"stateMutability": "nonpayable",
									"superFunction": 1020,
									"visibility": "external"
								}
							],
							"scope": 1720,
							"src": "31206:1518:0"
						}
					],
					"src": "28:32696:0"
				},
				"id": 0
			}
		}
	}
}