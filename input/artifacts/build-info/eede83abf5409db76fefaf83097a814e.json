{
	"id": "eede83abf5409db76fefaf83097a814e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.10",
	"solcLongVersion": "0.5.10+commit.5a6ea5b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"input/RampInstantEthEscrows.sol": {
				"content": "pragma solidity 0.5.10;\n\n/**\n * Copyright Â© 2017-2019 Ramp Network sp. z o.o. All rights reserved (MIT License).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software\n * and associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n * is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies\n * or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE\n * AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\ncontract AssetAdapter {\n\n    uint16 public ASSET_TYPE;\n\n    constructor(\n        uint16 assetType\n    ) internal {\n        ASSET_TYPE = assetType;\n    }\n\n    /**\n     * Ensure the described asset is sent to the given address.\n     * Should revert if the transfer failed, but callers must also handle `false` being returned,\n     * much like ERC-20's `transfer`.\n     */\n    function rawSendAsset(\n        bytes memory assetData,\n        uint256 _amount,\n        address payable _to\n    ) internal returns (bool success);  // solium-disable-line indentation\n    // indentation rule bug ^ https://github.com/duaraghav8/Ethlint/issues/268\n\n    /**\n     * Ensure the described asset is sent to this contract.\n     * Should revert if the transfer failed, but callers must also handle `false` being returned,\n     * much like ERC-20's `transfer`.\n     */\n    function rawLockAsset(\n        uint256 amount,\n        address payable _from\n    ) internal returns (bool success) {\n        return RampInstantPoolInterface(_from).sendFundsToSwap(amount);\n    }\n\n    function getAmount(bytes memory assetData) internal pure returns (uint256);\n\n    /**\n     * Verify that the passed asset data can be handled by this adapter and given pool.\n     *\n     * @dev it's sufficient to use this only when creating a new swap -- all the other swap\n     * functions first check if the swap hash is valid, while a swap hash with invalid\n     * asset type wouldn't be created at all.\n     *\n     * @dev asset type is 2 bytes long, and it's at offset 32 in `assetData`'s memory (the first 32\n     * bytes are the data length). We load the word at offset 2 (it ends with the asset type bytes),\n     * and retrieve its last 2 bytes into a `uint16` variable.\n     */\n    modifier checkAssetTypeAndData(bytes memory assetData, address _pool) {\n        uint16 assetType;\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            assetType := and(\n                mload(add(assetData, 2)),\n                0xffff\n            )\n        }\n        require(assetType == ASSET_TYPE, \"invalid asset type\");\n        checkAssetData(assetData, _pool);\n        _;\n    }\n\n    function checkAssetData(bytes memory assetData, address _pool) internal view;\n\n    function () external payable {\n        revert(\"this contract cannot receive ether\");\n    }\n\n}\n\ncontract RampInstantPoolInterface {\n\n    uint16 public ASSET_TYPE;\n\n    function sendFundsToSwap(uint256 _amount)\n        public /*onlyActive onlySwapsContract isWithinLimits*/ returns(bool success);\n\n}\n\ncontract Ownable {\n\n    address public owner;\n\n    event OwnerChanged(address oldOwner, address newOwner);\n\n    constructor() internal {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only the owner can call this\");\n        _;\n    }\n\n    function changeOwner(address _newOwner) external onlyOwner {\n        owner = _newOwner;\n        emit OwnerChanged(msg.sender, _newOwner);\n    }\n\n}\n\ncontract WithStatus is Ownable {\n\n    enum Status {\n        STOPPED,\n        RETURN_ONLY,\n        FINALIZE_ONLY,\n        ACTIVE\n    }\n\n    event StatusChanged(Status oldStatus, Status newStatus);\n\n    Status public status = Status.ACTIVE;\n\n    function setStatus(Status _status) external onlyOwner {\n        emit StatusChanged(status, _status);\n        status = _status;\n    }\n\n    modifier statusAtLeast(Status _status) {\n        require(status >= _status, \"invalid contract status\");\n        _;\n    }\n\n}\n\ncontract WithOracles is Ownable {\n\n    mapping (address => bool) oracles;\n\n    constructor() internal {\n        oracles[msg.sender] = true;\n    }\n\n    function approveOracle(address _oracle) external onlyOwner {\n        oracles[_oracle] = true;\n    }\n\n    function revokeOracle(address _oracle) external onlyOwner {\n        oracles[_oracle] = false;\n    }\n\n    modifier isOracle(address _oracle) {\n        require(oracles[_oracle], \"invalid oracle address\");\n        _;\n    }\n\n    modifier onlyOracleOrPool(address _pool, address _oracle) {\n        require(\n            msg.sender == _pool || (msg.sender == _oracle && oracles[msg.sender]),\n            \"only the oracle or the pool can call this\"\n        );\n        _;\n    }\n\n}\n\ncontract WithSwapsCreator is Ownable {\n\n    address internal swapCreator;\n\n    event SwapCreatorChanged(address _oldCreator, address _newCreator);\n\n    constructor() internal {\n        swapCreator = msg.sender;\n    }\n\n    function changeSwapCreator(address _newCreator) public onlyOwner {\n        swapCreator = _newCreator;\n        emit SwapCreatorChanged(msg.sender, _newCreator);\n    }\n\n    modifier onlySwapCreator() {\n        require(msg.sender == swapCreator, \"only the swap creator can call this\");\n        _;\n    }\n\n}\n\ncontract AssetAdapterWithFees is Ownable, AssetAdapter {\n\n    uint16 public feeThousandthsPercent;\n    uint256 public minFeeAmount;\n\n    constructor(uint16 _feeThousandthsPercent, uint256 _minFeeAmount) public {\n        require(_feeThousandthsPercent < (1 << 16), \"fee % too high\");\n        require(_minFeeAmount <= (1 << 255), \"minFeeAmount too high\");\n        feeThousandthsPercent = _feeThousandthsPercent;\n        minFeeAmount = _minFeeAmount;\n    }\n\n    function rawAccumulateFee(bytes memory assetData, uint256 _amount) internal;\n\n    function accumulateFee(bytes memory assetData) internal {\n        rawAccumulateFee(assetData, getFee(getAmount(assetData)));\n    }\n\n    function withdrawFees(\n        bytes calldata assetData,\n        address payable _to\n    ) external /*onlyOwner*/ returns (bool success);  // solium-disable-line indentation\n\n    function getFee(uint256 _amount) internal view returns (uint256) {\n        uint256 fee = _amount * feeThousandthsPercent / 100000;\n        return fee < minFeeAmount\n            ? minFeeAmount\n            : fee;\n    }\n\n    function getAmountWithFee(bytes memory assetData) internal view returns (uint256) {\n        uint256 baseAmount = getAmount(assetData);\n        return baseAmount + getFee(baseAmount);\n    }\n\n    function lockAssetWithFee(\n        bytes memory assetData,\n        address payable _from\n    ) internal returns (bool success) {\n        return rawLockAsset(getAmountWithFee(assetData), _from);\n    }\n\n    function sendAssetWithFee(\n        bytes memory assetData,\n        address payable _to\n    ) internal returns (bool success) {\n        return rawSendAsset(assetData, getAmountWithFee(assetData), _to);\n    }\n\n    function sendAssetKeepingFee(\n        bytes memory assetData,\n        address payable _to\n    ) internal returns (bool success) {\n        bool result = rawSendAsset(assetData, getAmount(assetData), _to);\n        if (result) accumulateFee(assetData);\n        return result;\n    }\n\n}\n\ncontract RampInstantEscrows\nis Ownable, WithStatus, WithOracles, WithSwapsCreator, AssetAdapterWithFees {\n\n    /// @dev contract version, defined in semver\n    string public constant VERSION = \"0.5.0\";\n\n    uint32 internal constant MIN_ACTUAL_TIMESTAMP = 1000000000;\n\n    /// @notice lock time limits for pool's assets, after which unreleased escrows can be returned\n    uint32 internal constant MIN_SWAP_LOCK_TIME_S = 24 hours;\n    uint32 internal constant MAX_SWAP_LOCK_TIME_S = 30 days;\n\n    event Created(bytes32 indexed swapHash);\n    event Released(bytes32 indexed swapHash);\n    event PoolReleased(bytes32 indexed swapHash);\n    event Returned(bytes32 indexed swapHash);\n    event PoolReturned(bytes32 indexed swapHash);\n\n    /**\n     * @notice Mapping from swap details hash to its end time (as a unix timestamp).\n     * After the end time the swap can be cancelled, and the funds will be returned to the pool.\n     */\n    mapping (bytes32 => uint32) internal swaps;\n\n    /**\n     * Swap creation, called by the Ramp Network. Checks swap parameters and ensures the crypto\n     * asset is locked on this contract.\n     *\n     * Emits a `Created` event with the swap hash.\n     */\n    function create(\n        address payable _pool,\n        address _receiver,\n        address _oracle,\n        bytes calldata _assetData,\n        bytes32 _paymentDetailsHash,\n        uint32 lockTimeS\n    )\n        external\n        statusAtLeast(Status.ACTIVE)\n        onlySwapCreator()\n        isOracle(_oracle)\n        checkAssetTypeAndData(_assetData, _pool)\n        returns\n        (bool success)\n    {\n        require(\n            lockTimeS >= MIN_SWAP_LOCK_TIME_S && lockTimeS <= MAX_SWAP_LOCK_TIME_S,\n            \"lock time outside limits\"\n        );\n        bytes32 swapHash = getSwapHash(\n            _pool, _receiver, _oracle, keccak256(_assetData), _paymentDetailsHash\n        );\n        requireSwapNotExists(swapHash);\n        // Set up swap status before transfer, to avoid reentrancy attacks.\n        // Even if a malicious token is somehow passed to this function (despite the oracle\n        // signature of its details), the state of this contract is already fully updated,\n        // so it will behave correctly (as it would be a separate call).\n        // solium-disable-next-line security/no-block-members\n        swaps[swapHash] = uint32(block.timestamp) + lockTimeS;\n        require(\n            lockAssetWithFee(_assetData, _pool),\n            \"escrow lock failed\"\n        );\n        emit Created(swapHash);\n        return true;\n    }\n\n    /**\n     * Swap release, which transfers the crypto asset to the receiver and removes the swap from\n     * the active swap mapping. Normally called by the swap's oracle after it confirms a matching\n     * wire transfer on pool's bank account. Can be also called by the pool, for example in case\n     * of a dispute, when the parties reach an agreement off-chain.\n     *\n     * Emits a `Released` or `PoolReleased` event with the swap's hash.\n     */\n    function release(\n        address _pool,\n        address payable _receiver,\n        address _oracle,\n        bytes calldata _assetData,\n        bytes32 _paymentDetailsHash\n    ) external statusAtLeast(Status.FINALIZE_ONLY) onlyOracleOrPool(_pool, _oracle) {\n        bytes32 swapHash = getSwapHash(\n            _pool, _receiver, _oracle, keccak256(_assetData), _paymentDetailsHash\n        );\n        requireSwapCreated(swapHash);\n        // Delete the swap status before transfer, to avoid reentrancy attacks.\n        swaps[swapHash] = 0;\n        require(\n            sendAssetKeepingFee(_assetData, _receiver),\n            \"asset release failed\"\n        );\n        if (msg.sender == _pool) {\n            emit PoolReleased(swapHash);\n        } else {\n            emit Released(swapHash);\n        }\n    }\n\n    /**\n     * Swap return, which transfers the crypto asset back to the pool and removes the swap from\n     * the active swap mapping. Can be called by the pool or the swap's oracle, but only if the\n     * escrow lock time expired.\n     *\n     * Emits a `Returned` or `PoolReturned` event with the swap's hash.\n     */\n    function returnFunds(\n        address payable _pool,\n        address _receiver,\n        address _oracle,\n        bytes calldata _assetData,\n        bytes32 _paymentDetailsHash\n    ) external statusAtLeast(Status.RETURN_ONLY) onlyOracleOrPool(_pool, _oracle) {\n        bytes32 swapHash = getSwapHash(\n            _pool, _receiver, _oracle, keccak256(_assetData), _paymentDetailsHash\n        );\n        requireSwapExpired(swapHash);\n        // Delete the swap status before transfer, to avoid reentrancy attacks.\n        swaps[swapHash] = 0;\n        require(\n            sendAssetWithFee(_assetData, _pool),\n            \"asset return failed\"\n        );\n        if (msg.sender == _pool) {\n            emit PoolReturned(swapHash);\n        } else {\n            emit Returned(swapHash);\n        }\n    }\n\n    /**\n     * Given all valid swap details, returns its status. The return can be:\n     * 0: the swap details are invalid, swap doesn't exist, or was already released/returned.\n     * >1: the swap was created, and the value is a timestamp indicating end of its lock time.\n     */\n    function getSwapStatus(\n        address _pool,\n        address _receiver,\n        address _oracle,\n        bytes calldata _assetData,\n        bytes32 _paymentDetailsHash\n    ) external view returns (uint32 status) {\n        bytes32 swapHash = getSwapHash(\n            _pool, _receiver, _oracle, keccak256(_assetData), _paymentDetailsHash\n        );\n        return swaps[swapHash];\n    }\n\n    /**\n     * Calculates the swap hash used to reference the swap in this contract's storage.\n     */\n    function getSwapHash(\n        address _pool,\n        address _receiver,\n        address _oracle,\n        bytes32 assetHash,\n        bytes32 _paymentDetailsHash\n    ) internal pure returns (bytes32) {\n        return keccak256(\n            abi.encodePacked(\n                _pool, _receiver, _oracle, assetHash, _paymentDetailsHash\n            )\n        );\n    }\n\n    function requireSwapNotExists(bytes32 swapHash) internal view {\n        require(\n            swaps[swapHash] == 0,\n            \"swap already exists\"\n        );\n    }\n\n    function requireSwapCreated(bytes32 swapHash) internal view {\n        require(\n            swaps[swapHash] > MIN_ACTUAL_TIMESTAMP,\n            \"swap invalid\"\n        );\n    }\n\n    function requireSwapExpired(bytes32 swapHash) internal view {\n        require(\n            // solium-disable-next-line security/no-block-members\n            swaps[swapHash] > MIN_ACTUAL_TIMESTAMP && block.timestamp > swaps[swapHash],\n            \"swap not expired or invalid\"\n        );\n    }\n\n}\n\ncontract EthAdapter is AssetAdapterWithFees {\n\n    uint16 internal constant ETH_TYPE_ID = 1;\n    uint16 internal constant ETH_ASSET_DATA_LENGTH = 34;\n    uint256 internal accumulatedFees = 0;\n\n    constructor() internal AssetAdapter(ETH_TYPE_ID) {}\n\n    /**\n    * @dev eth assetData bytes contents:\n    * offset length type     contents\n    * +00    32     uint256  data length (== 0x22 == 34 bytes)\n    * +32     2     uint16   asset type  (== ETH_TYPE_ID == 1)\n    * +34    32     uint256  ether amount in wei\n    */\n    function getAmount(bytes memory assetData) internal pure returns (uint256 amount) {\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            amount := mload(add(assetData, 34))\n        }\n    }\n\n    function rawSendAsset(\n        bytes memory /*assetData*/,\n        uint256 _amount,\n        address payable _to\n    ) internal returns (bool success) {\n        _to.transfer(_amount);  // always throws on failure\n        return true;\n    }\n\n    function rawAccumulateFee(bytes memory /*assetData*/, uint256 _amount) internal {\n        accumulatedFees += _amount;\n    }\n\n    function withdrawFees(\n        bytes calldata /*assetData*/,\n        address payable _to\n    ) external onlyOwner returns (bool success) {\n        uint256 fees = accumulatedFees;\n        accumulatedFees = 0;\n        _to.transfer(fees);\n        return true;\n    }\n\n    /**\n     * This adapter can receive eth payments, but no other use of the fallback function is allowed.\n     */\n    function () external payable {\n        require(msg.data.length == 0, \"invalid method called\");\n    }\n\n    function checkAssetData(bytes memory assetData, address /*_pool*/) internal view {\n        require(assetData.length == ETH_ASSET_DATA_LENGTH, \"invalid asset data length\");\n    }\n\n}\n\ncontract RampInstantEthEscrows is RampInstantEscrows, EthAdapter {\n\n    constructor(\n        uint16 _feeThousandthsPercent,\n        uint256 _minFeeAmount\n    ) public AssetAdapterWithFees(_feeThousandthsPercent, _minFeeAmount) {}\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"input/RampInstantEthEscrows.sol": {
				"AssetAdapter": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "ASSET_TYPE",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "assetType",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ASSET_TYPE()": "8815eb39"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"ASSET_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"assetType\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Copyright \\u00a9 2017-2019 Ramp Network sp. z o.o. All rights reserved (MIT License). * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"AssetAdapter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {},
						"notice": "Copyright Â© 2017-2019 Ramp Network sp. z o.o. All rights reserved (MIT License). * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
					}
				},
				"AssetAdapterWithFees": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "feeThousandthsPercent",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ASSET_TYPE",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "assetData",
									"type": "bytes"
								},
								{
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrawFees",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minFeeAmount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_feeThousandthsPercent",
									"type": "uint16"
								},
								{
									"name": "_minFeeAmount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ASSET_TYPE()": "8815eb39",
							"changeOwner(address)": "a6f9dae1",
							"feeThousandthsPercent()": "0bc2aad2",
							"minFeeAmount()": "f5d36475",
							"owner()": "8da5cb5b",
							"withdrawFees(bytes,address)": "bfe5d9c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"feeThousandthsPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSET_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"assetData\",\"type\":\"bytes\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minFeeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_feeThousandthsPercent\",\"type\":\"uint16\"},{\"name\":\"_minFeeAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"AssetAdapterWithFees\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"EthAdapter": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "feeThousandthsPercent",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ASSET_TYPE",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "",
									"type": "bytes"
								},
								{
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrawFees",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minFeeAmount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ASSET_TYPE()": "8815eb39",
							"changeOwner(address)": "a6f9dae1",
							"feeThousandthsPercent()": "0bc2aad2",
							"minFeeAmount()": "f5d36475",
							"owner()": "8da5cb5b",
							"withdrawFees(bytes,address)": "bfe5d9c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"feeThousandthsPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSET_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minFeeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"EthAdapter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"Ownable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"RampInstantEscrows": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								},
								{
									"name": "lockTimeS",
									"type": "uint32"
								}
							],
							"name": "create",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeThousandthsPercent",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newCreator",
									"type": "address"
								}
							],
							"name": "changeSwapCreator",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_status",
									"type": "uint8"
								}
							],
							"name": "setStatus",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "revokeOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ASSET_TYPE",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								}
							],
							"name": "getSwapStatus",
							"outputs": [
								{
									"name": "status",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								}
							],
							"name": "release",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								}
							],
							"name": "returnFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "assetData",
									"type": "bytes"
								},
								{
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrawFees",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "approveOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minFeeAmount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "VERSION",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "Created",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "PoolReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "Returned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "PoolReturned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_oldCreator",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_newCreator",
									"type": "address"
								}
							],
							"name": "SwapCreatorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "StatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ASSET_TYPE()": "8815eb39",
							"VERSION()": "ffa1ad74",
							"approveOracle(address)": "f47bc89c",
							"changeOwner(address)": "a6f9dae1",
							"changeSwapCreator(address)": "26bdee37",
							"create(address,address,address,bytes,bytes32,uint32)": "0b898c9e",
							"feeThousandthsPercent()": "0bc2aad2",
							"getSwapStatus(address,address,address,bytes,bytes32)": "946519f1",
							"minFeeAmount()": "f5d36475",
							"owner()": "8da5cb5b",
							"release(address,address,address,bytes,bytes32)": "9a3c6e29",
							"returnFunds(address,address,address,bytes,bytes32)": "a80e7acb",
							"revokeOracle(address)": "5983e6b0",
							"setStatus(uint8)": "2e49d78b",
							"status()": "200d2ed2",
							"withdrawFees(bytes,address)": "bfe5d9c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"},{\"name\":\"lockTimeS\",\"type\":\"uint32\"}],\"name\":\"create\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeThousandthsPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCreator\",\"type\":\"address\"}],\"name\":\"changeSwapCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"revokeOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSET_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"}],\"name\":\"getSwapStatus\",\"outputs\":[{\"name\":\"status\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"}],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"}],\"name\":\"returnFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"assetData\",\"type\":\"bytes\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"approveOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minFeeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"PoolReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"Returned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"PoolReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newCreator\",\"type\":\"address\"}],\"name\":\"SwapCreatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"StatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"create(address,address,address,bytes,bytes32,uint32)\":{\"notice\":\"Swap creation, called by the Ramp Network. Checks swap parameters and ensures the crypto asset is locked on this contract.     * Emits a `Created` event with the swap hash.\"},\"getSwapStatus(address,address,address,bytes,bytes32)\":{\"notice\":\"Given all valid swap details, returns its status. The return can be: 0: the swap details are invalid, swap doesn't exist, or was already released/returned. >1: the swap was created, and the value is a timestamp indicating end of its lock time.\"},\"release(address,address,address,bytes,bytes32)\":{\"notice\":\"Swap release, which transfers the crypto asset to the receiver and removes the swap from the active swap mapping. Normally called by the swap's oracle after it confirms a matching wire transfer on pool's bank account. Can be also called by the pool, for example in case of a dispute, when the parties reach an agreement off-chain.     * Emits a `Released` or `PoolReleased` event with the swap's hash.\"},\"returnFunds(address,address,address,bytes,bytes32)\":{\"notice\":\"Swap return, which transfers the crypto asset back to the pool and removes the swap from the active swap mapping. Can be called by the pool or the swap's oracle, but only if the escrow lock time expired.     * Emits a `Returned` or `PoolReturned` event with the swap's hash.\"}}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"RampInstantEscrows\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"create(address,address,address,bytes,bytes32,uint32)": {
								"notice": "Swap creation, called by the Ramp Network. Checks swap parameters and ensures the crypto asset is locked on this contract.     * Emits a `Created` event with the swap hash."
							},
							"getSwapStatus(address,address,address,bytes,bytes32)": {
								"notice": "Given all valid swap details, returns its status. The return can be: 0: the swap details are invalid, swap doesn't exist, or was already released/returned. >1: the swap was created, and the value is a timestamp indicating end of its lock time."
							},
							"release(address,address,address,bytes,bytes32)": {
								"notice": "Swap release, which transfers the crypto asset to the receiver and removes the swap from the active swap mapping. Normally called by the swap's oracle after it confirms a matching wire transfer on pool's bank account. Can be also called by the pool, for example in case of a dispute, when the parties reach an agreement off-chain.     * Emits a `Released` or `PoolReleased` event with the swap's hash."
							},
							"returnFunds(address,address,address,bytes,bytes32)": {
								"notice": "Swap return, which transfers the crypto asset back to the pool and removes the swap from the active swap mapping. Can be called by the pool or the swap's oracle, but only if the escrow lock time expired.     * Emits a `Returned` or `PoolReturned` event with the swap's hash."
							}
						}
					}
				},
				"RampInstantEthEscrows": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								},
								{
									"name": "lockTimeS",
									"type": "uint32"
								}
							],
							"name": "create",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeThousandthsPercent",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newCreator",
									"type": "address"
								}
							],
							"name": "changeSwapCreator",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_status",
									"type": "uint8"
								}
							],
							"name": "setStatus",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "revokeOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ASSET_TYPE",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								}
							],
							"name": "getSwapStatus",
							"outputs": [
								{
									"name": "status",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								}
							],
							"name": "release",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								},
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_oracle",
									"type": "address"
								},
								{
									"name": "_assetData",
									"type": "bytes"
								},
								{
									"name": "_paymentDetailsHash",
									"type": "bytes32"
								}
							],
							"name": "returnFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "",
									"type": "bytes"
								},
								{
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrawFees",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "approveOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minFeeAmount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "VERSION",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_feeThousandthsPercent",
									"type": "uint16"
								},
								{
									"name": "_minFeeAmount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "Created",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "PoolReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "Returned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "swapHash",
									"type": "bytes32"
								}
							],
							"name": "PoolReturned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_oldCreator",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_newCreator",
									"type": "address"
								}
							],
							"name": "SwapCreatorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "StatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"input/RampInstantEthEscrows.sol\":16437:16669  contract RampInstantEthEscrows is RampInstantEscrows, EthAdapter {... */\n  mstore(0x40, 0x80)\n    /* \"input/RampInstantEthEscrows.sol\":4400:4413  Status.ACTIVE */\n  0x03\n    /* \"input/RampInstantEthEscrows.sol\":4377:4413  Status public status = Status.ACTIVE */\n  0x00\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":14822:14823  0 */\n  0x00\n    /* \"input/RampInstantEthEscrows.sol\":14787:14823  uint256 internal accumulatedFees = 0 */\n  0x05\n  sstore\n    /* \"input/RampInstantEthEscrows.sol\":16509:16666  constructor(... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"input/RampInstantEthEscrows.sol\":16509:16666  constructor(... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"input/RampInstantEthEscrows.sol\":16509:16666  constructor(... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":16625:16647  _feeThousandthsPercent */\n  dup2\n    /* \"input/RampInstantEthEscrows.sol\":16649:16662  _minFeeAmount */\n  dup2\n    /* \"input/RampInstantEthEscrows.sol\":14723:14724  1 */\n  0x01\n    /* \"input/RampInstantEthEscrows.sol\":3890:3900  msg.sender */\n  caller\n    /* \"input/RampInstantEthEscrows.sol\":3882:3887  owner */\n  0x00\n  dup1\n    /* \"input/RampInstantEthEscrows.sol\":3882:3900  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":4817:4821  true */\n  0x01\n    /* \"input/RampInstantEthEscrows.sol\":4795:4802  oracles */\n  dup1\n    /* \"input/RampInstantEthEscrows.sol\":4795:4814  oracles[msg.sender] */\n  0x00\n    /* \"input/RampInstantEthEscrows.sol\":4803:4813  msg.sender */\n  caller\n    /* \"input/RampInstantEthEscrows.sol\":4795:4814  oracles[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"input/RampInstantEthEscrows.sol\":4795:4821  oracles[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":5611:5621  msg.sender */\n  caller\n    /* \"input/RampInstantEthEscrows.sol\":5597:5608  swapCreator */\n  0x02\n  0x00\n    /* \"input/RampInstantEthEscrows.sol\":5597:5621  swapCreator = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":1322:1331  assetType */\n  dup1\n    /* \"input/RampInstantEthEscrows.sol\":1309:1319  ASSET_TYPE */\n  0x02\n  0x14\n    /* \"input/RampInstantEthEscrows.sol\":1309:1331  ASSET_TYPE = assetType */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":1246:1338  constructor(... */\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":6192:6199  1 << 16 */\n  0x010000\n    /* \"input/RampInstantEthEscrows.sol\":6166:6188  _feeThousandthsPercent */\n  dup3\n    /* \"input/RampInstantEthEscrows.sol\":6166:6200  _feeThousandthsPercent < (1 << 16) */\n  0xffff\n  and\n  lt\n    /* \"input/RampInstantEthEscrows.sol\":6158:6219  require(_feeThousandthsPercent < (1 << 16), \"fee % too high\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x666565202520746f6f2068696768000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"input/RampInstantEthEscrows.sol\":6255:6263  1 << 255 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"input/RampInstantEthEscrows.sol\":6237:6250  _minFeeAmount */\n  dup2\n    /* \"input/RampInstantEthEscrows.sol\":6237:6264  _minFeeAmount <= (1 << 255) */\n  gt\n  iszero\n    /* \"input/RampInstantEthEscrows.sol\":6229:6290  require(_minFeeAmount <= (1 << 255), \"minFeeAmount too high\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x15\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x6d696e466565416d6f756e7420746f6f20686967680000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"input/RampInstantEthEscrows.sol\":6324:6346  _feeThousandthsPercent */\n  dup2\n    /* \"input/RampInstantEthEscrows.sol\":6300:6321  feeThousandthsPercent */\n  0x02\n  0x16\n    /* \"input/RampInstantEthEscrows.sol\":6300:6346  feeThousandthsPercent = _feeThousandthsPercent */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":6371:6384  _minFeeAmount */\n  dup1\n    /* \"input/RampInstantEthEscrows.sol\":6356:6368  minFeeAmount */\n  0x03\n    /* \"input/RampInstantEthEscrows.sol\":6356:6384  minFeeAmount = _minFeeAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":6075:6391  constructor(uint16 _feeThousandthsPercent, uint256 _minFeeAmount) public {... */\n  pop\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":16509:16666  constructor(... */\n  pop\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":16437:16669  contract RampInstantEthEscrows is RampInstantEscrows, EthAdapter {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/RampInstantEthEscrows.sol\":16437:16669  contract RampInstantEthEscrows is RampInstantEscrows, EthAdapter {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x946519f1\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbfe5d9c5\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbfe5d9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf47bc89c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf5d36475\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xffa1ad74\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x946519f1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9a3c6e29\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa80e7acb\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x2e49d78b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x2e49d78b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5983e6b0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8815eb39\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x0b898c9e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0bc2aad2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x26bdee37\n      eq\n      tag_5\n      jumpi\n    tag_1:\n        /* \"input/RampInstantEthEscrows.sol\":16215:16216  0 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":16196:16204  msg.data */\n      dup1\n      calldatasize\n        /* \"input/RampInstantEthEscrows.sol\":16196:16211  msg.data.length */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":16196:16216  msg.data.length == 0 */\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":16188:16242  require(msg.data.length == 0, \"invalid method called\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c6964206d6574686f642063616c6c65640000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"input/RampInstantEthEscrows.sol\":16437:16669  contract RampInstantEthEscrows is RampInstantEscrows, EthAdapter {... */\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_29:\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":6000:6035  uint16 public feeThousandthsPercent */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"input/RampInstantEthEscrows.sol\":6000:6035  uint16 public feeThousandthsPercent */\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":4377:4413  Status public status = Status.ACTIVE */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"input/RampInstantEthEscrows.sol\":4377:4413  Status public status = Status.ACTIVE */\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":5634:5799  function changeSwapCreator(address _newCreator) public onlyOwner {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"input/RampInstantEthEscrows.sol\":5634:5799  function changeSwapCreator(address _newCreator) public onlyOwner {... */\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"input/RampInstantEthEscrows.sol\":5634:5799  function changeSwapCreator(address _newCreator) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":4939:5038  function revokeOracle(address _oracle) external onlyOwner {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"input/RampInstantEthEscrows.sol\":4939:5038  function revokeOracle(address _oracle) external onlyOwner {... */\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"input/RampInstantEthEscrows.sol\":4939:5038  function revokeOracle(address _oracle) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":1215:1239  uint16 public ASSET_TYPE */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"input/RampInstantEthEscrows.sol\":1215:1239  uint16 public ASSET_TYPE */\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":3761:3781  address public owner */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_53:\n        /* \"input/RampInstantEthEscrows.sol\":3761:3781  address public owner */\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_56:\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_61:\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_63:\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_68:\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_64:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_70:\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_74:\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_78:\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_79:\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_75:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_81:\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_86:\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":4834:4933  function approveOracle(address _oracle) external onlyOwner {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_88:\n        /* \"input/RampInstantEthEscrows.sol\":4834:4933  function approveOracle(address _oracle) external onlyOwner {... */\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"input/RampInstantEthEscrows.sol\":4834:4933  function approveOracle(address _oracle) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":6041:6068  uint256 public minFeeAmount */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_92:\n        /* \"input/RampInstantEthEscrows.sol\":6041:6068  uint256 public minFeeAmount */\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":8070:8110  string public constant VERSION = \"0.5.0\" */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_95:\n        /* \"input/RampInstantEthEscrows.sol\":8070:8110  string public constant VERSION = \"0.5.0\" */\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_98:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_98)\n    tag_100:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":8070:8110  string public constant VERSION = \"0.5.0\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_101:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n    tag_30:\n        /* \"input/RampInstantEthEscrows.sol\":9484:9496  bool success */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":9343:9356  Status.ACTIVE */\n      0x03\n        /* \"input/RampInstantEthEscrows.sol\":4625:4632  _status */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4615:4632  status >= _status */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_103\n      jumpi\n      invalid\n    tag_103:\n        /* \"input/RampInstantEthEscrows.sol\":4615:4621  status */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":4615:4632  status >= _status */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_104\n      jumpi\n      invalid\n    tag_104:\n      lt\n      iszero\n        /* \"input/RampInstantEthEscrows.sol\":4607:4660  require(status >= _status, \"invalid contract status\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c696420636f6e747261637420737461747573000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"input/RampInstantEthEscrows.sol\":5864:5875  swapCreator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5850:5875  msg.sender == swapCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5850:5860  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5850:5875  msg.sender == swapCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":5842:5915  require(msg.sender == swapCreator, \"only the swap creator can call this\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_505dcbf77baa9fcb931859d75ef58472fc43f433ecc69abf910161910b72606c\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"input/RampInstantEthEscrows.sol\":9401:9408  _oracle */\n      dup7\n        /* \"input/RampInstantEthEscrows.sol\":5097:5104  oracles */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":5097:5113  oracles[_oracle] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":5105:5112  _oracle */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":5097:5113  oracles[_oracle] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5089:5140  require(oracles[_oracle], \"invalid oracle address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c6964206f7261636c65206164647265737300000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"input/RampInstantEthEscrows.sol\":9440:9450  _assetData */\n      dup7\n      dup7\n        /* \"input/RampInstantEthEscrows.sol\":2927:3349  modifier checkAssetTypeAndData(bytes memory assetData, address _pool) {... */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":2927:3349  modifier checkAssetTypeAndData(bytes memory assetData, address _pool) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":9452:9457  _pool */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":3007:3023  uint16 assetType */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":3196:3202  0xffff */\n      0xffff\n        /* \"input/RampInstantEthEscrows.sol\":3175:3176  2 */\n      0x02\n        /* \"input/RampInstantEthEscrows.sol\":3164:3173  assetData */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":3160:3177  add(assetData, 2) */\n      add\n        /* \"input/RampInstantEthEscrows.sol\":3154:3178  mload(add(assetData, 2)) */\n      mload\n        /* \"input/RampInstantEthEscrows.sol\":3133:3216  and(... */\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3120:3216  assetType := and(... */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":3256:3266  ASSET_TYPE */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3243:3266  assetType == ASSET_TYPE */\n      0xffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3243:3252  assetType */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":3243:3266  assetType == ASSET_TYPE */\n      0xffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3235:3289  require(assetType == ASSET_TYPE, \"invalid asset type\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c696420617373657420747970650000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"input/RampInstantEthEscrows.sol\":3299:3331  checkAssetData(assetData, _pool) */\n      tag_112\n        /* \"input/RampInstantEthEscrows.sol\":3314:3323  assetData */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":3325:3330  _pool */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":3299:3313  checkAssetData */\n      tag_113\n        /* \"input/RampInstantEthEscrows.sol\":3299:3331  checkAssetData(assetData, _pool) */\n      jump\t// in\n    tag_112:\n        /* \"input/RampInstantEthEscrows.sol\":8329:8337  24 hours */\n      0x015180\n        /* \"input/RampInstantEthEscrows.sol\":9533:9566  lockTimeS >= MIN_SWAP_LOCK_TIME_S */\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":9533:9542  lockTimeS */\n      dup8\n        /* \"input/RampInstantEthEscrows.sol\":9533:9566  lockTimeS >= MIN_SWAP_LOCK_TIME_S */\n      0xffffffff\n      and\n      lt\n      iszero\n        /* \"input/RampInstantEthEscrows.sol\":9533:9603  lockTimeS >= MIN_SWAP_LOCK_TIME_S && lockTimeS <= MAX_SWAP_LOCK_TIME_S */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":8391:8398  30 days */\n      0x278d00\n        /* \"input/RampInstantEthEscrows.sol\":9570:9603  lockTimeS <= MAX_SWAP_LOCK_TIME_S */\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":9570:9579  lockTimeS */\n      dup8\n        /* \"input/RampInstantEthEscrows.sol\":9570:9603  lockTimeS <= MAX_SWAP_LOCK_TIME_S */\n      0xffffffff\n      and\n      gt\n      iszero\n        /* \"input/RampInstantEthEscrows.sol\":9533:9603  lockTimeS >= MIN_SWAP_LOCK_TIME_S && lockTimeS <= MAX_SWAP_LOCK_TIME_S */\n    tag_115:\n        /* \"input/RampInstantEthEscrows.sol\":9512:9653  require(... */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6c6f636b2074696d65206f757473696465206c696d6974730000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"input/RampInstantEthEscrows.sol\":9663:9679  bytes32 swapHash */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":9682:9786  getSwapHash(... */\n      tag_117\n        /* \"input/RampInstantEthEscrows.sol\":9707:9712  _pool */\n      dup15\n        /* \"input/RampInstantEthEscrows.sol\":9714:9723  _receiver */\n      dup15\n        /* \"input/RampInstantEthEscrows.sol\":9725:9732  _oracle */\n      dup15\n        /* \"input/RampInstantEthEscrows.sol\":9744:9754  _assetData */\n      dup15\n      dup15\n        /* \"input/RampInstantEthEscrows.sol\":9734:9755  keccak256(_assetData) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":57:60   */\n      dup1\n        /* \"--CODEGEN--\":49:55   */\n      dup4\n        /* \"--CODEGEN--\":45:61   */\n      add\n        /* \"--CODEGEN--\":35:61   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":9734:9755  keccak256(_assetData) */\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"input/RampInstantEthEscrows.sol\":9757:9776  _paymentDetailsHash */\n      dup14\n        /* \"input/RampInstantEthEscrows.sol\":9682:9693  getSwapHash */\n      tag_118\n        /* \"input/RampInstantEthEscrows.sol\":9682:9786  getSwapHash(... */\n      jump\t// in\n    tag_117:\n        /* \"input/RampInstantEthEscrows.sol\":9663:9786  bytes32 swapHash = getSwapHash(... */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":9796:9826  requireSwapNotExists(swapHash) */\n      tag_119\n        /* \"input/RampInstantEthEscrows.sol\":9817:9825  swapHash */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":9796:9816  requireSwapNotExists */\n      tag_120\n        /* \"input/RampInstantEthEscrows.sol\":9796:9826  requireSwapNotExists(swapHash) */\n      jump\t// in\n    tag_119:\n        /* \"input/RampInstantEthEscrows.sol\":10274:10283  lockTimeS */\n      dup8\n        /* \"input/RampInstantEthEscrows.sol\":10255:10270  block.timestamp */\n      timestamp\n        /* \"input/RampInstantEthEscrows.sol\":10248:10283  uint32(block.timestamp) + lockTimeS */\n      add\n        /* \"input/RampInstantEthEscrows.sol\":10230:10235  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":10230:10245  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":10236:10244  swapHash */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":10230:10245  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":10230:10283  swaps[swapHash] = uint32(block.timestamp) + lockTimeS */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":10314:10349  lockAssetWithFee(_assetData, _pool) */\n      tag_121\n        /* \"input/RampInstantEthEscrows.sol\":10331:10341  _assetData */\n      dup12\n      dup12\n        /* \"input/RampInstantEthEscrows.sol\":10314:10349  lockAssetWithFee(_assetData, _pool) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":10314:10349  lockAssetWithFee(_assetData, _pool) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":10343:10348  _pool */\n      dup16\n        /* \"input/RampInstantEthEscrows.sol\":10314:10330  lockAssetWithFee */\n      tag_122\n        /* \"input/RampInstantEthEscrows.sol\":10314:10349  lockAssetWithFee(_assetData, _pool) */\n      jump\t// in\n    tag_121:\n        /* \"input/RampInstantEthEscrows.sol\":10293:10393  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x657363726f77206c6f636b206661696c65640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"input/RampInstantEthEscrows.sol\":10416:10424  swapHash */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":10408:10425  Created(swapHash) */\n      0x102d25c49d33fcdb8976a3f2744e0785c98d9e43b88364859e6aec4ae82eff5c\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/RampInstantEthEscrows.sol\":10442:10446  true */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":10435:10446  return true */\n      swap7\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":5150:5151  _ */\n      pop\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":5925:5926  _ */\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":9101:10453  function create(... */\n      pop\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":6000:6035  uint16 public feeThousandthsPercent */\n    tag_33:\n      0x02\n      0x16\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":4377:4413  Status public status = Status.ACTIVE */\n    tag_36:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":5634:5799  function changeSwapCreator(address _newCreator) public onlyOwner {... */\n    tag_41:\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"input/RampInstantEthEscrows.sol\":5723:5734  _newCreator */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":5709:5720  swapCreator */\n      0x02\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":5709:5734  swapCreator = _newCreator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":5749:5792  SwapCreatorChanged(msg.sender, _newCreator) */\n      0xadf20380d9033e7f11fc1856d69012aa18e03195a098cd38ce3be225966968a8\n        /* \"input/RampInstantEthEscrows.sol\":5768:5778  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5780:5791  _newCreator */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":5749:5792  SwapCreatorChanged(msg.sender, _newCreator) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"input/RampInstantEthEscrows.sol\":5634:5799  function changeSwapCreator(address _newCreator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n    tag_45:\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"input/RampInstantEthEscrows.sol\":4489:4519  StatusChanged(status, _status) */\n      0xe1377aa21d49fa10bb9ece6a0cd4f75597a90a80c3750f7f7674967f49ab9a62\n        /* \"input/RampInstantEthEscrows.sol\":4503:4509  status */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":4511:4518  _status */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":4489:4519  StatusChanged(status, _status) */\n      mload(0x40)\n      dup1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"input/RampInstantEthEscrows.sol\":4538:4545  _status */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4529:4535  status */\n      0x00\n      0x14\n        /* \"input/RampInstantEthEscrows.sol\":4529:4545  status = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_132\n      jumpi\n      invalid\n    tag_132:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":4939:5038  function revokeOracle(address _oracle) external onlyOwner {... */\n    tag_49:\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"input/RampInstantEthEscrows.sol\":5026:5031  false */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":5007:5014  oracles */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":5007:5023  oracles[_oracle] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":5015:5022  _oracle */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":5007:5023  oracles[_oracle] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":5007:5031  oracles[_oracle] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4939:5038  function revokeOracle(address _oracle) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":1215:1239  uint16 public ASSET_TYPE */\n    tag_52:\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":3761:3781  address public owner */\n    tag_55:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n    tag_62:\n        /* \"input/RampInstantEthEscrows.sol\":13323:13336  uint32 status */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":13348:13364  bytes32 swapHash */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":13367:13471  getSwapHash(... */\n      tag_137\n        /* \"input/RampInstantEthEscrows.sol\":13392:13397  _pool */\n      dup9\n        /* \"input/RampInstantEthEscrows.sol\":13399:13408  _receiver */\n      dup9\n        /* \"input/RampInstantEthEscrows.sol\":13410:13417  _oracle */\n      dup9\n        /* \"input/RampInstantEthEscrows.sol\":13429:13439  _assetData */\n      dup9\n      dup9\n        /* \"input/RampInstantEthEscrows.sol\":13419:13440  keccak256(_assetData) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":57:60   */\n      dup1\n        /* \"--CODEGEN--\":49:55   */\n      dup4\n        /* \"--CODEGEN--\":45:61   */\n      add\n        /* \"--CODEGEN--\":35:61   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":13419:13440  keccak256(_assetData) */\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"input/RampInstantEthEscrows.sol\":13442:13461  _paymentDetailsHash */\n      dup8\n        /* \"input/RampInstantEthEscrows.sol\":13367:13378  getSwapHash */\n      tag_118\n        /* \"input/RampInstantEthEscrows.sol\":13367:13471  getSwapHash(... */\n      jump\t// in\n    tag_137:\n        /* \"input/RampInstantEthEscrows.sol\":13348:13471  bytes32 swapHash = getSwapHash(... */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":13488:13493  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":13488:13503  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":13494:13502  swapHash */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":13488:13503  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":13481:13503  return swaps[swapHash] */\n      swap2\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":13124:13510  function getSwapStatus(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n    tag_69:\n        /* \"input/RampInstantEthEscrows.sol\":11114:11134  Status.FINALIZE_ONLY */\n      0x02\n        /* \"input/RampInstantEthEscrows.sol\":4625:4632  _status */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4615:4632  status >= _status */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      invalid\n    tag_139:\n        /* \"input/RampInstantEthEscrows.sol\":4615:4621  status */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":4615:4632  status >= _status */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_140\n      jumpi\n      invalid\n    tag_140:\n      lt\n      iszero\n        /* \"input/RampInstantEthEscrows.sol\":4607:4660  require(status >= _status, \"invalid contract status\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c696420636f6e747261637420737461747573000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"input/RampInstantEthEscrows.sol\":11153:11158  _pool */\n      dup7\n        /* \"input/RampInstantEthEscrows.sol\":11160:11167  _oracle */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":5267:5272  _pool */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":5253:5272  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5253:5263  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5253:5272  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":5253:5322  msg.sender == _pool || (msg.sender == _oracle && oracles[msg.sender]) */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":5291:5298  _oracle */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":5277:5298  msg.sender == _oracle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5277:5287  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5277:5298  msg.sender == _oracle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":5277:5321  msg.sender == _oracle && oracles[msg.sender] */\n      dup1\n      iszero\n      tag_144\n      jumpi\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":5302:5309  oracles */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":5302:5321  oracles[msg.sender] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":5310:5320  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5302:5321  oracles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5277:5321  msg.sender == _oracle && oracles[msg.sender] */\n    tag_144:\n        /* \"input/RampInstantEthEscrows.sol\":5253:5322  msg.sender == _pool || (msg.sender == _oracle && oracles[msg.sender]) */\n    tag_143:\n        /* \"input/RampInstantEthEscrows.sol\":5232:5389  require(... */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8889cdf9502051f6182111d178aad396861a3ff01e10cbd6b8663bfd3219a4fe\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"input/RampInstantEthEscrows.sol\":11179:11195  bytes32 swapHash */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":11198:11302  getSwapHash(... */\n      tag_147\n        /* \"input/RampInstantEthEscrows.sol\":11223:11228  _pool */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":11230:11239  _receiver */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":11241:11248  _oracle */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":11260:11270  _assetData */\n      dup11\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":11250:11271  keccak256(_assetData) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":57:60   */\n      dup1\n        /* \"--CODEGEN--\":49:55   */\n      dup4\n        /* \"--CODEGEN--\":45:61   */\n      add\n        /* \"--CODEGEN--\":35:61   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":11250:11271  keccak256(_assetData) */\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"input/RampInstantEthEscrows.sol\":11273:11292  _paymentDetailsHash */\n      dup10\n        /* \"input/RampInstantEthEscrows.sol\":11198:11209  getSwapHash */\n      tag_118\n        /* \"input/RampInstantEthEscrows.sol\":11198:11302  getSwapHash(... */\n      jump\t// in\n    tag_147:\n        /* \"input/RampInstantEthEscrows.sol\":11179:11302  bytes32 swapHash = getSwapHash(... */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":11312:11340  requireSwapCreated(swapHash) */\n      tag_148\n        /* \"input/RampInstantEthEscrows.sol\":11331:11339  swapHash */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":11312:11330  requireSwapCreated */\n      tag_149\n        /* \"input/RampInstantEthEscrows.sol\":11312:11340  requireSwapCreated(swapHash) */\n      jump\t// in\n    tag_148:\n        /* \"input/RampInstantEthEscrows.sol\":11448:11449  0 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":11430:11435  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":11430:11445  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":11436:11444  swapHash */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":11430:11445  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":11430:11449  swaps[swapHash] = 0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":11480:11522  sendAssetKeepingFee(_assetData, _receiver) */\n      tag_150\n        /* \"input/RampInstantEthEscrows.sol\":11500:11510  _assetData */\n      dup8\n      dup8\n        /* \"input/RampInstantEthEscrows.sol\":11480:11522  sendAssetKeepingFee(_assetData, _receiver) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":11480:11522  sendAssetKeepingFee(_assetData, _receiver) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":11512:11521  _receiver */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":11480:11499  sendAssetKeepingFee */\n      tag_151\n        /* \"input/RampInstantEthEscrows.sol\":11480:11522  sendAssetKeepingFee(_assetData, _receiver) */\n      jump\t// in\n    tag_150:\n        /* \"input/RampInstantEthEscrows.sol\":11459:11568  require(... */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61737365742072656c65617365206661696c6564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"input/RampInstantEthEscrows.sol\":11596:11601  _pool */\n      dup10\n        /* \"input/RampInstantEthEscrows.sol\":11582:11601  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":11582:11592  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":11582:11601  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":11578:11709  if (msg.sender == _pool) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"input/RampInstantEthEscrows.sol\":11635:11643  swapHash */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":11622:11644  PoolReleased(swapHash) */\n      0x789952a21900cba4809507b4ba56618cee6a1e748254f8faab21e9b8f1c60bc9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/RampInstantEthEscrows.sol\":11578:11709  if (msg.sender == _pool) {... */\n      jump(tag_154)\n    tag_153:\n        /* \"input/RampInstantEthEscrows.sol\":11689:11697  swapHash */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":11680:11698  Released(swapHash) */\n      0x6eec2dd2382427616d4ea7ef183b16091feac4e2e63c8b55f25215f132df8d14\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/RampInstantEthEscrows.sol\":11578:11709  if (msg.sender == _pool) {... */\n    tag_154:\n        /* \"input/RampInstantEthEscrows.sol\":5399:5400  _ */\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4670:4671  _ */\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":10913:11715  function release(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n    tag_73:\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"input/RampInstantEthEscrows.sol\":4105:4114  _newOwner */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4097:4102  owner */\n      0x00\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4097:4114  owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4129:4164  OwnerChanged(msg.sender, _newOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n        /* \"input/RampInstantEthEscrows.sol\":4142:4152  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":4154:4163  _newOwner */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":4129:4164  OwnerChanged(msg.sender, _newOwner) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n    tag_80:\n        /* \"input/RampInstantEthEscrows.sol\":12246:12264  Status.RETURN_ONLY */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":4625:4632  _status */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4615:4632  status >= _status */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n        /* \"input/RampInstantEthEscrows.sol\":4615:4621  status */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":4615:4632  status >= _status */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      lt\n      iszero\n        /* \"input/RampInstantEthEscrows.sol\":4607:4660  require(status >= _status, \"invalid contract status\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c696420636f6e747261637420737461747573000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"input/RampInstantEthEscrows.sol\":12283:12288  _pool */\n      dup7\n        /* \"input/RampInstantEthEscrows.sol\":12290:12297  _oracle */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":5267:5272  _pool */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":5253:5272  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5253:5263  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5253:5272  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":5253:5322  msg.sender == _pool || (msg.sender == _oracle && oracles[msg.sender]) */\n      dup1\n      tag_163\n      jumpi\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":5291:5298  _oracle */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":5277:5298  msg.sender == _oracle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5277:5287  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5277:5298  msg.sender == _oracle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":5277:5321  msg.sender == _oracle && oracles[msg.sender] */\n      dup1\n      iszero\n      tag_164\n      jumpi\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":5302:5309  oracles */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":5302:5321  oracles[msg.sender] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":5310:5320  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":5302:5321  oracles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":5277:5321  msg.sender == _oracle && oracles[msg.sender] */\n    tag_164:\n        /* \"input/RampInstantEthEscrows.sol\":5253:5322  msg.sender == _pool || (msg.sender == _oracle && oracles[msg.sender]) */\n    tag_163:\n        /* \"input/RampInstantEthEscrows.sol\":5232:5389  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8889cdf9502051f6182111d178aad396861a3ff01e10cbd6b8663bfd3219a4fe\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"input/RampInstantEthEscrows.sol\":12309:12325  bytes32 swapHash */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":12328:12432  getSwapHash(... */\n      tag_167\n        /* \"input/RampInstantEthEscrows.sol\":12353:12358  _pool */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":12360:12369  _receiver */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":12371:12378  _oracle */\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":12390:12400  _assetData */\n      dup11\n      dup11\n        /* \"input/RampInstantEthEscrows.sol\":12380:12401  keccak256(_assetData) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":57:60   */\n      dup1\n        /* \"--CODEGEN--\":49:55   */\n      dup4\n        /* \"--CODEGEN--\":45:61   */\n      add\n        /* \"--CODEGEN--\":35:61   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":12380:12401  keccak256(_assetData) */\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"input/RampInstantEthEscrows.sol\":12403:12422  _paymentDetailsHash */\n      dup10\n        /* \"input/RampInstantEthEscrows.sol\":12328:12339  getSwapHash */\n      tag_118\n        /* \"input/RampInstantEthEscrows.sol\":12328:12432  getSwapHash(... */\n      jump\t// in\n    tag_167:\n        /* \"input/RampInstantEthEscrows.sol\":12309:12432  bytes32 swapHash = getSwapHash(... */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":12442:12470  requireSwapExpired(swapHash) */\n      tag_168\n        /* \"input/RampInstantEthEscrows.sol\":12461:12469  swapHash */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":12442:12460  requireSwapExpired */\n      tag_169\n        /* \"input/RampInstantEthEscrows.sol\":12442:12470  requireSwapExpired(swapHash) */\n      jump\t// in\n    tag_168:\n        /* \"input/RampInstantEthEscrows.sol\":12578:12579  0 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":12560:12565  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":12560:12575  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":12566:12574  swapHash */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":12560:12575  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":12560:12579  swaps[swapHash] = 0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":12610:12645  sendAssetWithFee(_assetData, _pool) */\n      tag_170\n        /* \"input/RampInstantEthEscrows.sol\":12627:12637  _assetData */\n      dup8\n      dup8\n        /* \"input/RampInstantEthEscrows.sol\":12610:12645  sendAssetWithFee(_assetData, _pool) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":12610:12645  sendAssetWithFee(_assetData, _pool) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":12639:12644  _pool */\n      dup12\n        /* \"input/RampInstantEthEscrows.sol\":12610:12626  sendAssetWithFee */\n      tag_171\n        /* \"input/RampInstantEthEscrows.sol\":12610:12645  sendAssetWithFee(_assetData, _pool) */\n      jump\t// in\n    tag_170:\n        /* \"input/RampInstantEthEscrows.sol\":12589:12690  require(... */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x61737365742072657475726e206661696c656400000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"input/RampInstantEthEscrows.sol\":12718:12723  _pool */\n      dup10\n        /* \"input/RampInstantEthEscrows.sol\":12704:12723  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":12704:12714  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":12704:12723  msg.sender == _pool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":12700:12831  if (msg.sender == _pool) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"input/RampInstantEthEscrows.sol\":12757:12765  swapHash */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":12744:12766  PoolReturned(swapHash) */\n      0x7b5ac55826e0ca40c3f69722d916fb9962d86cffcddc9c84d082b712419e5cbd\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/RampInstantEthEscrows.sol\":12700:12831  if (msg.sender == _pool) {... */\n      jump(tag_174)\n    tag_173:\n        /* \"input/RampInstantEthEscrows.sol\":12811:12819  swapHash */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":12802:12820  Returned(swapHash) */\n      0xc99795d9dc9d68f27b21e122a0e663f689138f9110dee0122fc2980f8d579775\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/RampInstantEthEscrows.sol\":12700:12831  if (msg.sender == _pool) {... */\n    tag_174:\n        /* \"input/RampInstantEthEscrows.sol\":5399:5400  _ */\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4670:4671  _ */\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":12041:12837  function returnFunds(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n    tag_87:\n        /* \"input/RampInstantEthEscrows.sol\":15888:15900  bool success */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"input/RampInstantEthEscrows.sol\":15912:15924  uint256 fees */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":15927:15942  accumulatedFees */\n      sload(0x05)\n        /* \"input/RampInstantEthEscrows.sol\":15912:15942  uint256 fees = accumulatedFees */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":15970:15971  0 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":15952:15967  accumulatedFees */\n      0x05\n        /* \"input/RampInstantEthEscrows.sol\":15952:15971  accumulatedFees = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":15981:15984  _to */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":15981:15993  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":15981:15999  _to.transfer(fees) */\n      0x08fc\n        /* \"input/RampInstantEthEscrows.sol\":15994:15998  fees */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":15981:15999  _to.transfer(fees) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_178:\n        /* \"input/RampInstantEthEscrows.sol\":15981:15999  _to.transfer(fees) */\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":16016:16020  true */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":16009:16020  return true */\n      swap2\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":15765:16027  function withdrawFees(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":4834:4933  function approveOracle(address _oracle) external onlyOwner {... */\n    tag_91:\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"input/RampInstantEthEscrows.sol\":4922:4926  true */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":4903:4910  oracles */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4903:4919  oracles[_oracle] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":4911:4918  _oracle */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":4903:4919  oracles[_oracle] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":4903:4926  oracles[_oracle] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4834:4933  function approveOracle(address _oracle) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":6041:6068  uint256 public minFeeAmount */\n    tag_94:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":8070:8110  string public constant VERSION = \"0.5.0\" */\n    tag_97:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x302e352e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":16255:16432  function checkAssetData(bytes memory assetData, address /*_pool*/) internal view {... */\n    tag_113:\n        /* \"input/RampInstantEthEscrows.sol\":14779:14781  34 */\n      0x22\n        /* \"input/RampInstantEthEscrows.sol\":16354:16395  assetData.length == ETH_ASSET_DATA_LENGTH */\n      0xffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":16354:16363  assetData */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":16354:16370  assetData.length */\n      mload\n        /* \"input/RampInstantEthEscrows.sol\":16354:16395  assetData.length == ETH_ASSET_DATA_LENGTH */\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":16346:16425  require(assetData.length == ETH_ASSET_DATA_LENGTH, \"invalid asset data length\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c69642061737365742064617461206c656e67746800000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"input/RampInstantEthEscrows.sol\":16255:16432  function checkAssetData(bytes memory assetData, address /*_pool*/) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":13619:13979  function getSwapHash(... */\n    tag_118:\n        /* \"input/RampInstantEthEscrows.sol\":13808:13815  bytes32 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":13891:13896  _pool */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":13898:13907  _receiver */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":13909:13916  _oracle */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":13918:13927  assetHash */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":13929:13948  _paymentDetailsHash */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":13857:13962  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/RampInstantEthEscrows.sol\":13857:13962  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"input/RampInstantEthEscrows.sol\":13834:13972  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/RampInstantEthEscrows.sol\":13827:13972  return keccak256(... */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":13619:13979  function getSwapHash(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":13985:14150  function requireSwapNotExists(bytes32 swapHash) internal view {... */\n    tag_120:\n        /* \"input/RampInstantEthEscrows.sol\":14097:14098  0 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":14078:14083  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":14078:14093  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":14084:14092  swapHash */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":14078:14093  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":14078:14098  swaps[swapHash] == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":14057:14143  require(... */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7377617020616c72656164792065786973747300000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"input/RampInstantEthEscrows.sol\":13985:14150  function requireSwapNotExists(bytes32 swapHash) internal view {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":7210:7409  function lockAssetWithFee(... */\n    tag_122:\n        /* \"input/RampInstantEthEscrows.sol\":7323:7335  bool success */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":7354:7402  rawLockAsset(getAmountWithFee(assetData), _from) */\n      tag_188\n        /* \"input/RampInstantEthEscrows.sol\":7367:7394  getAmountWithFee(assetData) */\n      tag_189\n        /* \"input/RampInstantEthEscrows.sol\":7384:7393  assetData */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":7367:7383  getAmountWithFee */\n      tag_190\n        /* \"input/RampInstantEthEscrows.sol\":7367:7394  getAmountWithFee(assetData) */\n      jump\t// in\n    tag_189:\n        /* \"input/RampInstantEthEscrows.sol\":7396:7401  _from */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":7354:7366  rawLockAsset */\n      tag_191\n        /* \"input/RampInstantEthEscrows.sol\":7354:7402  rawLockAsset(getAmountWithFee(assetData), _from) */\n      jump\t// in\n    tag_188:\n        /* \"input/RampInstantEthEscrows.sol\":7347:7402  return rawLockAsset(getAmountWithFee(assetData), _from) */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":7210:7409  function lockAssetWithFee(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":14156:14330  function requireSwapCreated(bytes32 swapHash) internal view {... */\n    tag_149:\n        /* \"input/RampInstantEthEscrows.sol\":8165:8175  1000000000 */\n      0x3b9aca00\n        /* \"input/RampInstantEthEscrows.sol\":14247:14285  swaps[swapHash] > MIN_ACTUAL_TIMESTAMP */\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":14247:14252  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":14247:14262  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":14253:14261  swapHash */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":14247:14262  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":14247:14285  swaps[swapHash] > MIN_ACTUAL_TIMESTAMP */\n      0xffffffff\n      and\n      gt\n        /* \"input/RampInstantEthEscrows.sol\":14226:14323  require(... */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7377617020696e76616c69640000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"input/RampInstantEthEscrows.sol\":14156:14330  function requireSwapCreated(bytes32 swapHash) internal view {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":7627:7905  function sendAssetKeepingFee(... */\n    tag_151:\n        /* \"input/RampInstantEthEscrows.sol\":7741:7753  bool success */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":7765:7776  bool result */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":7779:7829  rawSendAsset(assetData, getAmount(assetData), _to) */\n      tag_195\n        /* \"input/RampInstantEthEscrows.sol\":7792:7801  assetData */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":7803:7823  getAmount(assetData) */\n      tag_196\n        /* \"input/RampInstantEthEscrows.sol\":7813:7822  assetData */\n      dup7\n        /* \"input/RampInstantEthEscrows.sol\":7803:7812  getAmount */\n      tag_197\n        /* \"input/RampInstantEthEscrows.sol\":7803:7823  getAmount(assetData) */\n      jump\t// in\n    tag_196:\n        /* \"input/RampInstantEthEscrows.sol\":7825:7828  _to */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":7779:7791  rawSendAsset */\n      tag_198\n        /* \"input/RampInstantEthEscrows.sol\":7779:7829  rawSendAsset(assetData, getAmount(assetData), _to) */\n      jump\t// in\n    tag_195:\n        /* \"input/RampInstantEthEscrows.sol\":7765:7829  bool result = rawSendAsset(assetData, getAmount(assetData), _to) */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":7843:7849  result */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":7839:7875  if (result) accumulateFee(assetData) */\n      iszero\n      tag_199\n      jumpi\n        /* \"input/RampInstantEthEscrows.sol\":7851:7875  accumulateFee(assetData) */\n      tag_200\n        /* \"input/RampInstantEthEscrows.sol\":7865:7874  assetData */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":7851:7864  accumulateFee */\n      tag_201\n        /* \"input/RampInstantEthEscrows.sol\":7851:7875  accumulateFee(assetData) */\n      jump\t// in\n    tag_200:\n        /* \"input/RampInstantEthEscrows.sol\":7839:7875  if (result) accumulateFee(assetData) */\n    tag_199:\n        /* \"input/RampInstantEthEscrows.sol\":7892:7898  result */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":7885:7898  return result */\n      swap2\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":7627:7905  function sendAssetKeepingFee(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":14336:14628  function requireSwapExpired(bytes32 swapHash) internal view {... */\n    tag_169:\n        /* \"input/RampInstantEthEscrows.sol\":8165:8175  1000000000 */\n      0x3b9aca00\n        /* \"input/RampInstantEthEscrows.sol\":14493:14531  swaps[swapHash] > MIN_ACTUAL_TIMESTAMP */\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":14493:14498  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":14493:14508  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":14499:14507  swapHash */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":14493:14508  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":14493:14531  swaps[swapHash] > MIN_ACTUAL_TIMESTAMP */\n      0xffffffff\n      and\n      gt\n        /* \"input/RampInstantEthEscrows.sol\":14493:14568  swaps[swapHash] > MIN_ACTUAL_TIMESTAMP && block.timestamp > swaps[swapHash] */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":14553:14558  swaps */\n      0x04\n        /* \"input/RampInstantEthEscrows.sol\":14553:14568  swaps[swapHash] */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":14559:14567  swapHash */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":14553:14568  swaps[swapHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":14535:14568  block.timestamp > swaps[swapHash] */\n      0xffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":14535:14550  block.timestamp */\n      timestamp\n        /* \"input/RampInstantEthEscrows.sol\":14535:14568  block.timestamp > swaps[swapHash] */\n      gt\n        /* \"input/RampInstantEthEscrows.sol\":14493:14568  swaps[swapHash] > MIN_ACTUAL_TIMESTAMP && block.timestamp > swaps[swapHash] */\n    tag_203:\n        /* \"input/RampInstantEthEscrows.sol\":14406:14621  require(... */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73776170206e6f742065787069726564206f7220696e76616c69640000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"input/RampInstantEthEscrows.sol\":14336:14628  function requireSwapExpired(bytes32 swapHash) internal view {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":7415:7621  function sendAssetWithFee(... */\n    tag_171:\n        /* \"input/RampInstantEthEscrows.sol\":7526:7538  bool success */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":7557:7614  rawSendAsset(assetData, getAmountWithFee(assetData), _to) */\n      tag_206\n        /* \"input/RampInstantEthEscrows.sol\":7570:7579  assetData */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":7581:7608  getAmountWithFee(assetData) */\n      tag_207\n        /* \"input/RampInstantEthEscrows.sol\":7598:7607  assetData */\n      dup6\n        /* \"input/RampInstantEthEscrows.sol\":7581:7597  getAmountWithFee */\n      tag_190\n        /* \"input/RampInstantEthEscrows.sol\":7581:7608  getAmountWithFee(assetData) */\n      jump\t// in\n    tag_207:\n        /* \"input/RampInstantEthEscrows.sol\":7610:7613  _to */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":7557:7569  rawSendAsset */\n      tag_198\n        /* \"input/RampInstantEthEscrows.sol\":7557:7614  rawSendAsset(assetData, getAmountWithFee(assetData), _to) */\n      jump\t// in\n    tag_206:\n        /* \"input/RampInstantEthEscrows.sol\":7550:7614  return rawSendAsset(assetData, getAmountWithFee(assetData), _to) */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":7415:7621  function sendAssetWithFee(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":7016:7204  function getAmountWithFee(bytes memory assetData) internal view returns (uint256) {... */\n    tag_190:\n        /* \"input/RampInstantEthEscrows.sol\":7089:7096  uint256 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":7108:7126  uint256 baseAmount */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":7129:7149  getAmount(assetData) */\n      tag_209\n        /* \"input/RampInstantEthEscrows.sol\":7139:7148  assetData */\n      dup4\n        /* \"input/RampInstantEthEscrows.sol\":7129:7138  getAmount */\n      tag_197\n        /* \"input/RampInstantEthEscrows.sol\":7129:7149  getAmount(assetData) */\n      jump\t// in\n    tag_209:\n        /* \"input/RampInstantEthEscrows.sol\":7108:7149  uint256 baseAmount = getAmount(assetData) */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":7179:7197  getFee(baseAmount) */\n      tag_210\n        /* \"input/RampInstantEthEscrows.sol\":7186:7196  baseAmount */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":7179:7185  getFee */\n      tag_211\n        /* \"input/RampInstantEthEscrows.sol\":7179:7197  getFee(baseAmount) */\n      jump\t// in\n    tag_210:\n        /* \"input/RampInstantEthEscrows.sol\":7166:7176  baseAmount */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":7166:7197  baseAmount + getFee(baseAmount) */\n      add\n        /* \"input/RampInstantEthEscrows.sol\":7159:7197  return baseAmount + getFee(baseAmount) */\n      swap2\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":7016:7204  function getAmountWithFee(bytes memory assetData) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":2039:2233  function rawLockAsset(... */\n    tag_191:\n        /* \"input/RampInstantEthEscrows.sol\":2140:2152  bool success */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":2196:2201  _from */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":2171:2218  RampInstantPoolInterface(_from).sendFundsToSwap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x81fd3f0b\n        /* \"input/RampInstantEthEscrows.sol\":2219:2225  amount */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":2171:2226  RampInstantPoolInterface(_from).sendFundsToSwap(amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_213\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_213:\n        /* \"input/RampInstantEthEscrows.sol\":2171:2226  RampInstantPoolInterface(_from).sendFundsToSwap(amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_214\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_214:\n        /* \"input/RampInstantEthEscrows.sol\":2171:2226  RampInstantPoolInterface(_from).sendFundsToSwap(amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_215:\n        /* \"input/RampInstantEthEscrows.sol\":2171:2226  RampInstantPoolInterface(_from).sendFundsToSwap(amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":2164:2226  return RampInstantPoolInterface(_from).sendFundsToSwap(amount) */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":2039:2233  function rawLockAsset(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":15156:15386  function getAmount(bytes memory assetData) internal pure returns (uint256 amount) {... */\n    tag_197:\n        /* \"input/RampInstantEthEscrows.sol\":15222:15236  uint256 amount */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":15366:15368  34 */\n      0x22\n        /* \"input/RampInstantEthEscrows.sol\":15355:15364  assetData */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":15351:15369  add(assetData, 34) */\n      add\n        /* \"input/RampInstantEthEscrows.sol\":15345:15370  mload(add(assetData, 34)) */\n      mload\n        /* \"input/RampInstantEthEscrows.sol\":15335:15370  amount := mload(add(assetData, 34)) */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":15321:15380  {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":15392:15630  function rawSendAsset(... */\n    tag_198:\n        /* \"input/RampInstantEthEscrows.sol\":15528:15540  bool success */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":15552:15555  _to */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":15552:15564  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":15552:15573  _to.transfer(_amount) */\n      0x08fc\n        /* \"input/RampInstantEthEscrows.sol\":15565:15572  _amount */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":15552:15573  _to.transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_218:\n        /* \"input/RampInstantEthEscrows.sol\":15552:15573  _to.transfer(_amount) */\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":15619:15623  true */\n      0x01\n        /* \"input/RampInstantEthEscrows.sol\":15612:15623  return true */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":15392:15630  function rawSendAsset(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":6479:6609  function accumulateFee(bytes memory assetData) internal {... */\n    tag_201:\n        /* \"input/RampInstantEthEscrows.sol\":6545:6602  rawAccumulateFee(assetData, getFee(getAmount(assetData))) */\n      tag_220\n        /* \"input/RampInstantEthEscrows.sol\":6562:6571  assetData */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":6573:6601  getFee(getAmount(assetData)) */\n      tag_221\n        /* \"input/RampInstantEthEscrows.sol\":6580:6600  getAmount(assetData) */\n      tag_222\n        /* \"input/RampInstantEthEscrows.sol\":6590:6599  assetData */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":6580:6589  getAmount */\n      tag_197\n        /* \"input/RampInstantEthEscrows.sol\":6580:6600  getAmount(assetData) */\n      jump\t// in\n    tag_222:\n        /* \"input/RampInstantEthEscrows.sol\":6573:6579  getFee */\n      tag_211\n        /* \"input/RampInstantEthEscrows.sol\":6573:6601  getFee(getAmount(assetData)) */\n      jump\t// in\n    tag_221:\n        /* \"input/RampInstantEthEscrows.sol\":6545:6561  rawAccumulateFee */\n      tag_223\n        /* \"input/RampInstantEthEscrows.sol\":6545:6602  rawAccumulateFee(assetData, getFee(getAmount(assetData))) */\n      jump\t// in\n    tag_220:\n        /* \"input/RampInstantEthEscrows.sol\":6479:6609  function accumulateFee(bytes memory assetData) internal {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":6794:7010  function getFee(uint256 _amount) internal view returns (uint256) {... */\n    tag_211:\n        /* \"input/RampInstantEthEscrows.sol\":6850:6857  uint256 */\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":6869:6880  uint256 fee */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":6917:6923  100000 */\n      0x0186a0\n        /* \"input/RampInstantEthEscrows.sol\":6893:6914  feeThousandthsPercent */\n      0x02\n      0x16\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":6883:6914  _amount * feeThousandthsPercent */\n      0xffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":6883:6890  _amount */\n      dup5\n        /* \"input/RampInstantEthEscrows.sol\":6883:6914  _amount * feeThousandthsPercent */\n      mul\n        /* \"input/RampInstantEthEscrows.sol\":6883:6923  _amount * feeThousandthsPercent / 100000 */\n      dup2\n      tag_225\n      jumpi\n      invalid\n    tag_225:\n      div\n        /* \"input/RampInstantEthEscrows.sol\":6869:6923  uint256 fee = _amount * feeThousandthsPercent / 100000 */\n      swap1\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":6946:6958  minFeeAmount */\n      sload(0x03)\n        /* \"input/RampInstantEthEscrows.sol\":6940:6943  fee */\n      dup2\n        /* \"input/RampInstantEthEscrows.sol\":6940:6958  fee < minFeeAmount */\n      lt\n        /* \"input/RampInstantEthEscrows.sol\":6940:7003  fee < minFeeAmount... */\n      tag_226\n      jumpi\n        /* \"input/RampInstantEthEscrows.sol\":7000:7003  fee */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":6940:7003  fee < minFeeAmount... */\n      jump(tag_227)\n    tag_226:\n        /* \"input/RampInstantEthEscrows.sol\":6973:6985  minFeeAmount */\n      sload(0x03)\n        /* \"input/RampInstantEthEscrows.sol\":6940:7003  fee < minFeeAmount... */\n    tag_227:\n        /* \"input/RampInstantEthEscrows.sol\":6933:7003  return fee < minFeeAmount... */\n      swap2\n      pop\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":6794:7010  function getFee(uint256 _amount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":15636:15759  function rawAccumulateFee(bytes memory /*assetData*/, uint256 _amount) internal {... */\n    tag_223:\n        /* \"input/RampInstantEthEscrows.sol\":15745:15752  _amount */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":15726:15741  accumulatedFees */\n      0x05\n      0x00\n        /* \"input/RampInstantEthEscrows.sol\":15726:15752  accumulatedFees += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":15636:15759  function rawAccumulateFee(bytes memory /*assetData*/, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n    stop\n    data_505dcbf77baa9fcb931859d75ef58472fc43f433ecc69abf910161910b72606c 6f6e6c792074686520737761702063726561746f722063616e2063616c6c2074686973\n    data_8889cdf9502051f6182111d178aad396861a3ff01e10cbd6b8663bfd3219a4fe 6f6e6c7920746865206f7261636c65206f722074686520706f6f6c2063616e2063616c6c2074686973\n\n    auxdata: 0xa265627a7a723058209143755cff470eb6308962123b2a3d76fc429d511e891b82d5c9db902912180c64736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526003600060146101000a81548160ff0219169083600381111561002357fe5b0217905550600060055534801561003957600080fd5b506040516127013803806127018339818101604052604081101561005c57600080fd5b81019080805190602001909291908051906020019092919050505081816001336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260146101000a81548161ffff021916908361ffff16021790555050620100008261ffff16106101ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f666565202520746f6f206869676800000000000000000000000000000000000081525060200191505060405180910390fd5b7f8000000000000000000000000000000000000000000000000000000000000000811115610283576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6d696e466565416d6f756e7420746f6f2068696768000000000000000000000081525060200191505060405180910390fd5b81600260166101000a81548161ffff021916908361ffff1602179055508060038190555050505050612447806102ba6000396000f3fe6080604052600436106100f35760003560e01c8063946519f11161008a578063bfe5d9c511610059578063bfe5d9c51461079d578063f47bc89c1461085b578063f5d36475146108ac578063ffa1ad74146108d7576100f3565b8063946519f11461045c5780639a3c6e291461056c578063a6f9dae11461065c578063a80e7acb146106ad576100f3565b80632e49d78b116100c65780632e49d78b146103435780635983e6b0146103815780638815eb39146103d25780638da5cb5b14610405576100f3565b80630b898c9e1461016e5780630bc2aad214610286578063200d2ed2146102b957806326bdee37146102f2575b6000803690501461016c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f696e76616c6964206d6574686f642063616c6c6564000000000000000000000081525060200191505060405180910390fd5b005b34801561017a57600080fd5b5061026c600480360360c081101561019157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561020e57600080fd5b82018360208201111561022057600080fd5b8035906020019184600183028401116401000000008311171561024257600080fd5b909192939192939080359060200190929190803563ffffffff169060200190929190505050610967565b604051808215151515815260200191505060405180910390f35b34801561029257600080fd5b5061029b610e64565b604051808261ffff1661ffff16815260200191505060405180910390f35b3480156102c557600080fd5b506102ce610e78565b604051808260038111156102de57fe5b60ff16815260200191505060405180910390f35b3480156102fe57600080fd5b506103416004803603602081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e8b565b005b34801561034f57600080fd5b5061037f6004803603602081101561036657600080fd5b81019080803560ff169060200190929190505050611028565b005b34801561038d57600080fd5b506103d0600480360360208110156103a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061117a565b005b3480156103de57600080fd5b506103e7611297565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561041157600080fd5b5061041a6112ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046857600080fd5b5061054a600480360360a081101561047f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104fc57600080fd5b82018360208201111561050e57600080fd5b8035906020019184600183028401116401000000008311171561053057600080fd5b9091929391929390803590602001909291905050506112d0565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561057857600080fd5b5061065a600480360360a081101561058f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561060c57600080fd5b82018360208201111561061e57600080fd5b8035906020019184600183028401116401000000008311171561064057600080fd5b909192939192939080359060200190929190505050611331565b005b34801561066857600080fd5b506106ab6004803603602081101561067f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116aa565b005b3480156106b957600080fd5b5061079b600480360360a08110156106d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b909192939192939080359060200190929190505050611846565b005b3480156107a957600080fd5b50610841600480360360408110156107c057600080fd5b81019080803590602001906401000000008111156107dd57600080fd5b8201836020820111156107ef57600080fd5b8035906020019184600183028401116401000000008311171561081157600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bbf565b604051808215151515815260200191505060405180910390f35b34801561086757600080fd5b506108aa6004803603602081101561087e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ce5565b005b3480156108b857600080fd5b506108c1611e01565b6040518082815260200191505060405180910390f35b3480156108e357600080fd5b506108ec611e07565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561092c578082015181840152602081019050610911565b50505050905090810190601f1680156109595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000600380600381111561097757fe5b600060149054906101000a900460ff16600381111561099257fe5b1015610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f696e76616c696420636f6e74726163742073746174757300000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806123c76023913960400191505060405180910390fd5b86600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e76616c6964206f7261636c6520616464726573730000000000000000000081525060200191505060405180910390fd5b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508a600061ffff6002840151169050600260149054906101000a900461ffff1661ffff168161ffff1614610c4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e76616c69642061737365742074797065000000000000000000000000000081525060200191505060405180910390fd5b610c568383611e40565b6201518063ffffffff168763ffffffff1610158015610c84575062278d0063ffffffff168763ffffffff1611155b610cf6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6c6f636b2074696d65206f757473696465206c696d697473000000000000000081525060200191505060405180910390fd5b6000610d238e8e8e8e8e60405180838380828437808301925050509250505060405180910390208d611ebf565b9050610d2e81611fa0565b8742016004600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550610db08b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508f612042565b610e22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f657363726f77206c6f636b206661696c6564000000000000000000000000000081525060200191505060405180910390fd5b807f102d25c49d33fcdb8976a3f2744e0785c98d9e43b88364859e6aec4ae82eff5c60405160405180910390a260019650505050505050979650505050505050565b600260169054906101000a900461ffff1681565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fadf20380d9033e7f11fc1856d69012aa18e03195a098cd38ce3be225966968a83382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b7fe1377aa21d49fa10bb9ece6a0cd4f75597a90a80c3750f7f7674967f49ab9a62600060149054906101000a900460ff16826040518083600381111561112c57fe5b60ff16815260200182600381111561114057fe5b60ff1681526020019250505060405180910390a180600060146101000a81548160ff0219169083600381111561117257fe5b021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461123c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600260149054906101000a900461ffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806112fe8888888888604051808383808284378083019250505092505050604051809103902087611ebf565b90506004600082815260200190815260200160002060009054906101000a900463ffffffff169150509695505050505050565b600280600381111561133f57fe5b600060149054906101000a900460ff16600381111561135a57fe5b10156113ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f696e76616c696420636f6e74726163742073746174757300000000000000000081525060200191505060405180910390fd5b86858173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061148a57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156114895750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b5b6114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806123ea6029913960400191505060405180910390fd5b600061150c8a8a8a8a8a604051808383808284378083019250505092505050604051809103902089611ebf565b90506115178161205e565b60006004600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555061159887878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508a612109565b61160a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f61737365742072656c65617365206661696c656400000000000000000000000081525060200191505060405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561167057807f789952a21900cba4809507b4ba56618cee6a1e748254f8faab21e9b8f1c60bc960405160405180910390a261169e565b807f6eec2dd2382427616d4ea7ef183b16091feac4e2e63c8b55f25215f132df8d1460405160405180910390a25b50505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461176c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c3382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600180600381111561185457fe5b600060149054906101000a900460ff16600381111561186f57fe5b10156118e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f696e76616c696420636f6e74726163742073746174757300000000000000000081525060200191505060405180910390fd5b86858173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061199f57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561199e5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b5b6119f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806123ea6029913960400191505060405180910390fd5b6000611a218a8a8a8a8a604051808383808284378083019250505092505050604051809103902089611ebf565b9050611a2c8161213b565b60006004600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550611aad87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508b61221a565b611b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f61737365742072657475726e206661696c65640000000000000000000000000081525060200191505060405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611b8557807f7b5ac55826e0ca40c3f69722d916fb9962d86cffcddc9c84d082b712419e5cbd60405160405180910390a2611bb3565b807fc99795d9dc9d68f27b21e122a0e663f689138f9110dee0122fc2980f8d57977560405160405180910390a25b50505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b6000600554905060006005819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611cd8573d6000803e3d6000fd5b5060019150509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611da7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60035481565b6040518060400160405280600581526020017f302e352e3000000000000000000000000000000000000000000000000000000081525081565b602261ffff16825114611ebb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f696e76616c69642061737365742064617461206c656e6774680000000000000081525060200191505060405180910390fd5b5050565b60008585858585604051602001808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018381526020018281526020019550505050505060405160208183030381529060405280519060200120905095945050505050565b60006004600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161461203f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7377617020616c7265616479206578697374730000000000000000000000000081525060200191505060405180910390fd5b50565b600061205661205084612237565b83612258565b905092915050565b633b9aca0063ffffffff166004600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611612106576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7377617020696e76616c6964000000000000000000000000000000000000000081525060200191505060405180910390fd5b50565b60008061211f84612119866122f0565b856122fe565b905080156121315761213084612352565b5b8091505092915050565b633b9aca0063ffffffff166004600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161180156121a557506004600082815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1642115b612217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f73776170206e6f742065787069726564206f7220696e76616c6964000000000081525060200191505060405180910390fd5b50565b600061222f8361222985612237565b846122fe565b905092915050565b600080612243836122f0565b905061224e8161236f565b8101915050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166381fd3f0b846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156122ad57600080fd5b505af11580156122c1573d6000803e3d6000fd5b505050506040513d60208110156122d757600080fd5b8101908080519060200190929190505050905092915050565b600060228201519050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015612346573d6000803e3d6000fd5b50600190509392505050565b61236c81612367612362846122f0565b61236f565b6123b2565b50565b600080620186a0600260169054906101000a900461ffff1661ffff1684028161239457fe5b04905060035481106123a657806123aa565b6003545b915050919050565b80600560008282540192505081905550505056fe6f6e6c792074686520737761702063726561746f722063616e2063616c6c20746869736f6e6c7920746865206f7261636c65206f722074686520706f6f6c2063616e2063616c6c2074686973a265627a7a723058209143755cff470eb6308962123b2a3d76fc429d511e891b82d5c9db902912180c64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2701 CODESIZE SUB DUP1 PUSH2 0x2701 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 DUP2 PUSH1 0x1 CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x10000 DUP3 PUSH2 0xFFFF AND LT PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x666565202520746F6F2068696768000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP2 GT ISZERO PUSH2 0x283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6D696E466565416D6F756E7420746F6F20686967680000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x2447 DUP1 PUSH2 0x2BA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x946519F1 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBFE5D9C5 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBFE5D9C5 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF47BC89C EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0xF5D36475 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x8D7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x946519F1 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x9A3C6E29 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xA80E7ACB EQ PUSH2 0x6AD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2E49D78B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x5983E6B0 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x8815EB39 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x405 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xB898C9E EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xBC2AAD2 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x26BDEE37 EQ PUSH2 0x2F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE SWAP1 POP EQ PUSH2 0x16C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C6964206D6574686F642063616C6C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2DE JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1028 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1331 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1846 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x841 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EC PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x92C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x911 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x959 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x977 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x992 JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420636F6E747261637420737461747573000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23C7 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C6964206F7261636C65206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 PUSH1 0x0 PUSH2 0xFFFF PUSH1 0x2 DUP5 ADD MLOAD AND SWAP1 POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND EQ PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420617373657420747970650000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC56 DUP4 DUP4 PUSH2 0x1E40 JUMP JUMPDEST PUSH3 0x15180 PUSH4 0xFFFFFFFF AND DUP8 PUSH4 0xFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0xC84 JUMPI POP PUSH3 0x278D00 PUSH4 0xFFFFFFFF AND DUP8 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C6F636B2074696D65206F757473696465206C696D6974730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD23 DUP15 DUP15 DUP15 DUP15 DUP15 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP14 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH2 0xD2E DUP2 PUSH2 0x1FA0 JUMP JUMPDEST DUP8 TIMESTAMP ADD PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB0 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP16 PUSH2 0x2042 JUMP JUMPDEST PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x657363726F77206C6F636B206661696C65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x102D25C49D33FCDB8976A3F2744E0785C98D9E43B88364859E6AEC4AE82EFF5C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP7 POP POP POP POP POP POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xADF20380D9033E7F11FC1856D69012AA18E03195A098CD38CE3BE225966968A8 CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE1377AA21D49FA10BB9ECE6A0CD4F75597A90A80C3750F7F7674967F49AB9A62 PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x112C JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1140 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1172 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12FE DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP8 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x133F JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135A JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420636F6E747261637420737461747573000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x148A JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1489 JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST JUMPDEST PUSH2 0x14DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x150C DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP10 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH2 0x1517 DUP2 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1598 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61737365742072656C65617365206661696C6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1670 JUMPI DUP1 PUSH32 0x789952A21900CBA4809507B4BA56618CEE6A1E748254F8FAAB21E9B8F1C60BC9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x169E JUMP JUMPDEST DUP1 PUSH32 0x6EEC2DD2382427616D4EA7EF183B16091FEAC4E2E63C8B55F25215F132DF8D14 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1854 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x186F JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420636F6E747261637420737461747573000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x199F JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x199E JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST JUMPDEST PUSH2 0x19F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A21 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP10 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH2 0x1A2C DUP2 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1AAD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 PUSH2 0x221A JUMP JUMPDEST PUSH2 0x1B1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61737365742072657475726E206661696C656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B85 JUMPI DUP1 PUSH32 0x7B5AC55826E0CA40C3F69722D916FB9962D86CFFCDDC9C84D082B712419E5CBD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1BB3 JUMP JUMPDEST DUP1 PUSH32 0xC99795D9DC9D68F27B21E122A0E663F689138F9110DEE0122FC2980F8D579775 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x302E352E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x22 PUSH2 0xFFFF AND DUP3 MLOAD EQ PUSH2 0x1EBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C69642061737365742064617461206C656E67746800000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ PUSH2 0x203F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7377617020616C72656164792065786973747300000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2056 PUSH2 0x2050 DUP5 PUSH2 0x2237 JUMP JUMPDEST DUP4 PUSH2 0x2258 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x2106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7377617020696E76616C69640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x211F DUP5 PUSH2 0x2119 DUP7 PUSH2 0x22F0 JUMP JUMPDEST DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2131 JUMPI PUSH2 0x2130 DUP5 PUSH2 0x2352 JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x21A5 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND TIMESTAMP GT JUMPDEST PUSH2 0x2217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73776170206E6F742065787069726564206F7220696E76616C69640000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222F DUP4 PUSH2 0x2229 DUP6 PUSH2 0x2237 JUMP JUMPDEST DUP5 PUSH2 0x22FE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2243 DUP4 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x224E DUP2 PUSH2 0x236F JUMP JUMPDEST DUP2 ADD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81FD3F0B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2367 PUSH2 0x2362 DUP5 PUSH2 0x22F0 JUMP JUMPDEST PUSH2 0x236F JUMP JUMPDEST PUSH2 0x23B2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x186A0 PUSH1 0x2 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP5 MUL DUP2 PUSH2 0x2394 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x23A6 JUMPI DUP1 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP INVALID PUSH16 0x6E6C7920746865207377617020637265 PUSH2 0x746F PUSH19 0x2063616E2063616C6C20746869736F6E6C7920 PUSH21 0x6865206F7261636C65206F722074686520706F6F6C KECCAK256 PUSH4 0x616E2063 PUSH2 0x6C6C KECCAK256 PUSH21 0x686973A265627A7A723058209143755CFF470EB630 DUP10 PUSH3 0x123B2A RETURNDATASIZE PUSH23 0xFC429D511E891B82D5C9DB902912180C64736F6C634300 SDIV EXP STOP ORIGIN ",
							"sourceMap": "16437:232:0:-;;;4400:13;4377:36;;;;;;;;;;;;;;;;;;;;;;;;;;14822:1;14787:36;;16509:157;8:9:-1;5:2;;;30:1;27;20:12;5:2;16509:157:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16509:157:0;;;;;;;;;;;;;;;;;;;;;;;;;16625:22;16649:13;14723:1;3890:10;3882:5;;:18;;;;;;;;;;;;;;;;;;4817:4;4795:7;:19;4803:10;4795:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;5611:10;5597:11;;:24;;;;;;;;;;;;;;;;;;1322:9;1309:10;;:22;;;;;;;;;;;;;;;;;;1246:92;6192:7;6166:22;:34;;;6158:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6255:8;6237:13;:27;;6229:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6324:22;6300:21;;:46;;;;;;;;;;;;;;;;;;6371:13;6356:12;:28;;;;6075:316;;16509:157;;16437:232;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100f35760003560e01c8063946519f11161008a578063bfe5d9c511610059578063bfe5d9c51461079d578063f47bc89c1461085b578063f5d36475146108ac578063ffa1ad74146108d7576100f3565b8063946519f11461045c5780639a3c6e291461056c578063a6f9dae11461065c578063a80e7acb146106ad576100f3565b80632e49d78b116100c65780632e49d78b146103435780635983e6b0146103815780638815eb39146103d25780638da5cb5b14610405576100f3565b80630b898c9e1461016e5780630bc2aad214610286578063200d2ed2146102b957806326bdee37146102f2575b6000803690501461016c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f696e76616c6964206d6574686f642063616c6c6564000000000000000000000081525060200191505060405180910390fd5b005b34801561017a57600080fd5b5061026c600480360360c081101561019157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561020e57600080fd5b82018360208201111561022057600080fd5b8035906020019184600183028401116401000000008311171561024257600080fd5b909192939192939080359060200190929190803563ffffffff169060200190929190505050610967565b604051808215151515815260200191505060405180910390f35b34801561029257600080fd5b5061029b610e64565b604051808261ffff1661ffff16815260200191505060405180910390f35b3480156102c557600080fd5b506102ce610e78565b604051808260038111156102de57fe5b60ff16815260200191505060405180910390f35b3480156102fe57600080fd5b506103416004803603602081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e8b565b005b34801561034f57600080fd5b5061037f6004803603602081101561036657600080fd5b81019080803560ff169060200190929190505050611028565b005b34801561038d57600080fd5b506103d0600480360360208110156103a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061117a565b005b3480156103de57600080fd5b506103e7611297565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561041157600080fd5b5061041a6112ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046857600080fd5b5061054a600480360360a081101561047f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104fc57600080fd5b82018360208201111561050e57600080fd5b8035906020019184600183028401116401000000008311171561053057600080fd5b9091929391929390803590602001909291905050506112d0565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561057857600080fd5b5061065a600480360360a081101561058f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561060c57600080fd5b82018360208201111561061e57600080fd5b8035906020019184600183028401116401000000008311171561064057600080fd5b909192939192939080359060200190929190505050611331565b005b34801561066857600080fd5b506106ab6004803603602081101561067f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116aa565b005b3480156106b957600080fd5b5061079b600480360360a08110156106d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b909192939192939080359060200190929190505050611846565b005b3480156107a957600080fd5b50610841600480360360408110156107c057600080fd5b81019080803590602001906401000000008111156107dd57600080fd5b8201836020820111156107ef57600080fd5b8035906020019184600183028401116401000000008311171561081157600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bbf565b604051808215151515815260200191505060405180910390f35b34801561086757600080fd5b506108aa6004803603602081101561087e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ce5565b005b3480156108b857600080fd5b506108c1611e01565b6040518082815260200191505060405180910390f35b3480156108e357600080fd5b506108ec611e07565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561092c578082015181840152602081019050610911565b50505050905090810190601f1680156109595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000600380600381111561097757fe5b600060149054906101000a900460ff16600381111561099257fe5b1015610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f696e76616c696420636f6e74726163742073746174757300000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806123c76023913960400191505060405180910390fd5b86600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e76616c6964206f7261636c6520616464726573730000000000000000000081525060200191505060405180910390fd5b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508a600061ffff6002840151169050600260149054906101000a900461ffff1661ffff168161ffff1614610c4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e76616c69642061737365742074797065000000000000000000000000000081525060200191505060405180910390fd5b610c568383611e40565b6201518063ffffffff168763ffffffff1610158015610c84575062278d0063ffffffff168763ffffffff1611155b610cf6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6c6f636b2074696d65206f757473696465206c696d697473000000000000000081525060200191505060405180910390fd5b6000610d238e8e8e8e8e60405180838380828437808301925050509250505060405180910390208d611ebf565b9050610d2e81611fa0565b8742016004600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550610db08b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508f612042565b610e22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f657363726f77206c6f636b206661696c6564000000000000000000000000000081525060200191505060405180910390fd5b807f102d25c49d33fcdb8976a3f2744e0785c98d9e43b88364859e6aec4ae82eff5c60405160405180910390a260019650505050505050979650505050505050565b600260169054906101000a900461ffff1681565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fadf20380d9033e7f11fc1856d69012aa18e03195a098cd38ce3be225966968a83382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b7fe1377aa21d49fa10bb9ece6a0cd4f75597a90a80c3750f7f7674967f49ab9a62600060149054906101000a900460ff16826040518083600381111561112c57fe5b60ff16815260200182600381111561114057fe5b60ff1681526020019250505060405180910390a180600060146101000a81548160ff0219169083600381111561117257fe5b021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461123c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600260149054906101000a900461ffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806112fe8888888888604051808383808284378083019250505092505050604051809103902087611ebf565b90506004600082815260200190815260200160002060009054906101000a900463ffffffff169150509695505050505050565b600280600381111561133f57fe5b600060149054906101000a900460ff16600381111561135a57fe5b10156113ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f696e76616c696420636f6e74726163742073746174757300000000000000000081525060200191505060405180910390fd5b86858173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061148a57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156114895750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b5b6114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806123ea6029913960400191505060405180910390fd5b600061150c8a8a8a8a8a604051808383808284378083019250505092505050604051809103902089611ebf565b90506115178161205e565b60006004600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555061159887878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508a612109565b61160a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f61737365742072656c65617365206661696c656400000000000000000000000081525060200191505060405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561167057807f789952a21900cba4809507b4ba56618cee6a1e748254f8faab21e9b8f1c60bc960405160405180910390a261169e565b807f6eec2dd2382427616d4ea7ef183b16091feac4e2e63c8b55f25215f132df8d1460405160405180910390a25b50505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461176c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c3382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600180600381111561185457fe5b600060149054906101000a900460ff16600381111561186f57fe5b10156118e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f696e76616c696420636f6e74726163742073746174757300000000000000000081525060200191505060405180910390fd5b86858173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061199f57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561199e5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b5b6119f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806123ea6029913960400191505060405180910390fd5b6000611a218a8a8a8a8a604051808383808284378083019250505092505050604051809103902089611ebf565b9050611a2c8161213b565b60006004600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550611aad87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508b61221a565b611b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f61737365742072657475726e206661696c65640000000000000000000000000081525060200191505060405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611b8557807f7b5ac55826e0ca40c3f69722d916fb9962d86cffcddc9c84d082b712419e5cbd60405160405180910390a2611bb3565b807fc99795d9dc9d68f27b21e122a0e663f689138f9110dee0122fc2980f8d57977560405160405180910390a25b50505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b6000600554905060006005819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611cd8573d6000803e3d6000fd5b5060019150509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611da7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60035481565b6040518060400160405280600581526020017f302e352e3000000000000000000000000000000000000000000000000000000081525081565b602261ffff16825114611ebb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f696e76616c69642061737365742064617461206c656e6774680000000000000081525060200191505060405180910390fd5b5050565b60008585858585604051602001808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018381526020018281526020019550505050505060405160208183030381529060405280519060200120905095945050505050565b60006004600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161461203f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7377617020616c7265616479206578697374730000000000000000000000000081525060200191505060405180910390fd5b50565b600061205661205084612237565b83612258565b905092915050565b633b9aca0063ffffffff166004600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611612106576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7377617020696e76616c6964000000000000000000000000000000000000000081525060200191505060405180910390fd5b50565b60008061211f84612119866122f0565b856122fe565b905080156121315761213084612352565b5b8091505092915050565b633b9aca0063ffffffff166004600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161180156121a557506004600082815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1642115b612217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f73776170206e6f742065787069726564206f7220696e76616c6964000000000081525060200191505060405180910390fd5b50565b600061222f8361222985612237565b846122fe565b905092915050565b600080612243836122f0565b905061224e8161236f565b8101915050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166381fd3f0b846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156122ad57600080fd5b505af11580156122c1573d6000803e3d6000fd5b505050506040513d60208110156122d757600080fd5b8101908080519060200190929190505050905092915050565b600060228201519050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015612346573d6000803e3d6000fd5b50600190509392505050565b61236c81612367612362846122f0565b61236f565b6123b2565b50565b600080620186a0600260169054906101000a900461ffff1661ffff1684028161239457fe5b04905060035481106123a657806123aa565b6003545b915050919050565b80600560008282540192505081905550505056fe6f6e6c792074686520737761702063726561746f722063616e2063616c6c20746869736f6e6c7920746865206f7261636c65206f722074686520706f6f6c2063616e2063616c6c2074686973a265627a7a723058209143755cff470eb6308962123b2a3d76fc429d511e891b82d5c9db902912180c64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x946519F1 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBFE5D9C5 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBFE5D9C5 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF47BC89C EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0xF5D36475 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x8D7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x946519F1 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x9A3C6E29 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xA80E7ACB EQ PUSH2 0x6AD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2E49D78B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x5983E6B0 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x8815EB39 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x405 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xB898C9E EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xBC2AAD2 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x26BDEE37 EQ PUSH2 0x2F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE SWAP1 POP EQ PUSH2 0x16C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C6964206D6574686F642063616C6C65640000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2DE JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1028 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1331 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1846 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x841 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EC PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x92C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x911 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x959 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x977 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x992 JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420636F6E747261637420737461747573000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23C7 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C6964206F7261636C65206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 PUSH1 0x0 PUSH2 0xFFFF PUSH1 0x2 DUP5 ADD MLOAD AND SWAP1 POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND EQ PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420617373657420747970650000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC56 DUP4 DUP4 PUSH2 0x1E40 JUMP JUMPDEST PUSH3 0x15180 PUSH4 0xFFFFFFFF AND DUP8 PUSH4 0xFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0xC84 JUMPI POP PUSH3 0x278D00 PUSH4 0xFFFFFFFF AND DUP8 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C6F636B2074696D65206F757473696465206C696D6974730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD23 DUP15 DUP15 DUP15 DUP15 DUP15 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP14 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH2 0xD2E DUP2 PUSH2 0x1FA0 JUMP JUMPDEST DUP8 TIMESTAMP ADD PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB0 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP16 PUSH2 0x2042 JUMP JUMPDEST PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x657363726F77206C6F636B206661696C65640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x102D25C49D33FCDB8976A3F2744E0785C98D9E43B88364859E6AEC4AE82EFF5C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP7 POP POP POP POP POP POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xADF20380D9033E7F11FC1856D69012AA18E03195A098CD38CE3BE225966968A8 CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE1377AA21D49FA10BB9ECE6A0CD4F75597A90A80C3750F7F7674967F49AB9A62 PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x112C JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1140 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1172 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12FE DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP8 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x133F JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135A JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420636F6E747261637420737461747573000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x148A JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1489 JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST JUMPDEST PUSH2 0x14DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x150C DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP10 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH2 0x1517 DUP2 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1598 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61737365742072656C65617365206661696C6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1670 JUMPI DUP1 PUSH32 0x789952A21900CBA4809507B4BA56618CEE6A1E748254F8FAAB21E9B8F1C60BC9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x169E JUMP JUMPDEST DUP1 PUSH32 0x6EEC2DD2382427616D4EA7EF183B16091FEAC4E2E63C8B55F25215F132DF8D14 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1854 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x186F JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C696420636F6E747261637420737461747573000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x199F JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x199E JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST JUMPDEST PUSH2 0x19F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A21 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP10 PUSH2 0x1EBF JUMP JUMPDEST SWAP1 POP PUSH2 0x1A2C DUP2 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1AAD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 PUSH2 0x221A JUMP JUMPDEST PUSH2 0x1B1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x61737365742072657475726E206661696C656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B85 JUMPI DUP1 PUSH32 0x7B5AC55826E0CA40C3F69722D916FB9962D86CFFCDDC9C84D082B712419E5CBD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1BB3 JUMP JUMPDEST DUP1 PUSH32 0xC99795D9DC9D68F27B21E122A0E663F689138F9110DEE0122FC2980F8D579775 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x302E352E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x22 PUSH2 0xFFFF AND DUP3 MLOAD EQ PUSH2 0x1EBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C69642061737365742064617461206C656E67746800000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ PUSH2 0x203F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7377617020616C72656164792065786973747300000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2056 PUSH2 0x2050 DUP5 PUSH2 0x2237 JUMP JUMPDEST DUP4 PUSH2 0x2258 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x2106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7377617020696E76616C69640000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x211F DUP5 PUSH2 0x2119 DUP7 PUSH2 0x22F0 JUMP JUMPDEST DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2131 JUMPI PUSH2 0x2130 DUP5 PUSH2 0x2352 JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x21A5 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND TIMESTAMP GT JUMPDEST PUSH2 0x2217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73776170206E6F742065787069726564206F7220696E76616C69640000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222F DUP4 PUSH2 0x2229 DUP6 PUSH2 0x2237 JUMP JUMPDEST DUP5 PUSH2 0x22FE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2243 DUP4 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x224E DUP2 PUSH2 0x236F JUMP JUMPDEST DUP2 ADD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81FD3F0B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2367 PUSH2 0x2362 DUP5 PUSH2 0x22F0 JUMP JUMPDEST PUSH2 0x236F JUMP JUMPDEST PUSH2 0x23B2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x186A0 PUSH1 0x2 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP5 MUL DUP2 PUSH2 0x2394 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x23A6 JUMPI DUP1 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP INVALID PUSH16 0x6E6C7920746865207377617020637265 PUSH2 0x746F PUSH19 0x2063616E2063616C6C20746869736F6E6C7920 PUSH21 0x6865206F7261636C65206F722074686520706F6F6C KECCAK256 PUSH4 0x616E2063 PUSH2 0x6C6C KECCAK256 PUSH21 0x686973A265627A7A723058209143755CFF470EB630 DUP10 PUSH3 0x123B2A RETURNDATASIZE PUSH23 0xFC429D511E891B82D5C9DB902912180C64736F6C634300 SDIV EXP STOP ORIGIN ",
							"sourceMap": "16437:232:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16215:1;16196:8;;:15;;:20;16188:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16437:232;9101:1352;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9101:1352:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9101:1352:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9101:1352:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9101:1352:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9101:1352:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6000:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6000:35:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4377:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4377:36:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5634:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5634:165:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5634:165:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;4420:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4420:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4420:132:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;4939:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4939:99:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4939:99:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1215:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1215:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3761:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3761:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13124:386;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13124:386:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;13124:386:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;13124:386:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;13124:386:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;13124:386:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10913:802;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10913:802:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10913:802:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10913:802:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10913:802:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10913:802:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4028:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4028:143:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4028:143:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12041:796;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12041:796:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12041:796:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12041:796:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12041:796:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12041:796:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15765:262;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15765:262:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15765:262:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15765:262:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15765:262:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15765:262:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4834:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4834:99:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4834:99:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;6041:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6041:27:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8070:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8070:40:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8070:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9101:1352;9484:12;9343:13;4625:7;4615:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;;4607:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5864:11;;;;;;;;;;;5850:25;;:10;:25;;;5842:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9401:7;5097;:16;5105:7;5097:16;;;;;;;;;;;;;;;;;;;;;;;;;5089:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9440:10;;2927:422;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2927:422:0;;;;;;9452:5;3007:16;3196:6;3175:1;3164:9;3160:17;3154:24;3133:83;3120:96;;3256:10;;;;;;;;;;;3243:23;;:9;:23;;;3235:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3299:32;3314:9;3325:5;3299:14;:32::i;:::-;8329:8;9533:33;;:9;:33;;;;:70;;;;;8391:7;9570:33;;:9;:33;;;;9533:70;9512:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9663:16;9682:104;9707:5;9714:9;9725:7;9744:10;;9734:21;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;9734:21:0;;;;;;;;;;;;;9757:19;9682:11;:104::i;:::-;9663:123;;9796:30;9817:8;9796:20;:30::i;:::-;10274:9;10255:15;10248:35;10230:5;:15;10236:8;10230:15;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10314:35;10331:10;;10314:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10314:35:0;;;;;;10343:5;10314:16;:35::i;:::-;10293:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10416:8;10408:17;;;;;;;;;;10442:4;10435:11;;;5150:1;;;5925;9101:1352;;;;;;;;;;:::o;6000:35::-;;;;;;;;;;;;;:::o;4377:36::-;;;;;;;;;;;;;:::o;5634:165::-;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5723:11;5709;;:25;;;;;;;;;;;;;;;;;;5749:43;5768:10;5780:11;5749:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5634:165;:::o;4420:132::-;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4489:30;4503:6;;;;;;;;;;;4511:7;4489:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4538:7;4529:6;;:16;;;;;;;;;;;;;;;;;;;;;;;;4420:132;:::o;4939:99::-;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5026:5;5007:7;:16;5015:7;5007:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;4939:99;:::o;1215:24::-;;;;;;;;;;;;;:::o;3761:20::-;;;;;;;;;;;;;:::o;13124:386::-;13323:13;13348:16;13367:104;13392:5;13399:9;13410:7;13429:10;;13419:21;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;13419:21:0;;;;;;;;;;;;;13442:19;13367:11;:104::i;:::-;13348:123;;13488:5;:15;13494:8;13488:15;;;;;;;;;;;;;;;;;;;;;13481:22;;;13124:386;;;;;;;;:::o;10913:802::-;11114:20;4625:7;4615:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;;4607:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11153:5;11160:7;5267:5;5253:19;;:10;:19;;;:69;;;;5291:7;5277:21;;:10;:21;;;:44;;;;;5302:7;:19;5310:10;5302:19;;;;;;;;;;;;;;;;;;;;;;;;;5277:44;5253:69;5232:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11179:16;11198:104;11223:5;11230:9;11241:7;11260:10;;11250:21;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;11250:21:0;;;;;;;;;;;;;11273:19;11198:11;:104::i;:::-;11179:123;;11312:28;11331:8;11312:18;:28::i;:::-;11448:1;11430:5;:15;11436:8;11430:15;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;11480:42;11500:10;;11480:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11480:42:0;;;;;;11512:9;11480:19;:42::i;:::-;11459:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11596:5;11582:19;;:10;:19;;;11578:131;;;11635:8;11622:22;;;;;;;;;;11578:131;;;11689:8;11680:18;;;;;;;;;;11578:131;5399:1;4670;;10913:802;;;;;;;:::o;4028:143::-;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4105:9;4097:5;;:17;;;;;;;;;;;;;;;;;;4129:35;4142:10;4154:9;4129:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4028:143;:::o;12041:796::-;12246:18;4625:7;4615:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;;4607:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12283:5;12290:7;5267:5;5253:19;;:10;:19;;;:69;;;;5291:7;5277:21;;:10;:21;;;:44;;;;;5302:7;:19;5310:10;5302:19;;;;;;;;;;;;;;;;;;;;;;;;;5277:44;5253:69;5232:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12309:16;12328:104;12353:5;12360:9;12371:7;12390:10;;12380:21;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;12380:21:0;;;;;;;;;;;;;12403:19;12328:11;:104::i;:::-;12309:123;;12442:28;12461:8;12442:18;:28::i;:::-;12578:1;12560:5;:15;12566:8;12560:15;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;12610:35;12627:10;;12610:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12610:35:0;;;;;;12639:5;12610:16;:35::i;:::-;12589:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12718:5;12704:19;;:10;:19;;;12700:131;;;12757:8;12744:22;;;;;;;;;;12700:131;;;12811:8;12802:18;;;;;;;;;;12700:131;5399:1;4670;;12041:796;;;;;;;:::o;15765:262::-;15888:12;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15912:12;15927:15;;15912:30;;15970:1;15952:15;:19;;;;15981:3;:12;;:18;15994:4;15981:18;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15981:18:0;16016:4;16009:11;;;15765:262;;;;;:::o;4834:99::-;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4922:4;4903:7;:16;4911:7;4903:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;4834:99;:::o;6041:27::-;;;;:::o;8070:40::-;;;;;;;;;;;;;;;;;;;:::o;16255:177::-;14779:2;16354:41;;:9;:16;:41;16346:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16255:177;;:::o;13619:360::-;13808:7;13891:5;13898:9;13909:7;13918:9;13929:19;13857:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13857:105:0;;;13834:138;;;;;;13827:145;;13619:360;;;;;;;:::o;13985:165::-;14097:1;14078:5;:15;14084:8;14078:15;;;;;;;;;;;;;;;;;;;;;:20;;;14057:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13985:165;:::o;7210:199::-;7323:12;7354:48;7367:27;7384:9;7367:16;:27::i;:::-;7396:5;7354:12;:48::i;:::-;7347:55;;7210:199;;;;:::o;14156:174::-;8165:10;14247:38;;:5;:15;14253:8;14247:15;;;;;;;;;;;;;;;;;;;;;:38;;;14226:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14156:174;:::o;7627:278::-;7741:12;7765:11;7779:50;7792:9;7803:20;7813:9;7803;:20::i;:::-;7825:3;7779:12;:50::i;:::-;7765:64;;7843:6;7839:36;;;7851:24;7865:9;7851:13;:24::i;:::-;7839:36;7892:6;7885:13;;;7627:278;;;;:::o;14336:292::-;8165:10;14493:38;;:5;:15;14499:8;14493:15;;;;;;;;;;;;;;;;;;;;;:38;;;:75;;;;;14553:5;:15;14559:8;14553:15;;;;;;;;;;;;;;;;;;;;;14535:33;;:15;:33;14493:75;14406:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14336:292;:::o;7415:206::-;7526:12;7557:57;7570:9;7581:27;7598:9;7581:16;:27::i;:::-;7610:3;7557:12;:57::i;:::-;7550:64;;7415:206;;;;:::o;7016:188::-;7089:7;7108:18;7129:20;7139:9;7129;:20::i;:::-;7108:41;;7179:18;7186:10;7179:6;:18::i;:::-;7166:10;:31;7159:38;;;7016:188;;;:::o;2039:194::-;2140:12;2196:5;2171:47;;;2219:6;2171:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2171:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2171:55:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2171:55:0;;;;;;;;;;;;;;;;2164:62;;2039:194;;;;:::o;15156:230::-;15222:14;15366:2;15355:9;15351:18;15345:25;15335:35;;15321:59;;;:::o;15392:238::-;15528:12;15552:3;:12;;:21;15565:7;15552:21;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15552:21:0;15619:4;15612:11;;15392:238;;;;;:::o;6479:130::-;6545:57;6562:9;6573:28;6580:20;6590:9;6580;:20::i;:::-;6573:6;:28::i;:::-;6545:16;:57::i;:::-;6479:130;:::o;6794:216::-;6850:7;6869:11;6917:6;6893:21;;;;;;;;;;;6883:31;;:7;:31;:40;;;;;;6869:54;;6946:12;;6940:3;:18;:63;;7000:3;6940:63;;;6973:12;;6940:63;6933:70;;;6794:216;;;:::o;15636:123::-;15745:7;15726:15;;:26;;;;;;;;;;;15636:123;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1857400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "338",
								"ASSET_TYPE()": "570",
								"VERSION()": "infinite",
								"approveOracle(address)": "20905",
								"changeOwner(address)": "22207",
								"changeSwapCreator(address)": "22230",
								"create(address,address,address,bytes,bytes32,uint32)": "infinite",
								"feeThousandthsPercent()": "549",
								"getSwapStatus(address,address,address,bytes,bytes32)": "infinite",
								"minFeeAmount()": "471",
								"owner()": "542",
								"release(address,address,address,bytes,bytes32)": "infinite",
								"returnFunds(address,address,address,bytes,bytes32)": "infinite",
								"revokeOracle(address)": "20906",
								"setStatus(uint8)": "22560",
								"status()": "591",
								"withdrawFees(bytes,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16437,
									"end": 16669,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "MSTORE"
								},
								{
									"begin": 4400,
									"end": 4413,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "EXP"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP2"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SLOAD"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP2"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "MUL"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "NOT"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "AND"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SWAP1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP4"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP2"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "GT"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "ISZERO"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "JUMPI"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "INVALID"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "JUMPDEST"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "MUL"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "OR"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SWAP1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SSTORE"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "POP"
								},
								{
									"begin": 14822,
									"end": 14823,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14787,
									"end": 14823,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 14787,
									"end": 14823,
									"name": "SSTORE"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "POP"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "MLOAD"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "PUSHSIZE"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "CODESIZE"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SUB"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "PUSHSIZE"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP4"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "CODECOPY"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP2"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP2"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "ADD"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP2"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "ADD"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "MLOAD"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "ADD"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP3"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP2"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "DUP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "MLOAD"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "ADD"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP3"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP2"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "SWAP1"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "POP"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "POP"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "POP"
								},
								{
									"begin": 16625,
									"end": 16647,
									"name": "DUP2"
								},
								{
									"begin": 16649,
									"end": 16662,
									"name": "DUP2"
								},
								{
									"begin": 14723,
									"end": 14724,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3890,
									"end": 3900,
									"name": "CALLER"
								},
								{
									"begin": 3882,
									"end": 3887,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3887,
									"name": "DUP1"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "EXP"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "DUP2"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SLOAD"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "DUP2"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "MUL"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "NOT"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "AND"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SWAP1"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "DUP4"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "AND"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "MUL"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "OR"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SWAP1"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SSTORE"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "POP"
								},
								{
									"begin": 4817,
									"end": 4821,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4795,
									"end": 4802,
									"name": "DUP1"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4803,
									"end": 4813,
									"name": "CALLER"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "AND"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "AND"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "DUP2"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "MSTORE"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "ADD"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "SWAP1"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "DUP2"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "MSTORE"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "ADD"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "KECCAK256"
								},
								{
									"begin": 4795,
									"end": 4814,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "EXP"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "DUP2"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "SLOAD"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "DUP2"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "MUL"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "NOT"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "AND"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "SWAP1"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "DUP4"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "ISZERO"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "ISZERO"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "MUL"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "OR"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "SWAP1"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "SSTORE"
								},
								{
									"begin": 4795,
									"end": 4821,
									"name": "POP"
								},
								{
									"begin": 5611,
									"end": 5621,
									"name": "CALLER"
								},
								{
									"begin": 5597,
									"end": 5608,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5597,
									"end": 5608,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "EXP"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "DUP2"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "SLOAD"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "DUP2"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "MUL"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "NOT"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "AND"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "SWAP1"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "DUP4"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "AND"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "MUL"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "OR"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "SWAP1"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "SSTORE"
								},
								{
									"begin": 5597,
									"end": 5621,
									"name": "POP"
								},
								{
									"begin": 1322,
									"end": 1331,
									"name": "DUP1"
								},
								{
									"begin": 1309,
									"end": 1319,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1309,
									"end": 1319,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "EXP"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "DUP2"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "SLOAD"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "DUP2"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "MUL"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "NOT"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "AND"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "SWAP1"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "DUP4"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "AND"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "MUL"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "OR"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "SWAP1"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "SSTORE"
								},
								{
									"begin": 1309,
									"end": 1331,
									"name": "POP"
								},
								{
									"begin": 1246,
									"end": 1338,
									"name": "POP"
								},
								{
									"begin": 6192,
									"end": 6199,
									"name": "PUSH",
									"value": "10000"
								},
								{
									"begin": 6166,
									"end": 6188,
									"name": "DUP3"
								},
								{
									"begin": 6166,
									"end": 6200,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 6166,
									"end": 6200,
									"name": "AND"
								},
								{
									"begin": 6166,
									"end": 6200,
									"name": "LT"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "JUMPI"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "MLOAD"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP2"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "MSTORE"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "ADD"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP1"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP1"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "ADD"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP3"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP2"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "SUB"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP3"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "MSTORE"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "E"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP2"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "MSTORE"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "ADD"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP1"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "666565202520746F6F2068696768000000000000000000000000000000000000"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP2"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "MSTORE"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "POP"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "ADD"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "SWAP2"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "POP"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "POP"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "MLOAD"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "DUP1"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "SWAP2"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "SUB"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "SWAP1"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "REVERT"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 6158,
									"end": 6219,
									"name": "JUMPDEST"
								},
								{
									"begin": 6255,
									"end": 6263,
									"name": "PUSH",
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6237,
									"end": 6250,
									"name": "DUP2"
								},
								{
									"begin": 6237,
									"end": 6264,
									"name": "GT"
								},
								{
									"begin": 6237,
									"end": 6264,
									"name": "ISZERO"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "JUMPI"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "MLOAD"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP2"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "MSTORE"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "ADD"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP1"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP1"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "ADD"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP3"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP2"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "SUB"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP3"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "MSTORE"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "15"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP2"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "MSTORE"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "ADD"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP1"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "6D696E466565416D6F756E7420746F6F20686967680000000000000000000000"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP2"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "MSTORE"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "POP"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "ADD"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "SWAP2"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "POP"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "POP"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "MLOAD"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "DUP1"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "SWAP2"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "SUB"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "SWAP1"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "REVERT"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 6229,
									"end": 6290,
									"name": "JUMPDEST"
								},
								{
									"begin": 6324,
									"end": 6346,
									"name": "DUP2"
								},
								{
									"begin": 6300,
									"end": 6321,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 6300,
									"end": 6321,
									"name": "PUSH",
									"value": "16"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "EXP"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "DUP2"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "SLOAD"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "DUP2"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "MUL"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "NOT"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "AND"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "SWAP1"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "DUP4"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "AND"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "MUL"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "OR"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "SWAP1"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "SSTORE"
								},
								{
									"begin": 6300,
									"end": 6346,
									"name": "POP"
								},
								{
									"begin": 6371,
									"end": 6384,
									"name": "DUP1"
								},
								{
									"begin": 6356,
									"end": 6368,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 6356,
									"end": 6384,
									"name": "DUP2"
								},
								{
									"begin": 6356,
									"end": 6384,
									"name": "SWAP1"
								},
								{
									"begin": 6356,
									"end": 6384,
									"name": "SSTORE"
								},
								{
									"begin": 6356,
									"end": 6384,
									"name": "POP"
								},
								{
									"begin": 6075,
									"end": 6391,
									"name": "POP"
								},
								{
									"begin": 6075,
									"end": 6391,
									"name": "POP"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "POP"
								},
								{
									"begin": 16509,
									"end": 16666,
									"name": "POP"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "DUP1"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "CODECOPY"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 16437,
									"end": 16669,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723058209143755cff470eb6308962123b2a3d76fc429d511e891b82d5c9db902912180c64736f6c634300050a0032",
									".code": [
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "MSTORE"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "LT"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "SHR"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "946519F1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "GT"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "BFE5D9C5"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "GT"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "BFE5D9C5"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "F47BC89C"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "F5D36475"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "FFA1AD74"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMP"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPDEST"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "946519F1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "9A3C6E29"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "A6F9DAE1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "A80E7ACB"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMP"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPDEST"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "2E49D78B"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "GT"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "2E49D78B"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "5983E6B0"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "8815EB39"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMP"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPDEST"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "B898C9E"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "BC2AAD2"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "200D2ED2"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "DUP1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH",
											"value": "26BDEE37"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "EQ"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPI"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "JUMPDEST"
										},
										{
											"begin": 16215,
											"end": 16216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16196,
											"end": 16204,
											"name": "DUP1"
										},
										{
											"begin": 16196,
											"end": 16204,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16196,
											"end": 16211,
											"name": "SWAP1"
										},
										{
											"begin": 16196,
											"end": 16211,
											"name": "POP"
										},
										{
											"begin": 16196,
											"end": 16216,
											"name": "EQ"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "JUMPI"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "MLOAD"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP2"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "MSTORE"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "ADD"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP1"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP1"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "ADD"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP3"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP2"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "SUB"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP3"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "MSTORE"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP2"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "MSTORE"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "ADD"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP1"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "696E76616C6964206D6574686F642063616C6C65640000000000000000000000"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP2"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "MSTORE"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "POP"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "ADD"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "SWAP2"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "POP"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "POP"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "MLOAD"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "DUP1"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "SWAP2"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "SUB"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "SWAP1"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "REVERT"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 16188,
											"end": 16242,
											"name": "JUMPDEST"
										},
										{
											"begin": 16437,
											"end": 16669,
											"name": "STOP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "JUMPDEST"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "AND"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "AND"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "AND"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP4"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP4"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "AND"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "JUMPDEST"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "MLOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP3"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ISZERO"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ISZERO"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ISZERO"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ISZERO"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "MSTORE"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "ADD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "MLOAD"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "DUP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP2"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SUB"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP1"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "RETURN"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "JUMPDEST"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "POP"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "JUMPDEST"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "MLOAD"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "DUP1"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "DUP3"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "AND"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "AND"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "MSTORE"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "ADD"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SWAP2"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "POP"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "POP"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "MLOAD"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "DUP1"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SWAP2"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SUB"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SWAP1"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "RETURN"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "POP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "MLOAD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP3"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "GT"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "ISZERO"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPI"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "INVALID"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "AND"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "MSTORE"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "ADD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "POP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "POP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "MLOAD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SUB"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "RETURN"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "AND"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "SWAP3"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "SWAP2"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "STOP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP2"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "ADD"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "AND"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "ADD"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP3"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP2"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "STOP"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "JUMPDEST"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "DUP2"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "ADD"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "SWAP1"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "AND"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "SWAP1"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "ADD"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "SWAP1"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "SWAP3"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "SWAP2"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "SWAP1"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "JUMPDEST"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "STOP"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "MLOAD"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DUP1"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DUP3"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "AND"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "AND"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "MSTORE"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "ADD"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP2"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "MLOAD"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DUP1"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP2"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SUB"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "RETURN"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMPDEST"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "POP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMPDEST"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "MLOAD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP3"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "POP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "POP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "MLOAD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SUB"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "RETURN"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "JUMPDEST"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "AND"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "AND"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "AND"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP4"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP4"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "JUMPDEST"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "MLOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP3"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "AND"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "AND"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "MSTORE"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "ADD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "MLOAD"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "DUP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP2"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SUB"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP1"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "RETURN"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "JUMPDEST"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP2"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "AND"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP3"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP2"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "AND"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP3"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP2"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "AND"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP3"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP2"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP3"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP2"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP3"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP4"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP2"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP3"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP4"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "DUP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "ADD"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP3"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP2"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "SWAP1"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "JUMPDEST"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "STOP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMPDEST"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP2"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "ADD"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "AND"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "ADD"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP3"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP2"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMPDEST"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "STOP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "JUMPDEST"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP2"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "AND"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP3"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP2"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "AND"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP3"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP2"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "AND"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP3"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP2"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP3"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP2"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP3"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP4"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP2"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP3"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP4"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "DUP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "ADD"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP3"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP2"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "SWAP1"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "JUMPDEST"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "STOP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "JUMPDEST"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP2"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ADD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ADD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP3"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ADD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP2"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP3"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP4"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP2"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP3"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP4"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "AND"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ADD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP3"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP2"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "JUMPDEST"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "MLOAD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP3"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ISZERO"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ISZERO"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ISZERO"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ISZERO"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP2"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "MSTORE"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "ADD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP2"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "MLOAD"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "DUP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP2"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SUB"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP1"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "RETURN"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "JUMPDEST"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "DUP1"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "DUP2"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "ADD"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "SWAP1"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "DUP1"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "DUP1"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "AND"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "SWAP1"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "ADD"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "SWAP1"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "SWAP3"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "SWAP2"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "SWAP1"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "JUMPDEST"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "STOP"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "JUMPDEST"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "POP"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "JUMPDEST"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "MLOAD"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "DUP1"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "DUP3"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "DUP2"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "MSTORE"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "ADD"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "SWAP2"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "POP"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "POP"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "MLOAD"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "DUP1"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "SWAP2"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "SUB"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "SWAP1"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "RETURN"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "JUMPDEST"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "JUMPDEST"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP3"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SUB"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP3"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP4"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP4"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "AND"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ISZERO"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "JUMPI"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP3"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SUB"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP4"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SUB"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "EXP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SUB"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "NOT"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "AND"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "JUMPDEST"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP3"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SUB"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "SWAP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "RETURN"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "JUMPDEST"
										},
										{
											"begin": 9484,
											"end": 9496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9356,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "DUP1"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "GT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPI"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "INVALID"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SLOAD"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "EXP"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DIV"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "AND"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "GT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPI"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "INVALID"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "LT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "JUMPI"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MLOAD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP3"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SUB"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP3"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "696E76616C696420636F6E747261637420737461747573000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MLOAD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SUB"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "REVERT"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "JUMPDEST"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "SWAP1"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "SLOAD"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "SWAP1"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "EXP"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "SWAP1"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "DIV"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "AND"
										},
										{
											"begin": 5850,
											"end": 5875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5875,
											"name": "AND"
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "CALLER"
										},
										{
											"begin": 5850,
											"end": 5875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5875,
											"name": "AND"
										},
										{
											"begin": 5850,
											"end": 5875,
											"name": "EQ"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "JUMPI"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "MLOAD"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP2"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "MSTORE"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "ADD"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP1"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP1"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "ADD"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP3"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP2"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "SUB"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP3"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "MSTORE"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP2"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "MSTORE"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "ADD"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP1"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH data",
											"value": "505DCBF77BAA9FCB931859D75EF58472FC43F433ECC69ABF910161910B72606C"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "SWAP2"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "CODECOPY"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "ADD"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "SWAP2"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "POP"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "POP"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "MLOAD"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "DUP1"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "SWAP2"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "SUB"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "SWAP1"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "REVERT"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5842,
											"end": 5915,
											"name": "JUMPDEST"
										},
										{
											"begin": 9401,
											"end": 9408,
											"name": "DUP7"
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5112,
											"name": "DUP3"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "AND"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "AND"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "DUP2"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "MSTORE"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "DUP2"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "MSTORE"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "KECCAK256"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "SLOAD"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "EXP"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "DIV"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5097,
											"end": 5113,
											"name": "AND"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "JUMPI"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "MLOAD"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "SUB"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "696E76616C6964206F7261636C65206164647265737300000000000000000000"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "SWAP2"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "MLOAD"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "SWAP2"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "SUB"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "REVERT"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5089,
											"end": 5140,
											"name": "JUMPDEST"
										},
										{
											"begin": 9440,
											"end": 9450,
											"name": "DUP7"
										},
										{
											"begin": 9440,
											"end": 9450,
											"name": "DUP7"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "SWAP2"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DIV"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "MUL"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "MLOAD"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "SWAP1"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP2"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "MSTORE"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP1"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "SWAP4"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "SWAP3"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "SWAP2"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "SWAP1"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP2"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP2"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "MSTORE"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "ADD"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP4"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "POP"
										},
										{
											"begin": 2927,
											"end": 3349,
											"name": "POP"
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "DUP11"
										},
										{
											"begin": 3007,
											"end": 3023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "DUP5"
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "ADD"
										},
										{
											"begin": 3154,
											"end": 3178,
											"name": "MLOAD"
										},
										{
											"begin": 3133,
											"end": 3216,
											"name": "AND"
										},
										{
											"begin": 3120,
											"end": 3216,
											"name": "SWAP1"
										},
										{
											"begin": 3120,
											"end": 3216,
											"name": "POP"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "EXP"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "DIV"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "EQ"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "JUMPI"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP3"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "SUB"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP3"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "696E76616C696420617373657420747970650000000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "SUB"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "REVERT"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 3235,
											"end": 3289,
											"name": "JUMPDEST"
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP4"
										},
										{
											"begin": 3325,
											"end": 3330,
											"name": "DUP4"
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "JUMPDEST"
										},
										{
											"begin": 8329,
											"end": 8337,
											"name": "PUSH",
											"value": "15180"
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "AND"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP8"
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "AND"
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "LT"
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "ISZERO"
										},
										{
											"begin": 9533,
											"end": 9603,
											"name": "DUP1"
										},
										{
											"begin": 9533,
											"end": 9603,
											"name": "ISZERO"
										},
										{
											"begin": 9533,
											"end": 9603,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 9533,
											"end": 9603,
											"name": "JUMPI"
										},
										{
											"begin": 9533,
											"end": 9603,
											"name": "POP"
										},
										{
											"begin": 8391,
											"end": 8398,
											"name": "PUSH",
											"value": "278D00"
										},
										{
											"begin": 9570,
											"end": 9603,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9603,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP8"
										},
										{
											"begin": 9570,
											"end": 9603,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9603,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9603,
											"name": "GT"
										},
										{
											"begin": 9570,
											"end": 9603,
											"name": "ISZERO"
										},
										{
											"begin": 9533,
											"end": 9603,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 9533,
											"end": 9603,
											"name": "JUMPDEST"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "JUMPI"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "MLOAD"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP2"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "MSTORE"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "ADD"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "ADD"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP3"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP2"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "SUB"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP3"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "MSTORE"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP2"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "MSTORE"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "ADD"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "6C6F636B2074696D65206F757473696465206C696D6974730000000000000000"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP2"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "MSTORE"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "POP"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "ADD"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "SWAP2"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "POP"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "POP"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "MLOAD"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "SWAP2"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "SUB"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "SWAP1"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "REVERT"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 9512,
											"end": 9653,
											"name": "JUMPDEST"
										},
										{
											"begin": 9663,
											"end": 9679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9786,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 9707,
											"end": 9712,
											"name": "DUP15"
										},
										{
											"begin": 9714,
											"end": 9723,
											"name": "DUP15"
										},
										{
											"begin": 9725,
											"end": 9732,
											"name": "DUP15"
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "DUP15"
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "DUP15"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "MLOAD"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "DUP1"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "DUP4"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 57,
											"end": 60,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 55,
											"name": "DUP4"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "SWAP3"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "POP"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "POP"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "POP"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "SWAP3"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "POP"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "POP"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "POP"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "MLOAD"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "DUP1"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "SWAP2"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "SUB"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "SWAP1"
										},
										{
											"begin": 9734,
											"end": 9755,
											"name": "KECCAK256"
										},
										{
											"begin": 9757,
											"end": 9776,
											"name": "DUP14"
										},
										{
											"begin": 9682,
											"end": 9693,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 9682,
											"end": 9786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9682,
											"end": 9786,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 9682,
											"end": 9786,
											"name": "JUMPDEST"
										},
										{
											"begin": 9663,
											"end": 9786,
											"name": "SWAP1"
										},
										{
											"begin": 9663,
											"end": 9786,
											"name": "POP"
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 9817,
											"end": 9825,
											"name": "DUP2"
										},
										{
											"begin": 9796,
											"end": 9816,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "JUMPDEST"
										},
										{
											"begin": 10274,
											"end": 10283,
											"name": "DUP8"
										},
										{
											"begin": 10255,
											"end": 10270,
											"name": "TIMESTAMP"
										},
										{
											"begin": 10248,
											"end": 10283,
											"name": "ADD"
										},
										{
											"begin": 10230,
											"end": 10235,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10244,
											"name": "DUP4"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "DUP2"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "MSTORE"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "ADD"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "SWAP1"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "DUP2"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "MSTORE"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "ADD"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "KECCAK256"
										},
										{
											"begin": 10230,
											"end": 10245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "EXP"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "DUP2"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "SLOAD"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "DUP2"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "MUL"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "NOT"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "AND"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "SWAP1"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "DUP4"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "AND"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "MUL"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "OR"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "SWAP1"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "SSTORE"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "POP"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 10331,
											"end": 10341,
											"name": "DUP12"
										},
										{
											"begin": 10331,
											"end": 10341,
											"name": "DUP12"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP1"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP1"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "ADD"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP1"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "SWAP2"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DIV"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "MUL"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "ADD"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "MLOAD"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "SWAP1"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP2"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "ADD"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "MSTORE"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP1"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "SWAP4"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "SWAP3"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "SWAP2"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "SWAP1"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP2"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP2"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "MSTORE"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "ADD"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP4"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "POP"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "POP"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "POP"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "POP"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "POP"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "POP"
										},
										{
											"begin": 10343,
											"end": 10348,
											"name": "DUP16"
										},
										{
											"begin": 10314,
											"end": 10330,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 10314,
											"end": 10349,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "JUMPI"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "MLOAD"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP2"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "MSTORE"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "ADD"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP1"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP1"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "ADD"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP3"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP2"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "SUB"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP3"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "MSTORE"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP2"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "MSTORE"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "ADD"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP1"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "657363726F77206C6F636B206661696C65640000000000000000000000000000"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP2"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "MSTORE"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "POP"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "ADD"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "SWAP2"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "POP"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "POP"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "MLOAD"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "DUP1"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "SWAP2"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "SUB"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "SWAP1"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "REVERT"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 10293,
											"end": 10393,
											"name": "JUMPDEST"
										},
										{
											"begin": 10416,
											"end": 10424,
											"name": "DUP1"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "PUSH",
											"value": "102D25C49D33FCDB8976A3F2744E0785C98D9E43B88364859E6AEC4AE82EFF5C"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "MLOAD"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "MLOAD"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "DUP1"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "SWAP2"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "SUB"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "SWAP1"
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "LOG2"
										},
										{
											"begin": 10442,
											"end": 10446,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10435,
											"end": 10446,
											"name": "SWAP7"
										},
										{
											"begin": 10435,
											"end": 10446,
											"name": "POP"
										},
										{
											"begin": 10435,
											"end": 10446,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "POP"
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP8"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "SWAP7"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "POP"
										},
										{
											"begin": 9101,
											"end": 10453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "JUMPDEST"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SWAP1"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SLOAD"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SWAP1"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "EXP"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "SWAP1"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "DIV"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "AND"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6000,
											"end": 6035,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SLOAD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "EXP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DIV"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "AND"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 5723,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5709,
											"end": 5720,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5709,
											"end": 5720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "EXP"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "SLOAD"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "MUL"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "NOT"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "AND"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "DUP4"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "AND"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "MUL"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "OR"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "SSTORE"
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "ADF20380D9033E7F11FC1856D69012AA18E03195A098CD38CE3BE225966968A8"
										},
										{
											"begin": 5768,
											"end": 5778,
											"name": "CALLER"
										},
										{
											"begin": 5780,
											"end": 5791,
											"name": "DUP3"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "MLOAD"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "DUP1"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "DUP4"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "AND"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "AND"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "DUP2"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "MSTORE"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "ADD"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "DUP3"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "AND"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "AND"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "DUP2"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "MSTORE"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "ADD"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "SWAP3"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "POP"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "POP"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "POP"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "MLOAD"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "DUP1"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "SWAP2"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "SUB"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "SWAP1"
										},
										{
											"begin": 5749,
											"end": 5792,
											"name": "LOG1"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5634,
											"end": 5799,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "E1377AA21D49FA10BB9ECE6A0CD4F75597A90A80C3750F7F7674967F49AB9A62"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SLOAD"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "EXP"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "DIV"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "AND"
										},
										{
											"begin": 4511,
											"end": 4518,
											"name": "DUP3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MLOAD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP1"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP4"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "GT"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPI"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "INVALID"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "AND"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MSTORE"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ADD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "GT"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPI"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "INVALID"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "AND"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MSTORE"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ADD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SWAP3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MLOAD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP1"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SWAP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SUB"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SWAP1"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "LOG1"
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "EXP"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SLOAD"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "MUL"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "NOT"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "AND"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP4"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "GT"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "JUMPI"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "INVALID"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "MUL"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "OR"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SSTORE"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 5026,
											"end": 5031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5014,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP4"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "AND"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "AND"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "DUP2"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "MSTORE"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "ADD"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "SWAP1"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "DUP2"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "MSTORE"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "ADD"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "KECCAK256"
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "EXP"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "DUP2"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "SLOAD"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "DUP2"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "MUL"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "NOT"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "AND"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "SWAP1"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "DUP4"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "ISZERO"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "ISZERO"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "MUL"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "OR"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "SWAP1"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "SSTORE"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 5038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SLOAD"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "EXP"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DIV"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "AND"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMPDEST"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SLOAD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "EXP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DIV"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "JUMPDEST"
										},
										{
											"begin": 13323,
											"end": 13336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13364,
											"name": "DUP1"
										},
										{
											"begin": 13367,
											"end": 13471,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "DUP9"
										},
										{
											"begin": 13399,
											"end": 13408,
											"name": "DUP9"
										},
										{
											"begin": 13410,
											"end": 13417,
											"name": "DUP9"
										},
										{
											"begin": 13429,
											"end": 13439,
											"name": "DUP9"
										},
										{
											"begin": 13429,
											"end": 13439,
											"name": "DUP9"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "MLOAD"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "DUP1"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "DUP4"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 57,
											"end": 60,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 55,
											"name": "DUP4"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "SWAP3"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "POP"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "POP"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "POP"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "SWAP3"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "POP"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "POP"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "POP"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "MLOAD"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "DUP1"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "SWAP2"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "SUB"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "SWAP1"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "KECCAK256"
										},
										{
											"begin": 13442,
											"end": 13461,
											"name": "DUP8"
										},
										{
											"begin": 13367,
											"end": 13378,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 13367,
											"end": 13471,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13367,
											"end": 13471,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 13367,
											"end": 13471,
											"name": "JUMPDEST"
										},
										{
											"begin": 13348,
											"end": 13471,
											"name": "SWAP1"
										},
										{
											"begin": 13348,
											"end": 13471,
											"name": "POP"
										},
										{
											"begin": 13488,
											"end": 13493,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13494,
											"end": 13502,
											"name": "DUP3"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "DUP2"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "MSTORE"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "ADD"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "DUP2"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "MSTORE"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "ADD"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "KECCAK256"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "SLOAD"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "EXP"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "DIV"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13488,
											"end": 13503,
											"name": "AND"
										},
										{
											"begin": 13481,
											"end": 13503,
											"name": "SWAP2"
										},
										{
											"begin": 13481,
											"end": 13503,
											"name": "POP"
										},
										{
											"begin": 13481,
											"end": 13503,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP7"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "SWAP6"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "POP"
										},
										{
											"begin": 13124,
											"end": 13510,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "JUMPDEST"
										},
										{
											"begin": 11114,
											"end": 11134,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "DUP1"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "GT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPI"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "INVALID"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SLOAD"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "EXP"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DIV"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "AND"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "GT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPI"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "INVALID"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "LT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "JUMPI"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MLOAD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP3"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SUB"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP3"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "696E76616C696420636F6E747261637420737461747573000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MLOAD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SUB"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "REVERT"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "JUMPDEST"
										},
										{
											"begin": 11153,
											"end": 11158,
											"name": "DUP7"
										},
										{
											"begin": 11160,
											"end": 11167,
											"name": "DUP6"
										},
										{
											"begin": 5267,
											"end": 5272,
											"name": "DUP2"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "AND"
										},
										{
											"begin": 5253,
											"end": 5263,
											"name": "CALLER"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "AND"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "EQ"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "DUP1"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "JUMPI"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "POP"
										},
										{
											"begin": 5291,
											"end": 5298,
											"name": "DUP1"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "AND"
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "CALLER"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "AND"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "EQ"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "DUP1"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "ISZERO"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "JUMPI"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "POP"
										},
										{
											"begin": 5302,
											"end": 5309,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "CALLER"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "AND"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "AND"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "DUP2"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "MSTORE"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "ADD"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "DUP2"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "MSTORE"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "ADD"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "KECCAK256"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SLOAD"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "EXP"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "DIV"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "AND"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "JUMPDEST"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "JUMPDEST"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "JUMPI"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MLOAD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MSTORE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP3"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SUB"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP3"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MSTORE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MSTORE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH data",
											"value": "8889CDF9502051F6182111D178AAD396861A3FF01E10CBD6B8663BFD3219A4FE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "CODECOPY"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "POP"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "POP"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MLOAD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SUB"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "REVERT"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "JUMPDEST"
										},
										{
											"begin": 11179,
											"end": 11195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11198,
											"end": 11302,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 11223,
											"end": 11228,
											"name": "DUP11"
										},
										{
											"begin": 11230,
											"end": 11239,
											"name": "DUP11"
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "DUP11"
										},
										{
											"begin": 11260,
											"end": 11270,
											"name": "DUP11"
										},
										{
											"begin": 11260,
											"end": 11270,
											"name": "DUP11"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "MLOAD"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "DUP1"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "DUP4"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 57,
											"end": 60,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 55,
											"name": "DUP4"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "SWAP3"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "POP"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "POP"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "POP"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "SWAP3"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "POP"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "POP"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "POP"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "MLOAD"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "DUP1"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "SWAP2"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "SUB"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "SWAP1"
										},
										{
											"begin": 11250,
											"end": 11271,
											"name": "KECCAK256"
										},
										{
											"begin": 11273,
											"end": 11292,
											"name": "DUP10"
										},
										{
											"begin": 11198,
											"end": 11209,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 11198,
											"end": 11302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11198,
											"end": 11302,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 11198,
											"end": 11302,
											"name": "JUMPDEST"
										},
										{
											"begin": 11179,
											"end": 11302,
											"name": "SWAP1"
										},
										{
											"begin": 11179,
											"end": 11302,
											"name": "POP"
										},
										{
											"begin": 11312,
											"end": 11340,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11331,
											"end": 11339,
											"name": "DUP2"
										},
										{
											"begin": 11312,
											"end": 11330,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11312,
											"end": 11340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11340,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11312,
											"end": 11340,
											"name": "JUMPDEST"
										},
										{
											"begin": 11448,
											"end": 11449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11430,
											"end": 11435,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11436,
											"end": 11444,
											"name": "DUP4"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "DUP2"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "MSTORE"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "ADD"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "SWAP1"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "DUP2"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "MSTORE"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "ADD"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "KECCAK256"
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "EXP"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "DUP2"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "SLOAD"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "DUP2"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "MUL"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "NOT"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "AND"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "SWAP1"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "DUP4"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "AND"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "MUL"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "OR"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "SWAP1"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "SSTORE"
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "POP"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 11500,
											"end": 11510,
											"name": "DUP8"
										},
										{
											"begin": 11500,
											"end": 11510,
											"name": "DUP8"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP1"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP1"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "ADD"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP1"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "SWAP2"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DIV"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "MUL"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "ADD"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "MLOAD"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "SWAP1"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP2"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "ADD"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "MSTORE"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP1"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "SWAP4"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "SWAP3"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "SWAP2"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "SWAP1"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP2"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP2"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "MSTORE"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "ADD"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP4"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "POP"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "POP"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "POP"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "POP"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "POP"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "POP"
										},
										{
											"begin": 11512,
											"end": 11521,
											"name": "DUP11"
										},
										{
											"begin": 11480,
											"end": 11499,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 11480,
											"end": 11522,
											"name": "JUMPDEST"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "JUMPI"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "MLOAD"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP2"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "MSTORE"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "ADD"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP1"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP1"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "ADD"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP3"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP2"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "SUB"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP3"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "MSTORE"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP2"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "MSTORE"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "ADD"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP1"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "61737365742072656C65617365206661696C6564000000000000000000000000"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP2"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "MSTORE"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "POP"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "ADD"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "SWAP2"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "POP"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "POP"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "MLOAD"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "DUP1"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "SWAP2"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "SUB"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "SWAP1"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "REVERT"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 11459,
											"end": 11568,
											"name": "JUMPDEST"
										},
										{
											"begin": 11596,
											"end": 11601,
											"name": "DUP10"
										},
										{
											"begin": 11582,
											"end": 11601,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11601,
											"name": "AND"
										},
										{
											"begin": 11582,
											"end": 11592,
											"name": "CALLER"
										},
										{
											"begin": 11582,
											"end": 11601,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11601,
											"name": "AND"
										},
										{
											"begin": 11582,
											"end": 11601,
											"name": "EQ"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "ISZERO"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "JUMPI"
										},
										{
											"begin": 11635,
											"end": 11643,
											"name": "DUP1"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"value": "789952A21900CBA4809507B4BA56618CEE6A1E748254F8FAAB21E9B8F1C60BC9"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MLOAD"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "MLOAD"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "DUP1"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP2"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SUB"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "SWAP1"
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "LOG2"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "JUMP"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "JUMPDEST"
										},
										{
											"begin": 11689,
											"end": 11697,
											"name": "DUP1"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "PUSH",
											"value": "6EEC2DD2382427616D4EA7EF183B16091FEAC4E2E63C8B55F25215F132DF8D14"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "MLOAD"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "MLOAD"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "DUP1"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "SWAP2"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "SUB"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "SWAP1"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "LOG2"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 11578,
											"end": 11709,
											"name": "JUMPDEST"
										},
										{
											"begin": 5399,
											"end": 5400,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "POP"
										},
										{
											"begin": 10913,
											"end": 11715,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "EXP"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP2"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SLOAD"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP2"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "MUL"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "NOT"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "AND"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP4"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "AND"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "MUL"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "OR"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SSTORE"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 4142,
											"end": 4152,
											"name": "CALLER"
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP3"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MLOAD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP1"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP4"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP2"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MSTORE"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "ADD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP3"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP2"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MSTORE"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "ADD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SWAP3"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MLOAD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP1"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SWAP2"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SUB"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SWAP1"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "LOG1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "JUMPDEST"
										},
										{
											"begin": 12246,
											"end": 12264,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "DUP1"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "GT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPI"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "INVALID"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SLOAD"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "EXP"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DIV"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "AND"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "GT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPI"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "INVALID"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "LT"
										},
										{
											"begin": 4615,
											"end": 4632,
											"name": "ISZERO"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "JUMPI"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MLOAD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP3"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SUB"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP3"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "696E76616C696420636F6E747261637420737461747573000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "MLOAD"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "DUP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP2"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SUB"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "REVERT"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 4607,
											"end": 4660,
											"name": "JUMPDEST"
										},
										{
											"begin": 12283,
											"end": 12288,
											"name": "DUP7"
										},
										{
											"begin": 12290,
											"end": 12297,
											"name": "DUP6"
										},
										{
											"begin": 5267,
											"end": 5272,
											"name": "DUP2"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "AND"
										},
										{
											"begin": 5253,
											"end": 5263,
											"name": "CALLER"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "AND"
										},
										{
											"begin": 5253,
											"end": 5272,
											"name": "EQ"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "DUP1"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "JUMPI"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "POP"
										},
										{
											"begin": 5291,
											"end": 5298,
											"name": "DUP1"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "AND"
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "CALLER"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "AND"
										},
										{
											"begin": 5277,
											"end": 5298,
											"name": "EQ"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "DUP1"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "ISZERO"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "JUMPI"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "POP"
										},
										{
											"begin": 5302,
											"end": 5309,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "CALLER"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "AND"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "AND"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "DUP2"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "MSTORE"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "ADD"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "DUP2"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "MSTORE"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "ADD"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "KECCAK256"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SLOAD"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "EXP"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "DIV"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "AND"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5277,
											"end": 5321,
											"name": "JUMPDEST"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5253,
											"end": 5322,
											"name": "JUMPDEST"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "JUMPI"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MLOAD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MSTORE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP3"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SUB"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP3"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MSTORE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MSTORE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH data",
											"value": "8889CDF9502051F6182111D178AAD396861A3FF01E10CBD6B8663BFD3219A4FE"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "CODECOPY"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "ADD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "POP"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "POP"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "MLOAD"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "DUP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP2"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SUB"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "SWAP1"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "REVERT"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 5232,
											"end": 5389,
											"name": "JUMPDEST"
										},
										{
											"begin": 12309,
											"end": 12325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12328,
											"end": 12432,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 12353,
											"end": 12358,
											"name": "DUP11"
										},
										{
											"begin": 12360,
											"end": 12369,
											"name": "DUP11"
										},
										{
											"begin": 12371,
											"end": 12378,
											"name": "DUP11"
										},
										{
											"begin": 12390,
											"end": 12400,
											"name": "DUP11"
										},
										{
											"begin": 12390,
											"end": 12400,
											"name": "DUP11"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "MLOAD"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "DUP1"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "DUP4"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 57,
											"end": 60,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 55,
											"name": "DUP4"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "SWAP3"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "POP"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "POP"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "POP"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "SWAP3"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "POP"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "POP"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "POP"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "MLOAD"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "DUP1"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "SWAP2"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "SUB"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "SWAP1"
										},
										{
											"begin": 12380,
											"end": 12401,
											"name": "KECCAK256"
										},
										{
											"begin": 12403,
											"end": 12422,
											"name": "DUP10"
										},
										{
											"begin": 12328,
											"end": 12339,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 12328,
											"end": 12432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12328,
											"end": 12432,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 12328,
											"end": 12432,
											"name": "JUMPDEST"
										},
										{
											"begin": 12309,
											"end": 12432,
											"name": "SWAP1"
										},
										{
											"begin": 12309,
											"end": 12432,
											"name": "POP"
										},
										{
											"begin": 12442,
											"end": 12470,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 12461,
											"end": 12469,
											"name": "DUP2"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 12442,
											"end": 12470,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12442,
											"end": 12470,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 12442,
											"end": 12470,
											"name": "JUMPDEST"
										},
										{
											"begin": 12578,
											"end": 12579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12560,
											"end": 12565,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12574,
											"name": "DUP4"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "DUP2"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "MSTORE"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "ADD"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "SWAP1"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "DUP2"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "MSTORE"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "ADD"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "KECCAK256"
										},
										{
											"begin": 12560,
											"end": 12575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "EXP"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "DUP2"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "SLOAD"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "DUP2"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "MUL"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "NOT"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "AND"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "SWAP1"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "DUP4"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "AND"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "MUL"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "OR"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "SWAP1"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "SSTORE"
										},
										{
											"begin": 12560,
											"end": 12579,
											"name": "POP"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 12627,
											"end": 12637,
											"name": "DUP8"
										},
										{
											"begin": 12627,
											"end": 12637,
											"name": "DUP8"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "ADD"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "SWAP2"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DIV"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "MUL"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "ADD"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "MLOAD"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "SWAP1"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP2"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "ADD"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "MSTORE"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "SWAP4"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "SWAP3"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "SWAP2"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "SWAP1"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP2"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP2"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "MSTORE"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "ADD"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP4"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12639,
											"end": 12644,
											"name": "DUP12"
										},
										{
											"begin": 12610,
											"end": 12626,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 12610,
											"end": 12645,
											"name": "JUMPDEST"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "JUMPI"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "MLOAD"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP2"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "MSTORE"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "ADD"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP1"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP1"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "ADD"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP3"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP2"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "SUB"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP3"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "MSTORE"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP2"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "MSTORE"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "ADD"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP1"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "61737365742072657475726E206661696C656400000000000000000000000000"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP2"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "MSTORE"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "POP"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "ADD"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "SWAP2"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "POP"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "POP"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "MLOAD"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "DUP1"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "SWAP2"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "SUB"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "SWAP1"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "REVERT"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 12589,
											"end": 12690,
											"name": "JUMPDEST"
										},
										{
											"begin": 12718,
											"end": 12723,
											"name": "DUP10"
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "AND"
										},
										{
											"begin": 12704,
											"end": 12714,
											"name": "CALLER"
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "AND"
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "EQ"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "ISZERO"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "JUMPI"
										},
										{
											"begin": 12757,
											"end": 12765,
											"name": "DUP1"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "PUSH",
											"value": "7B5AC55826E0CA40C3F69722D916FB9962D86CFFCDDC9C84D082B712419E5CBD"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "MLOAD"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "MLOAD"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "DUP1"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "SWAP2"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "SUB"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "SWAP1"
										},
										{
											"begin": 12744,
											"end": 12766,
											"name": "LOG2"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "JUMP"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "JUMPDEST"
										},
										{
											"begin": 12811,
											"end": 12819,
											"name": "DUP1"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "PUSH",
											"value": "C99795D9DC9D68F27B21E122A0E663F689138F9110DEE0122FC2980F8D579775"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "MLOAD"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "MLOAD"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "DUP1"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "SWAP2"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "SUB"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "SWAP1"
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "LOG2"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 12700,
											"end": 12831,
											"name": "JUMPDEST"
										},
										{
											"begin": 5399,
											"end": 5400,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "POP"
										},
										{
											"begin": 12041,
											"end": 12837,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "JUMPDEST"
										},
										{
											"begin": 15888,
											"end": 15900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 15912,
											"end": 15924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15927,
											"end": 15942,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15927,
											"end": 15942,
											"name": "SLOAD"
										},
										{
											"begin": 15912,
											"end": 15942,
											"name": "SWAP1"
										},
										{
											"begin": 15912,
											"end": 15942,
											"name": "POP"
										},
										{
											"begin": 15970,
											"end": 15971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15967,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "DUP2"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "SWAP1"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "SSTORE"
										},
										{
											"begin": 15952,
											"end": 15971,
											"name": "POP"
										},
										{
											"begin": 15981,
											"end": 15984,
											"name": "DUP3"
										},
										{
											"begin": 15981,
											"end": 15993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15981,
											"end": 15993,
											"name": "AND"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 15994,
											"end": 15998,
											"name": "DUP3"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "SWAP1"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "DUP2"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "ISZERO"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "MUL"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "SWAP1"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "MLOAD"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "MLOAD"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "DUP1"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "DUP4"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "SUB"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "DUP2"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "DUP6"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "DUP9"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "DUP9"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "CALL"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "SWAP4"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "POP"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "POP"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "POP"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "POP"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "POP"
										},
										{
											"begin": 16016,
											"end": 16020,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16009,
											"end": 16020,
											"name": "SWAP2"
										},
										{
											"begin": 16009,
											"end": 16020,
											"name": "POP"
										},
										{
											"begin": 16009,
											"end": 16020,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP4"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "SWAP3"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "POP"
										},
										{
											"begin": 15765,
											"end": 16027,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 4922,
											"end": 4926,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4903,
											"end": 4910,
											"name": "DUP1"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4918,
											"name": "DUP4"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "AND"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "AND"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "DUP2"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "MSTORE"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "ADD"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "SWAP1"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "DUP2"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "MSTORE"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "ADD"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "KECCAK256"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "EXP"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "DUP2"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "SLOAD"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "DUP2"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "MUL"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "NOT"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "AND"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "DUP4"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "ISZERO"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "ISZERO"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "MUL"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "OR"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "SSTORE"
										},
										{
											"begin": 4903,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "POP"
										},
										{
											"begin": 4834,
											"end": 4933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "JUMPDEST"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "SLOAD"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "DUP2"
										},
										{
											"begin": 6041,
											"end": 6068,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "JUMPDEST"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MLOAD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP1"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "ADD"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "PUSH",
											"value": "302E352E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "MSTORE"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "POP"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "DUP2"
										},
										{
											"begin": 8070,
											"end": 8110,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16255,
											"end": 16432,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 16255,
											"end": 16432,
											"name": "JUMPDEST"
										},
										{
											"begin": 14779,
											"end": 14781,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 16354,
											"end": 16395,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 16354,
											"end": 16395,
											"name": "AND"
										},
										{
											"begin": 16354,
											"end": 16363,
											"name": "DUP3"
										},
										{
											"begin": 16354,
											"end": 16370,
											"name": "MLOAD"
										},
										{
											"begin": 16354,
											"end": 16395,
											"name": "EQ"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "JUMPI"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "MLOAD"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP1"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP1"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP3"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "SUB"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP3"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP1"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "696E76616C69642061737365742064617461206C656E67746800000000000000"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "SWAP2"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "MLOAD"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "DUP1"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "SWAP2"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "SUB"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "SWAP1"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "REVERT"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 16346,
											"end": 16425,
											"name": "JUMPDEST"
										},
										{
											"begin": 16255,
											"end": 16432,
											"name": "POP"
										},
										{
											"begin": 16255,
											"end": 16432,
											"name": "POP"
										},
										{
											"begin": 16255,
											"end": 16432,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "JUMPDEST"
										},
										{
											"begin": 13808,
											"end": 13815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13891,
											"end": 13896,
											"name": "DUP6"
										},
										{
											"begin": 13898,
											"end": 13907,
											"name": "DUP6"
										},
										{
											"begin": 13909,
											"end": 13916,
											"name": "DUP6"
										},
										{
											"begin": 13918,
											"end": 13927,
											"name": "DUP6"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "DUP6"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MLOAD"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "ADD"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP1"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP7"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "AND"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "AND"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "SHL"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP2"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MSTORE"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "ADD"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP6"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "AND"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "AND"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "SHL"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP2"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MSTORE"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "ADD"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP5"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "AND"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "AND"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "SHL"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP2"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MSTORE"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "ADD"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP4"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP2"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MSTORE"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "ADD"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP3"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "DUP2"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MSTORE"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "ADD"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "SWAP6"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "POP"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "POP"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "POP"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "POP"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "POP"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "POP"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "SWAP1"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13857,
											"end": 13962,
											"name": "MSTORE"
										},
										{
											"begin": 13834,
											"end": 13972,
											"name": "DUP1"
										},
										{
											"begin": 13834,
											"end": 13972,
											"name": "MLOAD"
										},
										{
											"begin": 13834,
											"end": 13972,
											"name": "SWAP1"
										},
										{
											"begin": 13834,
											"end": 13972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13834,
											"end": 13972,
											"name": "ADD"
										},
										{
											"begin": 13834,
											"end": 13972,
											"name": "KECCAK256"
										},
										{
											"begin": 13827,
											"end": 13972,
											"name": "SWAP1"
										},
										{
											"begin": 13827,
											"end": 13972,
											"name": "POP"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "SWAP6"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "SWAP5"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "POP"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "POP"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "POP"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "POP"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "POP"
										},
										{
											"begin": 13619,
											"end": 13979,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13985,
											"end": 14150,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 13985,
											"end": 14150,
											"name": "JUMPDEST"
										},
										{
											"begin": 14097,
											"end": 14098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14078,
											"end": 14083,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14084,
											"end": 14092,
											"name": "DUP4"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "DUP2"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "MSTORE"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "DUP2"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "MSTORE"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "KECCAK256"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "SLOAD"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "EXP"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "DIV"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "AND"
										},
										{
											"begin": 14078,
											"end": 14098,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14078,
											"end": 14098,
											"name": "AND"
										},
										{
											"begin": 14078,
											"end": 14098,
											"name": "EQ"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "JUMPI"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "MLOAD"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP2"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "MSTORE"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "ADD"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP1"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP1"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "ADD"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP3"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP2"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "SUB"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP3"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "MSTORE"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP2"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "MSTORE"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "ADD"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP1"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "7377617020616C72656164792065786973747300000000000000000000000000"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP2"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "MSTORE"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "POP"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "ADD"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "SWAP2"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "POP"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "POP"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "MLOAD"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "DUP1"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "SWAP2"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "SUB"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "SWAP1"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "REVERT"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 14057,
											"end": 14143,
											"name": "JUMPDEST"
										},
										{
											"begin": 13985,
											"end": 14150,
											"name": "POP"
										},
										{
											"begin": 13985,
											"end": 14150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7210,
											"end": 7409,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 7210,
											"end": 7409,
											"name": "JUMPDEST"
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7402,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 7384,
											"end": 7393,
											"name": "DUP5"
										},
										{
											"begin": 7367,
											"end": 7383,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 7367,
											"end": 7394,
											"name": "JUMPDEST"
										},
										{
											"begin": 7396,
											"end": 7401,
											"name": "DUP4"
										},
										{
											"begin": 7354,
											"end": 7366,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 7354,
											"end": 7402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7354,
											"end": 7402,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 7354,
											"end": 7402,
											"name": "JUMPDEST"
										},
										{
											"begin": 7347,
											"end": 7402,
											"name": "SWAP1"
										},
										{
											"begin": 7347,
											"end": 7402,
											"name": "POP"
										},
										{
											"begin": 7210,
											"end": 7409,
											"name": "SWAP3"
										},
										{
											"begin": 7210,
											"end": 7409,
											"name": "SWAP2"
										},
										{
											"begin": 7210,
											"end": 7409,
											"name": "POP"
										},
										{
											"begin": 7210,
											"end": 7409,
											"name": "POP"
										},
										{
											"begin": 7210,
											"end": 7409,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14156,
											"end": 14330,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 14156,
											"end": 14330,
											"name": "JUMPDEST"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH",
											"value": "3B9ACA00"
										},
										{
											"begin": 14247,
											"end": 14285,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14247,
											"end": 14285,
											"name": "AND"
										},
										{
											"begin": 14247,
											"end": 14252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14253,
											"end": 14261,
											"name": "DUP4"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "DUP2"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "MSTORE"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "ADD"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "SWAP1"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "DUP2"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "MSTORE"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "ADD"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "KECCAK256"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "SWAP1"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "SLOAD"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "SWAP1"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "EXP"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "SWAP1"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "DIV"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "AND"
										},
										{
											"begin": 14247,
											"end": 14285,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14247,
											"end": 14285,
											"name": "AND"
										},
										{
											"begin": 14247,
											"end": 14285,
											"name": "GT"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "JUMPI"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "MLOAD"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP1"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP1"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP3"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "SUB"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP3"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP1"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "7377617020696E76616C69640000000000000000000000000000000000000000"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "MSTORE"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "POP"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "ADD"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "SWAP2"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "POP"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "POP"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "MLOAD"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "DUP1"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "SWAP2"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "SUB"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "SWAP1"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "REVERT"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 14226,
											"end": 14323,
											"name": "JUMPDEST"
										},
										{
											"begin": 14156,
											"end": 14330,
											"name": "POP"
										},
										{
											"begin": 14156,
											"end": 14330,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7627,
											"end": 7905,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 7627,
											"end": 7905,
											"name": "JUMPDEST"
										},
										{
											"begin": 7741,
											"end": 7753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7776,
											"name": "DUP1"
										},
										{
											"begin": 7779,
											"end": 7829,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 7792,
											"end": 7801,
											"name": "DUP5"
										},
										{
											"begin": 7803,
											"end": 7823,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 7813,
											"end": 7822,
											"name": "DUP7"
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 7803,
											"end": 7823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7803,
											"end": 7823,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 7803,
											"end": 7823,
											"name": "JUMPDEST"
										},
										{
											"begin": 7825,
											"end": 7828,
											"name": "DUP6"
										},
										{
											"begin": 7779,
											"end": 7791,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 7779,
											"end": 7829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7779,
											"end": 7829,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 7779,
											"end": 7829,
											"name": "JUMPDEST"
										},
										{
											"begin": 7765,
											"end": 7829,
											"name": "SWAP1"
										},
										{
											"begin": 7765,
											"end": 7829,
											"name": "POP"
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP1"
										},
										{
											"begin": 7839,
											"end": 7875,
											"name": "ISZERO"
										},
										{
											"begin": 7839,
											"end": 7875,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 7839,
											"end": 7875,
											"name": "JUMPI"
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 7865,
											"end": 7874,
											"name": "DUP5"
										},
										{
											"begin": 7851,
											"end": 7864,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "JUMPDEST"
										},
										{
											"begin": 7839,
											"end": 7875,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 7839,
											"end": 7875,
											"name": "JUMPDEST"
										},
										{
											"begin": 7892,
											"end": 7898,
											"name": "DUP1"
										},
										{
											"begin": 7885,
											"end": 7898,
											"name": "SWAP2"
										},
										{
											"begin": 7885,
											"end": 7898,
											"name": "POP"
										},
										{
											"begin": 7885,
											"end": 7898,
											"name": "POP"
										},
										{
											"begin": 7627,
											"end": 7905,
											"name": "SWAP3"
										},
										{
											"begin": 7627,
											"end": 7905,
											"name": "SWAP2"
										},
										{
											"begin": 7627,
											"end": 7905,
											"name": "POP"
										},
										{
											"begin": 7627,
											"end": 7905,
											"name": "POP"
										},
										{
											"begin": 7627,
											"end": 7905,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14336,
											"end": 14628,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 14336,
											"end": 14628,
											"name": "JUMPDEST"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH",
											"value": "3B9ACA00"
										},
										{
											"begin": 14493,
											"end": 14531,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14493,
											"end": 14531,
											"name": "AND"
										},
										{
											"begin": 14493,
											"end": 14498,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14499,
											"end": 14507,
											"name": "DUP4"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "DUP2"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "MSTORE"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "ADD"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "SWAP1"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "DUP2"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "MSTORE"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "ADD"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "KECCAK256"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "SWAP1"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "SLOAD"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "SWAP1"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "EXP"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "SWAP1"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "DIV"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14493,
											"end": 14508,
											"name": "AND"
										},
										{
											"begin": 14493,
											"end": 14531,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14493,
											"end": 14531,
											"name": "AND"
										},
										{
											"begin": 14493,
											"end": 14531,
											"name": "GT"
										},
										{
											"begin": 14493,
											"end": 14568,
											"name": "DUP1"
										},
										{
											"begin": 14493,
											"end": 14568,
											"name": "ISZERO"
										},
										{
											"begin": 14493,
											"end": 14568,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 14493,
											"end": 14568,
											"name": "JUMPI"
										},
										{
											"begin": 14493,
											"end": 14568,
											"name": "POP"
										},
										{
											"begin": 14553,
											"end": 14558,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14567,
											"name": "DUP3"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "DUP2"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "MSTORE"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "ADD"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "SWAP1"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "DUP2"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "MSTORE"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "ADD"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "KECCAK256"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "SWAP1"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "SLOAD"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "SWAP1"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "EXP"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "SWAP1"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "DIV"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14553,
											"end": 14568,
											"name": "AND"
										},
										{
											"begin": 14535,
											"end": 14568,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14535,
											"end": 14568,
											"name": "AND"
										},
										{
											"begin": 14535,
											"end": 14550,
											"name": "TIMESTAMP"
										},
										{
											"begin": 14535,
											"end": 14568,
											"name": "GT"
										},
										{
											"begin": 14493,
											"end": 14568,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 14493,
											"end": 14568,
											"name": "JUMPDEST"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "JUMPI"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "MLOAD"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP2"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "MSTORE"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "ADD"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP1"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP1"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "ADD"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP3"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP2"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "SUB"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP3"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "MSTORE"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP2"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "MSTORE"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "ADD"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP1"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "73776170206E6F742065787069726564206F7220696E76616C69640000000000"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP2"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "MSTORE"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "POP"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "ADD"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "SWAP2"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "POP"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "POP"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "MLOAD"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "DUP1"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "SWAP2"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "SUB"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "SWAP1"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "REVERT"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 14406,
											"end": 14621,
											"name": "JUMPDEST"
										},
										{
											"begin": 14336,
											"end": 14628,
											"name": "POP"
										},
										{
											"begin": 14336,
											"end": 14628,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7415,
											"end": 7621,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 7415,
											"end": 7621,
											"name": "JUMPDEST"
										},
										{
											"begin": 7526,
											"end": 7538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7614,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "DUP4"
										},
										{
											"begin": 7581,
											"end": 7608,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "DUP6"
										},
										{
											"begin": 7581,
											"end": 7597,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 7581,
											"end": 7608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7581,
											"end": 7608,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 7581,
											"end": 7608,
											"name": "JUMPDEST"
										},
										{
											"begin": 7610,
											"end": 7613,
											"name": "DUP5"
										},
										{
											"begin": 7557,
											"end": 7569,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 7557,
											"end": 7614,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7557,
											"end": 7614,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 7557,
											"end": 7614,
											"name": "JUMPDEST"
										},
										{
											"begin": 7550,
											"end": 7614,
											"name": "SWAP1"
										},
										{
											"begin": 7550,
											"end": 7614,
											"name": "POP"
										},
										{
											"begin": 7415,
											"end": 7621,
											"name": "SWAP3"
										},
										{
											"begin": 7415,
											"end": 7621,
											"name": "SWAP2"
										},
										{
											"begin": 7415,
											"end": 7621,
											"name": "POP"
										},
										{
											"begin": 7415,
											"end": 7621,
											"name": "POP"
										},
										{
											"begin": 7415,
											"end": 7621,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7016,
											"end": 7204,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 7016,
											"end": 7204,
											"name": "JUMPDEST"
										},
										{
											"begin": 7089,
											"end": 7096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "DUP1"
										},
										{
											"begin": 7129,
											"end": 7149,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 7139,
											"end": 7148,
											"name": "DUP4"
										},
										{
											"begin": 7129,
											"end": 7138,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 7129,
											"end": 7149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7129,
											"end": 7149,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 7129,
											"end": 7149,
											"name": "JUMPDEST"
										},
										{
											"begin": 7108,
											"end": 7149,
											"name": "SWAP1"
										},
										{
											"begin": 7108,
											"end": 7149,
											"name": "POP"
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 7186,
											"end": 7196,
											"name": "DUP2"
										},
										{
											"begin": 7179,
											"end": 7185,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "JUMPDEST"
										},
										{
											"begin": 7166,
											"end": 7176,
											"name": "DUP2"
										},
										{
											"begin": 7166,
											"end": 7197,
											"name": "ADD"
										},
										{
											"begin": 7159,
											"end": 7197,
											"name": "SWAP2"
										},
										{
											"begin": 7159,
											"end": 7197,
											"name": "POP"
										},
										{
											"begin": 7159,
											"end": 7197,
											"name": "POP"
										},
										{
											"begin": 7016,
											"end": 7204,
											"name": "SWAP2"
										},
										{
											"begin": 7016,
											"end": 7204,
											"name": "SWAP1"
										},
										{
											"begin": 7016,
											"end": 7204,
											"name": "POP"
										},
										{
											"begin": 7016,
											"end": 7204,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2039,
											"end": 2233,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 2039,
											"end": 2233,
											"name": "JUMPDEST"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP2"
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "AND"
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "PUSH",
											"value": "81FD3F0B"
										},
										{
											"begin": 2219,
											"end": 2225,
											"name": "DUP5"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "MLOAD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP3"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "AND"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SHL"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "MSTORE"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "ADD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP3"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "MSTORE"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "ADD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SWAP2"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "MLOAD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP4"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SUB"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP8"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "GAS"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "CALL"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "MLOAD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "ADD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "DUP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "MLOAD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "ADD"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SWAP3"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SWAP2"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2171,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2164,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2164,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2039,
											"end": 2233,
											"name": "SWAP3"
										},
										{
											"begin": 2039,
											"end": 2233,
											"name": "SWAP2"
										},
										{
											"begin": 2039,
											"end": 2233,
											"name": "POP"
										},
										{
											"begin": 2039,
											"end": 2233,
											"name": "POP"
										},
										{
											"begin": 2039,
											"end": 2233,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15156,
											"end": 15386,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 15156,
											"end": 15386,
											"name": "JUMPDEST"
										},
										{
											"begin": 15222,
											"end": 15236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15366,
											"end": 15368,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 15355,
											"end": 15364,
											"name": "DUP3"
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "ADD"
										},
										{
											"begin": 15345,
											"end": 15370,
											"name": "MLOAD"
										},
										{
											"begin": 15335,
											"end": 15370,
											"name": "SWAP1"
										},
										{
											"begin": 15335,
											"end": 15370,
											"name": "POP"
										},
										{
											"begin": 15321,
											"end": 15380,
											"name": "SWAP2"
										},
										{
											"begin": 15321,
											"end": 15380,
											"name": "SWAP1"
										},
										{
											"begin": 15321,
											"end": 15380,
											"name": "POP"
										},
										{
											"begin": 15321,
											"end": 15380,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "JUMPDEST"
										},
										{
											"begin": 15528,
											"end": 15540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15552,
											"end": 15555,
											"name": "DUP2"
										},
										{
											"begin": 15552,
											"end": 15564,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15552,
											"end": 15564,
											"name": "AND"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 15565,
											"end": 15572,
											"name": "DUP5"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "SWAP1"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "DUP2"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "ISZERO"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "MUL"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "SWAP1"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "MLOAD"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "MLOAD"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "DUP1"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "DUP4"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "SUB"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "DUP2"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "DUP6"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "DUP9"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "DUP9"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "CALL"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "SWAP4"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "POP"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "POP"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "POP"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "POP"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15552,
											"end": 15573,
											"name": "POP"
										},
										{
											"begin": 15619,
											"end": 15623,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15612,
											"end": 15623,
											"name": "SWAP1"
										},
										{
											"begin": 15612,
											"end": 15623,
											"name": "POP"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "SWAP4"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "SWAP3"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "POP"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "POP"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "POP"
										},
										{
											"begin": 15392,
											"end": 15630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6479,
											"end": 6609,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 6479,
											"end": 6609,
											"name": "JUMPDEST"
										},
										{
											"begin": 6545,
											"end": 6602,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 6562,
											"end": 6571,
											"name": "DUP2"
										},
										{
											"begin": 6573,
											"end": 6601,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 6580,
											"end": 6600,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 6590,
											"end": 6599,
											"name": "DUP5"
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 6580,
											"end": 6600,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6580,
											"end": 6600,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 6580,
											"end": 6600,
											"name": "JUMPDEST"
										},
										{
											"begin": 6573,
											"end": 6579,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 6573,
											"end": 6601,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6573,
											"end": 6601,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 6573,
											"end": 6601,
											"name": "JUMPDEST"
										},
										{
											"begin": 6545,
											"end": 6561,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 6545,
											"end": 6602,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6545,
											"end": 6602,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 6545,
											"end": 6602,
											"name": "JUMPDEST"
										},
										{
											"begin": 6479,
											"end": 6609,
											"name": "POP"
										},
										{
											"begin": 6479,
											"end": 6609,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6794,
											"end": 7010,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 6794,
											"end": 7010,
											"name": "JUMPDEST"
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6880,
											"name": "DUP1"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "PUSH",
											"value": "186A0"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "SLOAD"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "EXP"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "DIV"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6893,
											"end": 6914,
											"name": "AND"
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "AND"
										},
										{
											"begin": 6883,
											"end": 6890,
											"name": "DUP5"
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "MUL"
										},
										{
											"begin": 6883,
											"end": 6923,
											"name": "DUP2"
										},
										{
											"begin": 6883,
											"end": 6923,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 6883,
											"end": 6923,
											"name": "JUMPI"
										},
										{
											"begin": 6883,
											"end": 6923,
											"name": "INVALID"
										},
										{
											"begin": 6883,
											"end": 6923,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 6883,
											"end": 6923,
											"name": "JUMPDEST"
										},
										{
											"begin": 6883,
											"end": 6923,
											"name": "DIV"
										},
										{
											"begin": 6869,
											"end": 6923,
											"name": "SWAP1"
										},
										{
											"begin": 6869,
											"end": 6923,
											"name": "POP"
										},
										{
											"begin": 6946,
											"end": 6958,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6946,
											"end": 6958,
											"name": "SLOAD"
										},
										{
											"begin": 6940,
											"end": 6943,
											"name": "DUP2"
										},
										{
											"begin": 6940,
											"end": 6958,
											"name": "LT"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "JUMPI"
										},
										{
											"begin": 7000,
											"end": 7003,
											"name": "DUP1"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "JUMP"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "JUMPDEST"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "SLOAD"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "JUMPDEST"
										},
										{
											"begin": 6933,
											"end": 7003,
											"name": "SWAP2"
										},
										{
											"begin": 6933,
											"end": 7003,
											"name": "POP"
										},
										{
											"begin": 6933,
											"end": 7003,
											"name": "POP"
										},
										{
											"begin": 6794,
											"end": 7010,
											"name": "SWAP2"
										},
										{
											"begin": 6794,
											"end": 7010,
											"name": "SWAP1"
										},
										{
											"begin": 6794,
											"end": 7010,
											"name": "POP"
										},
										{
											"begin": 6794,
											"end": 7010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15636,
											"end": 15759,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 15636,
											"end": 15759,
											"name": "JUMPDEST"
										},
										{
											"begin": 15745,
											"end": 15752,
											"name": "DUP1"
										},
										{
											"begin": 15726,
											"end": 15741,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15726,
											"end": 15741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "DUP3"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "DUP3"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "SLOAD"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "ADD"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "SWAP3"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "POP"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "POP"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "DUP2"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "SWAP1"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "SSTORE"
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "POP"
										},
										{
											"begin": 15636,
											"end": 15759,
											"name": "POP"
										},
										{
											"begin": 15636,
											"end": 15759,
											"name": "POP"
										},
										{
											"begin": 15636,
											"end": 15759,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"505DCBF77BAA9FCB931859D75EF58472FC43F433ECC69ABF910161910B72606C": "6f6e6c792074686520737761702063726561746f722063616e2063616c6c2074686973",
										"8889CDF9502051F6182111D178AAD396861A3FF01E10CBD6B8663BFD3219A4FE": "6f6e6c7920746865206f7261636c65206f722074686520706f6f6c2063616e2063616c6c2074686973"
									}
								}
							}
						},
						"methodIdentifiers": {
							"ASSET_TYPE()": "8815eb39",
							"VERSION()": "ffa1ad74",
							"approveOracle(address)": "f47bc89c",
							"changeOwner(address)": "a6f9dae1",
							"changeSwapCreator(address)": "26bdee37",
							"create(address,address,address,bytes,bytes32,uint32)": "0b898c9e",
							"feeThousandthsPercent()": "0bc2aad2",
							"getSwapStatus(address,address,address,bytes,bytes32)": "946519f1",
							"minFeeAmount()": "f5d36475",
							"owner()": "8da5cb5b",
							"release(address,address,address,bytes,bytes32)": "9a3c6e29",
							"returnFunds(address,address,address,bytes,bytes32)": "a80e7acb",
							"revokeOracle(address)": "5983e6b0",
							"setStatus(uint8)": "2e49d78b",
							"status()": "200d2ed2",
							"withdrawFees(bytes,address)": "bfe5d9c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"},{\"name\":\"lockTimeS\",\"type\":\"uint32\"}],\"name\":\"create\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeThousandthsPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCreator\",\"type\":\"address\"}],\"name\":\"changeSwapCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"revokeOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSET_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"}],\"name\":\"getSwapStatus\",\"outputs\":[{\"name\":\"status\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"}],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_assetData\",\"type\":\"bytes\"},{\"name\":\"_paymentDetailsHash\",\"type\":\"bytes32\"}],\"name\":\"returnFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"approveOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minFeeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_feeThousandthsPercent\",\"type\":\"uint16\"},{\"name\":\"_minFeeAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"PoolReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"Returned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"swapHash\",\"type\":\"bytes32\"}],\"name\":\"PoolReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newCreator\",\"type\":\"address\"}],\"name\":\"SwapCreatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"StatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"create(address,address,address,bytes,bytes32,uint32)\":{\"notice\":\"Swap creation, called by the Ramp Network. Checks swap parameters and ensures the crypto asset is locked on this contract.     * Emits a `Created` event with the swap hash.\"},\"getSwapStatus(address,address,address,bytes,bytes32)\":{\"notice\":\"Given all valid swap details, returns its status. The return can be: 0: the swap details are invalid, swap doesn't exist, or was already released/returned. >1: the swap was created, and the value is a timestamp indicating end of its lock time.\"},\"release(address,address,address,bytes,bytes32)\":{\"notice\":\"Swap release, which transfers the crypto asset to the receiver and removes the swap from the active swap mapping. Normally called by the swap's oracle after it confirms a matching wire transfer on pool's bank account. Can be also called by the pool, for example in case of a dispute, when the parties reach an agreement off-chain.     * Emits a `Released` or `PoolReleased` event with the swap's hash.\"},\"returnFunds(address,address,address,bytes,bytes32)\":{\"notice\":\"Swap return, which transfers the crypto asset back to the pool and removes the swap from the active swap mapping. Can be called by the pool or the swap's oracle, but only if the escrow lock time expired.     * Emits a `Returned` or `PoolReturned` event with the swap's hash.\"}}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"RampInstantEthEscrows\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"create(address,address,address,bytes,bytes32,uint32)": {
								"notice": "Swap creation, called by the Ramp Network. Checks swap parameters and ensures the crypto asset is locked on this contract.     * Emits a `Created` event with the swap hash."
							},
							"getSwapStatus(address,address,address,bytes,bytes32)": {
								"notice": "Given all valid swap details, returns its status. The return can be: 0: the swap details are invalid, swap doesn't exist, or was already released/returned. >1: the swap was created, and the value is a timestamp indicating end of its lock time."
							},
							"release(address,address,address,bytes,bytes32)": {
								"notice": "Swap release, which transfers the crypto asset to the receiver and removes the swap from the active swap mapping. Normally called by the swap's oracle after it confirms a matching wire transfer on pool's bank account. Can be also called by the pool, for example in case of a dispute, when the parties reach an agreement off-chain.     * Emits a `Released` or `PoolReleased` event with the swap's hash."
							},
							"returnFunds(address,address,address,bytes,bytes32)": {
								"notice": "Swap return, which transfers the crypto asset back to the pool and removes the swap from the active swap mapping. Can be called by the pool or the swap's oracle, but only if the escrow lock time expired.     * Emits a `Returned` or `PoolReturned` event with the swap's hash."
							}
						}
					}
				},
				"RampInstantPoolInterface": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendFundsToSwap",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ASSET_TYPE",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ASSET_TYPE()": "8815eb39",
							"sendFundsToSwap(uint256)": "81fd3f0b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendFundsToSwap\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSET_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"RampInstantPoolInterface\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"WithOracles": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "revokeOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "approveOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approveOracle(address)": "f47bc89c",
							"changeOwner(address)": "a6f9dae1",
							"owner()": "8da5cb5b",
							"revokeOracle(address)": "5983e6b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"revokeOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"approveOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"WithOracles\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"WithStatus": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_status",
									"type": "uint8"
								}
							],
							"name": "setStatus",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "StatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"input/RampInstantEthEscrows.sol\":4176:4681  contract WithStatus is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"input/RampInstantEthEscrows.sol\":4400:4413  Status.ACTIVE */\n  0x03\n    /* \"input/RampInstantEthEscrows.sol\":4377:4413  Status public status = Status.ACTIVE */\n  0x00\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":3890:3900  msg.sender */\n  caller\n    /* \"input/RampInstantEthEscrows.sol\":3882:3887  owner */\n  0x00\n  dup1\n    /* \"input/RampInstantEthEscrows.sol\":3882:3900  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"input/RampInstantEthEscrows.sol\":4176:4681  contract WithStatus is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/RampInstantEthEscrows.sol\":4176:4681  contract WithStatus is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"input/RampInstantEthEscrows.sol\":4176:4681  contract WithStatus is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x200d2ed2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e49d78b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"input/RampInstantEthEscrows.sol\":4377:4413  Status public status = Status.ACTIVE */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_9\n      jumpi\n      invalid\n    tag_9:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_11:\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_12\n      jump\t// in\n    tag_10:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":3761:3781  address public owner */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n    tag_6:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"input/RampInstantEthEscrows.sol\":4377:4413  Status public status = Status.ACTIVE */\n    tag_8:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n    tag_12:\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"input/RampInstantEthEscrows.sol\":4489:4519  StatusChanged(status, _status) */\n      0xe1377aa21d49fa10bb9ece6a0cd4f75597a90a80c3750f7f7674967f49ab9a62\n        /* \"input/RampInstantEthEscrows.sol\":4503:4509  status */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":4511:4518  _status */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":4489:4519  StatusChanged(status, _status) */\n      mload(0x40)\n      dup1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"input/RampInstantEthEscrows.sol\":4538:4545  _status */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4529:4535  status */\n      0x00\n      0x14\n        /* \"input/RampInstantEthEscrows.sol\":4529:4545  status = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4420:4552  function setStatus(Status _status) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":3761:3781  address public owner */\n    tag_14:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n    tag_17:\n        /* \"input/RampInstantEthEscrows.sol\":3966:3971  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/RampInstantEthEscrows.sol\":3952:3962  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":3952:3971  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/RampInstantEthEscrows.sol\":3944:4004  require(msg.sender == owner, \"only the owner can call this\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"input/RampInstantEthEscrows.sol\":4105:4114  _newOwner */\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4097:4102  owner */\n      0x00\n      dup1\n        /* \"input/RampInstantEthEscrows.sol\":4097:4114  owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/RampInstantEthEscrows.sol\":4129:4164  OwnerChanged(msg.sender, _newOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n        /* \"input/RampInstantEthEscrows.sol\":4142:4152  msg.sender */\n      caller\n        /* \"input/RampInstantEthEscrows.sol\":4154:4163  _newOwner */\n      dup3\n        /* \"input/RampInstantEthEscrows.sol\":4129:4164  OwnerChanged(msg.sender, _newOwner) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"input/RampInstantEthEscrows.sol\":4028:4171  function changeOwner(address _newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72305820deaca80398ca88e6460a3d30137b8dff60a2ce318b70a72cf5dbbf085392206064736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526003600060146101000a81548160ff0219169083600381111561002357fe5b0217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610497806100776000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063200d2ed2146100515780632e49d78b1461007d5780638da5cb5b146100ae578063a6f9dae1146100f8575b600080fd5b61005961013c565b6040518082600381111561006957fe5b60ff16815260200191505060405180910390f35b6100ac6004803603602081101561009357600080fd5b81019080803560ff16906020019092919050505061014f565b005b6100b66102a1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013a6004803603602081101561010e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c6565b005b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610211576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b7fe1377aa21d49fa10bb9ece6a0cd4f75597a90a80c3750f7f7674967f49ab9a62600060149054906101000a900460ff16826040518083600381111561025357fe5b60ff16815260200182600381111561026757fe5b60ff1681526020019250505060405180910390a180600060146101000a81548160ff0219169083600381111561029957fe5b021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c3382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15056fea265627a7a72305820deaca80398ca88e6460a3d30137b8dff60a2ce318b70a72cf5dbbf085392206064736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x497 DUP1 PUSH2 0x77 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x69 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE1377AA21D49FA10BB9ECE6A0CD4F75597A90A80C3750F7F7674967F49AB9A62 PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x253 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x267 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x299 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xde 0xac 0xa8 SUB SWAP9 0xca DUP9 0xe6 0x46 EXP RETURNDATASIZE ADDRESS SGT PUSH28 0x8DFF60A2CE318B70A72CF5DBBF085392206064736F6C634300050A00 ORIGIN ",
							"sourceMap": "4176:505:0:-;;;4400:13;4377:36;;;;;;;;;;;;;;;;;;;;;;;;;;3890:10;3882:5;;:18;;;;;;;;;;;;;;;;;;4176:505;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063200d2ed2146100515780632e49d78b1461007d5780638da5cb5b146100ae578063a6f9dae1146100f8575b600080fd5b61005961013c565b6040518082600381111561006957fe5b60ff16815260200191505060405180910390f35b6100ac6004803603602081101561009357600080fd5b81019080803560ff16906020019092919050505061014f565b005b6100b66102a1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013a6004803603602081101561010e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c6565b005b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610211576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b7fe1377aa21d49fa10bb9ece6a0cd4f75597a90a80c3750f7f7674967f49ab9a62600060149054906101000a900460ff16826040518083600381111561025357fe5b60ff16815260200182600381111561026757fe5b60ff1681526020019250505060405180910390a180600060146101000a81548160ff0219169083600381111561029957fe5b021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6f6e6c7920746865206f776e65722063616e2063616c6c20746869730000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c3382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15056fea265627a7a72305820deaca80398ca88e6460a3d30137b8dff60a2ce318b70a72cf5dbbf085392206064736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2E49D78B EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x69 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE1377AA21D49FA10BB9ECE6A0CD4F75597A90A80C3750F7F7674967F49AB9A62 PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x253 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x267 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x299 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C CALLER DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xde 0xac 0xa8 SUB SWAP9 0xca DUP9 0xe6 0x46 EXP RETURNDATASIZE ADDRESS SGT PUSH28 0x8DFF60A2CE318B70A72CF5DBBF085392206064736F6C634300050A00 ORIGIN ",
							"sourceMap": "4176:505:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4176:505:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4377:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4420:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4420:132:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3761:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4028:143;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4028:143:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;4377:36;;;;;;;;;;;;;:::o;4420:132::-;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4489:30;4503:6;;;;;;;;;;;4511:7;4489:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4538:7;4529:6;;:16;;;;;;;;;;;;;;;;;;;;;;;;4420:132;:::o;3761:20::-;;;;;;;;;;;;;:::o;4028:143::-;3966:5;;;;;;;;;;;3952:19;;:10;:19;;;3944:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4105:9;4097:5;;:17;;;;;;;;;;;;;;;;;;4129:35;4142:10;4154:9;4129:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4028:143;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "235000",
								"executionCost": "40854",
								"totalCost": "275854"
							},
							"external": {
								"changeOwner(address)": "22184",
								"owner()": "475",
								"setStatus(uint8)": "22537",
								"status()": "501"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4176,
									"end": 4681,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "MSTORE"
								},
								{
									"begin": 4400,
									"end": 4413,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "EXP"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP2"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SLOAD"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP2"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "MUL"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "NOT"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "AND"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SWAP1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP4"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "DUP2"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "GT"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "ISZERO"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "JUMPI"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "INVALID"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "JUMPDEST"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "MUL"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "OR"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SWAP1"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "SSTORE"
								},
								{
									"begin": 4377,
									"end": 4413,
									"name": "POP"
								},
								{
									"begin": 3890,
									"end": 3900,
									"name": "CALLER"
								},
								{
									"begin": 3882,
									"end": 3887,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3887,
									"name": "DUP1"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "EXP"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "DUP2"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SLOAD"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "DUP2"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "MUL"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "NOT"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "AND"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SWAP1"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "DUP4"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "AND"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "MUL"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "OR"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SWAP1"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "SSTORE"
								},
								{
									"begin": 3882,
									"end": 3900,
									"name": "POP"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "DUP1"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "CODECOPY"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4176,
									"end": 4681,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820deaca80398ca88e6460a3d30137b8dff60a2ce318b70a72cf5dbbf085392206064736f6c634300050a0032",
									".code": [
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "MSTORE"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "POP"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "LT"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "JUMPI"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "SHR"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "DUP1"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "200D2ED2"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "EQ"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "JUMPI"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "DUP1"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "2E49D78B"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "EQ"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "JUMPI"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "DUP1"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "EQ"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "JUMPI"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "DUP1"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "A6F9DAE1"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "EQ"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "JUMPI"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "JUMPDEST"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "DUP1"
										},
										{
											"begin": 4176,
											"end": 4681,
											"name": "REVERT"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "MLOAD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP3"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "GT"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "ISZERO"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPI"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "INVALID"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "AND"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "MSTORE"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "ADD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "POP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "POP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "MLOAD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SUB"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "RETURN"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP2"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "ADD"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "DUP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "AND"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "ADD"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP3"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP2"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "STOP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMPDEST"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMPDEST"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "MLOAD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP3"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "POP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "POP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "MLOAD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SUB"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "RETURN"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMPDEST"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP2"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "ADD"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "DUP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "AND"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "ADD"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP3"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP2"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "SWAP1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMPDEST"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "STOP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SLOAD"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "EXP"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DIV"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "AND"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4413,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "E1377AA21D49FA10BB9ECE6A0CD4F75597A90A80C3750F7F7674967F49AB9A62"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SLOAD"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "EXP"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "DIV"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4509,
											"name": "AND"
										},
										{
											"begin": 4511,
											"end": 4518,
											"name": "DUP3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MLOAD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP1"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP4"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "GT"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPI"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "INVALID"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "AND"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MSTORE"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ADD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "GT"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ISZERO"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPI"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "INVALID"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "JUMPDEST"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "AND"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MSTORE"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "ADD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SWAP3"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "POP"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MLOAD"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "DUP1"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SWAP2"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SUB"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "SWAP1"
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "LOG1"
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "EXP"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SLOAD"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "MUL"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "NOT"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "AND"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP4"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "GT"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "JUMPI"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "INVALID"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "MUL"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "OR"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "SSTORE"
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "POP"
										},
										{
											"begin": 4420,
											"end": 4552,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMPDEST"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SLOAD"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "EXP"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DIV"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP2"
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SLOAD"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "EXP"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3962,
											"name": "CALLER"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3952,
											"end": 3971,
											"name": "EQ"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPI"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP3"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "6F6E6C7920746865206F776E65722063616E2063616C6C207468697300000000"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MSTORE"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "ADD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "POP"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "MLOAD"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SUB"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "REVERT"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3944,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "DUP1"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "EXP"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP2"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SLOAD"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP2"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "MUL"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "NOT"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "AND"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "DUP4"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "AND"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "MUL"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "OR"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "SSTORE"
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 4142,
											"end": 4152,
											"name": "CALLER"
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP3"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MLOAD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP1"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP4"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP2"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MSTORE"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "ADD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP3"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "AND"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP2"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MSTORE"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "ADD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SWAP3"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "POP"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "MLOAD"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "DUP1"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SWAP2"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SUB"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "SWAP1"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "LOG1"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "POP"
										},
										{
											"begin": 4028,
											"end": 4171,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"owner()": "8da5cb5b",
							"setStatus(uint8)": "2e49d78b",
							"status()": "200d2ed2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"StatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"WithStatus\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"WithSwapsCreator": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newCreator",
									"type": "address"
								}
							],
							"name": "changeSwapCreator",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_oldCreator",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_newCreator",
									"type": "address"
								}
							],
							"name": "SwapCreatorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"changeSwapCreator(address)": "26bdee37",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newCreator\",\"type\":\"address\"}],\"name\":\"changeSwapCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newCreator\",\"type\":\"address\"}],\"name\":\"SwapCreatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/RampInstantEthEscrows.sol\":\"WithSwapsCreator\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/RampInstantEthEscrows.sol\":{\"keccak256\":\"0x2cf777488f10def6e49a8cc1afbb6e40d6851af3249312c949f484b59b7edb07\",\"urls\":[\"bzzr://f1cb4a2af2b24c32c35c23e77eb1875430e6e7d9995b895777df97c4b2cad89e\",\"dweb:/ipfs/QmRbisBVzKw8kbr98ybn3SNfHpG9KqhXQ4c41BmyupsXAH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"input/RampInstantEthEscrows.sol": {
				"ast": {
					"absolutePath": "input/RampInstantEthEscrows.sol",
					"exportedSymbols": {
						"AssetAdapter": [
							88
						],
						"AssetAdapterWithFees": [
							512
						],
						"EthAdapter": [
							1004
						],
						"Ownable": [
							146
						],
						"RampInstantEscrows": [
							887
						],
						"RampInstantEthEscrows": [
							1021
						],
						"RampInstantPoolInterface": [
							98
						],
						"WithOracles": [
							280
						],
						"WithStatus": [
							194
						],
						"WithSwapsCreator": [
							330
						]
					},
					"id": 1022,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "Copyright Â© 2017-2019 Ramp Network sp. z o.o. All rights reserved (MIT License).\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies\nor substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE\nAND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "AssetAdapter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "ASSET_TYPE",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "1215:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1215:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "1299:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 8,
														"name": "ASSET_TYPE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1309:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 9,
														"name": "assetType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1322:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1309:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "1309:22:0"
											}
										]
									},
									"documentation": null,
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"name": "assetType",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1267:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1267:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1257:32:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:0:0"
									},
									"scope": 88,
									"src": "1246:92:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": null,
									"documentation": "Ensure the described asset is sent to the given address.\nShould revert if the transfer failed, but callers must also handle `false` being returned,\nmuch like ERC-20's `transfer`.",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rawSendAsset",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1591:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 14,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1623:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1648:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1581:92:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1692:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1692:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1691:14:0"
									},
									"scope": 88,
									"src": "1560:146:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2154:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 37,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 34,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "2196:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 33,
																"name": "RampInstantPoolInterface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2171:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_RampInstantPoolInterface_$98_$",
																	"typeString": "type(contract RampInstantPoolInterface)"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2171:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RampInstantPoolInterface_$98",
																"typeString": "contract RampInstantPoolInterface"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sendFundsToSwap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 97,
														"src": "2171:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) external returns (bool)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 39,
												"nodeType": "Return",
												"src": "2164:62:0"
											}
										]
									},
									"documentation": "Ensure the described asset is sent to this contract.\nShould revert if the transfer failed, but callers must also handle `false` being returned,\nmuch like ERC-20's `transfer`.",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawLockAsset",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2094:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2060:61:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2140:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2139:14:0"
									},
									"scope": 88,
									"src": "2039:194:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": null,
									"documentation": null,
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "2258:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2257:24:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "2305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2304:9:0"
									},
									"scope": 88,
									"src": "2239:75:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "2997:352:0",
										"statements": [
											{
												"assignments": [
													55
												],
												"declarations": [
													{
														"constant": false,
														"id": 55,
														"name": "assetType",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "3007:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 54,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3007:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 56,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3007:16:0"
											},
											{
												"externalReferences": [
													{
														"assetType": {
															"declaration": 55,
															"isOffset": false,
															"isSlot": false,
															"src": "3120:9:0",
															"valueSize": 1
														}
													},
													{
														"assetData": {
															"declaration": 50,
															"isOffset": false,
															"isSlot": false,
															"src": "3164:9:0",
															"valueSize": 1
														}
													}
												],
												"id": 57,
												"nodeType": "InlineAssembly",
												"operations": "{\n    assetType := and(mload(add(assetData, 2)), 0xffff)\n}",
												"src": "3097:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 59,
																"name": "assetType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "3243:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 60,
																"name": "ASSET_TYPE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "3256:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "3243:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e76616c69642061737365742074797065",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3268:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f56513c370567726586ea35c68fe21335e7f532618885a3e3550420eb3bba1",
																"typeString": "literal_string \"invalid asset type\""
															},
															"value": "invalid asset type"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f56513c370567726586ea35c68fe21335e7f532618885a3e3550420eb3bba1",
																"typeString": "literal_string \"invalid asset type\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "3235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3235:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "3235:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 66,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "3314:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 67,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "3325:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 65,
														"name": "checkAssetData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "3299:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address) view"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3299:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "3299:32:0"
											},
											{
												"id": 70,
												"nodeType": "PlaceholderStatement",
												"src": "3341:1:0"
											}
										]
									},
									"documentation": "Verify that the passed asset data can be handled by this adapter and given pool.\n     * @dev it's sufficient to use this only when creating a new swap -- all the other swap\nfunctions first check if the swap hash is valid, while a swap hash with invalid\nasset type wouldn't be created at all.\n     * @dev asset type is 2 bytes long, and it's at offset 32 in `assetData`'s memory (the first 32\nbytes are the data length). We load the word at offset 2 (it ends with the asset type bytes),\nand retrieve its last 2 bytes into a `uint16` variable.",
									"id": 72,
									"name": "checkAssetTypeAndData",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2958:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 49,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2958:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2982:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2957:39:0"
									},
									"src": "2927:422:0",
									"visibility": "internal"
								},
								{
									"body": null,
									"documentation": null,
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3379:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3379:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3378:39:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3431:0:0"
									},
									"scope": 88,
									"src": "3355:77:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3467:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "7468697320636f6e74726163742063616e6e6f742072656365697665206574686572",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3484:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_209f10440ed15cdf6a24b2c2369489ba8d2b2de3051315fb36609c9e14355590",
																"typeString": "literal_string \"this contract cannot receive ether\""
															},
															"value": "this contract cannot receive ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_209f10440ed15cdf6a24b2c2369489ba8d2b2de3051315fb36609c9e14355590",
																"typeString": "literal_string \"this contract cannot receive ether\""
															}
														],
														"id": 82,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1041,
															1042
														],
														"referencedDeclaration": 1042,
														"src": "3477:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3477:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "3477:44:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:0:0"
									},
									"scope": 88,
									"src": "3438:90:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1022,
							"src": "1186:2345:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "RampInstantPoolInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 90,
									"name": "ASSET_TYPE",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "3574:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 89,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "3574:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendFundsToSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3630:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3629:17:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3718:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 94,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3717:14:0"
									},
									"scope": 98,
									"src": "3605:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1022,
							"src": "3533:202:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 100,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "3761:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 99,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3761:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 106,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3807:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3825:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3806:36:0"
									},
									"src": "3788:55:0"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3872:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 109,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3882:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 110,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "3890:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3890:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3882:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "3882:18:0"
											}
										]
									},
									"documentation": null,
									"id": 115,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3860:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:0:0"
									},
									"scope": 146,
									"src": "3849:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "3934:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 118,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "3952:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3952:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 120,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "3966:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3952:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7920746865206f776e65722063616e2063616c6c2074686973",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3973:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42e2493b51513ec44bb964a3c1604c2a43dc32076321dc14d054e3194f2b1292",
																"typeString": "literal_string \"only the owner can call this\""
															},
															"value": "only the owner can call this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42e2493b51513ec44bb964a3c1604c2a43dc32076321dc14d054e3194f2b1292",
																"typeString": "literal_string \"only the owner can call this\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "3944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3944:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "3944:60:0"
											},
											{
												"id": 125,
												"nodeType": "PlaceholderStatement",
												"src": "4014:1:0"
											}
										]
									},
									"documentation": null,
									"id": 127,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3931:2:0"
									},
									"src": "3913:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "4087:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 134,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "4097:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 135,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4105:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4097:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "4097:17:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "4142:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4154:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 138,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "4129:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "EmitStatement",
												"src": "4124:40:0"
											}
										]
									},
									"documentation": null,
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 132,
											"modifierName": {
												"argumentTypes": null,
												"id": 131,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 127,
												"src": "4077:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4077:9:0"
										}
									],
									"name": "changeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4049:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4048:19:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4087:0:0"
									},
									"scope": 146,
									"src": "4028:143:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1022,
							"src": "3737:437:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 147,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "4199:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$146",
											"typeString": "contract Ownable"
										}
									},
									"id": 148,
									"nodeType": "InheritanceSpecifier",
									"src": "4199:7:0"
								}
							],
							"contractDependencies": [
								146
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								146
							],
							"name": "WithStatus",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "WithStatus.Status",
									"id": 153,
									"members": [
										{
											"id": 149,
											"name": "STOPPED",
											"nodeType": "EnumValue",
											"src": "4236:7:0"
										},
										{
											"id": 150,
											"name": "RETURN_ONLY",
											"nodeType": "EnumValue",
											"src": "4253:11:0"
										},
										{
											"id": 151,
											"name": "FINALIZE_ONLY",
											"nodeType": "EnumValue",
											"src": "4274:13:0"
										},
										{
											"id": 152,
											"name": "ACTIVE",
											"nodeType": "EnumValue",
											"src": "4297:6:0"
										}
									],
									"name": "Status",
									"nodeType": "EnumDefinition",
									"src": "4214:95:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 159,
									"name": "StatusChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"indexed": false,
												"name": "oldStatus",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4335:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$153",
													"typeString": "enum WithStatus.Status"
												},
												"typeName": {
													"contractScope": null,
													"id": 154,
													"name": "Status",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 153,
													"src": "4335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"name": "newStatus",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4353:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$153",
													"typeString": "enum WithStatus.Status"
												},
												"typeName": {
													"contractScope": null,
													"id": 156,
													"name": "Status",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 153,
													"src": "4353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4334:36:0"
									},
									"src": "4315:56:0"
								},
								{
									"constant": false,
									"id": 163,
									"name": "status",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "4377:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$153",
										"typeString": "enum WithStatus.Status"
									},
									"typeName": {
										"contractScope": null,
										"id": 160,
										"name": "Status",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 153,
										"src": "4377:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$153",
											"typeString": "enum WithStatus.Status"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 161,
											"name": "Status",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 153,
											"src": "4400:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Status_$153_$",
												"typeString": "type(enum WithStatus.Status)"
											}
										},
										"id": 162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "ACTIVE",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "4400:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$153",
											"typeString": "enum WithStatus.Status"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "4474:78:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 171,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "4503:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$153",
																"typeString": "enum WithStatus.Status"
															}
														},
														{
															"argumentTypes": null,
															"id": 172,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$153",
																"typeString": "enum WithStatus.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Status_$153",
																"typeString": "enum WithStatus.Status"
															},
															{
																"typeIdentifier": "t_enum$_Status_$153",
																"typeString": "enum WithStatus.Status"
															}
														],
														"id": 170,
														"name": "StatusChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "4489:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_Status_$153_$_t_enum$_Status_$153_$returns$__$",
															"typeString": "function (enum WithStatus.Status,enum WithStatus.Status)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4489:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "EmitStatement",
												"src": "4484:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 175,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "4529:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$153",
															"typeString": "enum WithStatus.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 176,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "4538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$153",
															"typeString": "enum WithStatus.Status"
														}
													},
													"src": "4529:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "4529:16:0"
											}
										]
									},
									"documentation": null,
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 168,
											"modifierName": {
												"argumentTypes": null,
												"id": 167,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 127,
												"src": "4464:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4464:9:0"
										}
									],
									"name": "setStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"name": "_status",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$153",
													"typeString": "enum WithStatus.Status"
												},
												"typeName": {
													"contractScope": null,
													"id": 164,
													"name": "Status",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 153,
													"src": "4439:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4438:16:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4474:0:0"
									},
									"scope": 194,
									"src": "4420:132:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4597:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$153",
																"typeString": "enum WithStatus.Status"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 185,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "4615:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$153",
																	"typeString": "enum WithStatus.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 186,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "4625:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$153",
																	"typeString": "enum WithStatus.Status"
																}
															},
															"src": "4615:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e76616c696420636f6e747261637420737461747573",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0602b492b08a6b689000a7d55fc73c65f1437e891c06eca5e395436b64d1032",
																"typeString": "literal_string \"invalid contract status\""
															},
															"value": "invalid contract status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0602b492b08a6b689000a7d55fc73c65f1437e891c06eca5e395436b64d1032",
																"typeString": "literal_string \"invalid contract status\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "4607:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "4607:53:0"
											},
											{
												"id": 191,
												"nodeType": "PlaceholderStatement",
												"src": "4670:1:0"
											}
										]
									},
									"documentation": null,
									"id": 193,
									"name": "statusAtLeast",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "_status",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$153",
													"typeString": "enum WithStatus.Status"
												},
												"typeName": {
													"contractScope": null,
													"id": 181,
													"name": "Status",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 153,
													"src": "4581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4580:16:0"
									},
									"src": "4558:120:0",
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "4176:505:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 195,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "4707:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$146",
											"typeString": "contract Ownable"
										}
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "4707:7:0"
								}
							],
							"contractDependencies": [
								146
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 280,
							"linearizedBaseContracts": [
								280,
								146
							],
							"name": "WithOracles",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 200,
									"name": "oracles",
									"nodeType": "VariableDeclaration",
									"scope": 280,
									"src": "4722:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 199,
										"keyType": {
											"id": 197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4731:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4722:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 198,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4742:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "4785:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 203,
															"name": "oracles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "4795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 206,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "4803:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4803:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4795:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4817:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4795:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "4795:26:0"
											}
										]
									},
									"documentation": null,
									"id": 211,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4773:2:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4785:0:0"
									},
									"scope": 280,
									"src": "4762:66:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "4893:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 218,
															"name": "oracles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "4903:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 220,
														"indexExpression": {
															"argumentTypes": null,
															"id": 219,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4903:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4922:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4903:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "4903:23:0"
											}
										]
									},
									"documentation": null,
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 216,
											"modifierName": {
												"argumentTypes": null,
												"id": 215,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 127,
												"src": "4883:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4883:9:0"
										}
									],
									"name": "approveOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "4857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4856:17:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4893:0:0"
									},
									"scope": 280,
									"src": "4834:99:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "4997:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 232,
															"name": "oracles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 234,
														"indexExpression": {
															"argumentTypes": null,
															"id": 233,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "5015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5007:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5026:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5007:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "5007:24:0"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 230,
											"modifierName": {
												"argumentTypes": null,
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 127,
												"src": "4987:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4987:9:0"
										}
									],
									"name": "revokeOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "4961:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4960:17:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4997:0:0"
									},
									"scope": 280,
									"src": "4939:99:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "5079:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 244,
																"name": "oracles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5097:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 246,
															"indexExpression": {
																"argumentTypes": null,
																"id": 245,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "5105:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5097:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e76616c6964206f7261636c652061646472657373",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5115:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_232a20886ad490ec10186856d7137b9a2ecb22b0b40b1e3f3c1111c2fecfca4a",
																"typeString": "literal_string \"invalid oracle address\""
															},
															"value": "invalid oracle address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_232a20886ad490ec10186856d7137b9a2ecb22b0b40b1e3f3c1111c2fecfca4a",
																"typeString": "literal_string \"invalid oracle address\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "5089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5089:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "5089:51:0"
											},
											{
												"id": 250,
												"nodeType": "PlaceholderStatement",
												"src": "5150:1:0"
											}
										]
									},
									"documentation": null,
									"id": 252,
									"name": "isOracle",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "5062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5061:17:0"
									},
									"src": "5044:114:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "5222:185:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 259,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "5253:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5253:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 261,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5267:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5253:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 263,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "5277:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5277:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 265,
																				"name": "_oracle",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 256,
																				"src": "5291:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5277:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 267,
																				"name": "oracles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "5302:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 268,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "5310:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5310:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5302:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5277:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5276:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5253:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7920746865206f7261636c65206f722074686520706f6f6c2063616e2063616c6c2074686973",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5336:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8889cdf9502051f6182111d178aad396861a3ff01e10cbd6b8663bfd3219a4fe",
																"typeString": "literal_string \"only the oracle or the pool can call this\""
															},
															"value": "only the oracle or the pool can call this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8889cdf9502051f6182111d178aad396861a3ff01e10cbd6b8663bfd3219a4fe",
																"typeString": "literal_string \"only the oracle or the pool can call this\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "5232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:157:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "5232:157:0"
											},
											{
												"id": 277,
												"nodeType": "PlaceholderStatement",
												"src": "5399:1:0"
											}
										]
									},
									"documentation": null,
									"id": 279,
									"name": "onlyOracleOrPool",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "5190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "5205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5189:32:0"
									},
									"src": "5164:243:0",
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "4683:727:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 281,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "5441:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$146",
											"typeString": "contract Ownable"
										}
									},
									"id": 282,
									"nodeType": "InheritanceSpecifier",
									"src": "5441:7:0"
								}
							],
							"contractDependencies": [
								146
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 330,
							"linearizedBaseContracts": [
								330,
								146
							],
							"name": "WithSwapsCreator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 284,
									"name": "swapCreator",
									"nodeType": "VariableDeclaration",
									"scope": 330,
									"src": "5456:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 283,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5456:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 290,
									"name": "SwapCreatorChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"name": "_oldCreator",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "5516:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": false,
												"name": "_newCreator",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "5537:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5515:42:0"
									},
									"src": "5491:67:0"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "5587:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 293,
														"name": "swapCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5597:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 294,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "5611:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5611:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5597:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "5597:24:0"
											}
										]
									},
									"documentation": null,
									"id": 299,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5575:2:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5587:0:0"
									},
									"scope": 330,
									"src": "5564:64:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "5699:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 306,
														"name": "swapCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5709:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 307,
														"name": "_newCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5709:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "5709:25:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "5768:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5768:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 313,
															"name": "_newCreator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5780:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 310,
														"name": "SwapCreatorChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "5749:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5749:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "EmitStatement",
												"src": "5744:48:0"
											}
										]
									},
									"documentation": null,
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 304,
											"modifierName": {
												"argumentTypes": null,
												"id": 303,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 127,
												"src": "5689:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5689:9:0"
										}
									],
									"name": "changeSwapCreator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"name": "_newCreator",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "5661:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5660:21:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5699:0:0"
									},
									"scope": 330,
									"src": "5634:165:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "5832:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 320,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "5850:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5850:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 322,
																"name": "swapCreator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5864:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5850:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c792074686520737761702063726561746f722063616e2063616c6c2074686973",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5877:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_505dcbf77baa9fcb931859d75ef58472fc43f433ecc69abf910161910b72606c",
																"typeString": "literal_string \"only the swap creator can call this\""
															},
															"value": "only the swap creator can call this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_505dcbf77baa9fcb931859d75ef58472fc43f433ecc69abf910161910b72606c",
																"typeString": "literal_string \"only the swap creator can call this\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "5842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5842:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "5842:73:0"
											},
											{
												"id": 327,
												"nodeType": "PlaceholderStatement",
												"src": "5925:1:0"
											}
										]
									},
									"documentation": null,
									"id": 329,
									"name": "onlySwapCreator",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5829:2:0"
									},
									"src": "5805:128:0",
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "5412:524:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 331,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "5971:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$146",
											"typeString": "contract Ownable"
										}
									},
									"id": 332,
									"nodeType": "InheritanceSpecifier",
									"src": "5971:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 333,
										"name": "AssetAdapter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "5980:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AssetAdapter_$88",
											"typeString": "contract AssetAdapter"
										}
									},
									"id": 334,
									"nodeType": "InheritanceSpecifier",
									"src": "5980:12:0"
								}
							],
							"contractDependencies": [
								88,
								146
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 512,
							"linearizedBaseContracts": [
								512,
								88,
								146
							],
							"name": "AssetAdapterWithFees",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 336,
									"name": "feeThousandthsPercent",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "6000:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 335,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "6000:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 338,
									"name": "minFeeAmount",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "6041:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6041:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "6148:243:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 346,
																"name": "_feeThousandthsPercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "6166:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6192:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3136",
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6197:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "6192:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6191:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "6166:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "666565202520746f6f2068696768",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6202:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e405bc0db7e496f6c957dc52245c17f82cb04cb33db222142afccc609b928bf",
																"typeString": "literal_string \"fee % too high\""
															},
															"value": "fee % too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e405bc0db7e496f6c957dc52245c17f82cb04cb33db222142afccc609b928bf",
																"typeString": "literal_string \"fee % too high\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "6158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6158:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 356,
																"name": "_minFeeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "6237:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9968"
																		},
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6255:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "323535",
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6260:3:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "6255:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9968"
																		}
																	}
																],
																"id": 360,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "6237:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6d696e466565416d6f756e7420746f6f2068696768",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6266:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3f00097dc1e7e024c93c96a0baa21981e26fc611ebe94bf40e72a6b38fab7ec",
																"typeString": "literal_string \"minFeeAmount too high\""
															},
															"value": "minFeeAmount too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3f00097dc1e7e024c93c96a0baa21981e26fc611ebe94bf40e72a6b38fab7ec",
																"typeString": "literal_string \"minFeeAmount too high\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "6229:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6229:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "6229:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 365,
														"name": "feeThousandthsPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "6300:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 366,
														"name": "_feeThousandthsPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "6324:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6300:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "6300:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 369,
														"name": "minFeeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "6356:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 370,
														"name": "_minFeeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "6371:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6356:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "6356:28:0"
											}
										]
									},
									"documentation": null,
									"id": 374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"name": "_feeThousandthsPercent",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6087:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 339,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6087:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"name": "_minFeeAmount",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6118:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6086:54:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6148:0:0"
									},
									"scope": 512,
									"src": "6075:316:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rawAccumulateFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "6423:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "6447:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6422:41:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6472:0:0"
									},
									"scope": 512,
									"src": "6397:76:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "6535:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 387,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "6562:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 390,
																			"name": "assetData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 383,
																			"src": "6590:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 389,
																		"name": "getAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "6580:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory) pure returns (uint256)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6580:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 388,
																"name": "getFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "6573:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6573:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "rawAccumulateFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "6545:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (bytes memory,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6545:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "6545:57:0"
											}
										]
									},
									"documentation": null,
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accumulateFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6502:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6502:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6501:24:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6535:0:0"
									},
									"scope": 512,
									"src": "6479:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": null,
									"documentation": null,
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6646:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6646:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6680:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6680:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6636:69:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6737:14:0"
									},
									"scope": 512,
									"src": "6615:137:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "6859:151:0",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "6869:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 414,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "6883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 415,
															"name": "feeThousandthsPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6893:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "6883:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "313030303030",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6917:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "100000"
													},
													"src": "6883:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6869:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 420,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "6940:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 421,
															"name": "minFeeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "6946:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6940:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 424,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "7000:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6940:63:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 423,
														"name": "minFeeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "6973:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 411,
												"id": 426,
												"nodeType": "Return",
												"src": "6933:70:0"
											}
										]
									},
									"documentation": null,
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "6810:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6809:17:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "6850:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6849:9:0"
									},
									"scope": 512,
									"src": "6794:216:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "7098:106:0",
										"statements": [
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"name": "baseAmount",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "7108:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 438,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7139:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 437,
														"name": "getAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "7129:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (bytes memory) pure returns (uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7129:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7108:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 441,
														"name": "baseAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "7166:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 443,
																"name": "baseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "7186:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 442,
															"name": "getFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "7179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7166:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 434,
												"id": 446,
												"nodeType": "Return",
												"src": "7159:38:0"
											}
										]
									},
									"documentation": null,
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountWithFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "7042:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7042:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7041:24:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "7089:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7088:9:0"
									},
									"scope": 512,
									"src": "7016:188:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "7337:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 459,
																	"name": "assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "7384:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 458,
																"name": "getAmountWithFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "7367:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (bytes memory) view returns (uint256)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7367:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 461,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "7396:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 457,
														"name": "rawLockAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "7354:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$returns$_t_bool_$",
															"typeString": "function (uint256,address payable) returns (bool)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7354:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 463,
												"nodeType": "Return",
												"src": "7347:55:0"
											}
										]
									},
									"documentation": null,
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockAssetWithFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7245:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7245:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7277:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7277:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7235:69:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7323:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:14:0"
									},
									"scope": 512,
									"src": "7210:199:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "7540:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "7570:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 477,
																	"name": "assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "7598:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 476,
																"name": "getAmountWithFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "7581:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (bytes memory) view returns (uint256)"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7581:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "7610:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 474,
														"name": "rawSendAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "7557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_address_payable_$returns$_t_bool_$",
															"typeString": "function (bytes memory,uint256,address payable) returns (bool)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7557:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 473,
												"id": 481,
												"nodeType": "Return",
												"src": "7550:64:0"
											}
										]
									},
									"documentation": null,
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendAssetWithFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "7450:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "7482:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7482:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7440:67:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "7526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7526:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7525:14:0"
									},
									"scope": 512,
									"src": "7415:206:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "7755:150:0",
										"statements": [
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "7765:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 492,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 501,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 495,
															"name": "assetData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "7792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 497,
																	"name": "assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7813:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 496,
																"name": "getAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "7803:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (bytes memory) pure returns (uint256)"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7803:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "7825:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 494,
														"name": "rawSendAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "7779:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_address_payable_$returns$_t_bool_$",
															"typeString": "function (bytes memory,uint256,address payable) returns (bool)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7779:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7765:64:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 502,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 493,
													"src": "7843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 507,
												"nodeType": "IfStatement",
												"src": "7839:36:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 504,
																"name": "assetData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "7865:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 503,
															"name": "accumulateFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "7851:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
																"typeString": "function (bytes memory)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7851:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 506,
													"nodeType": "ExpressionStatement",
													"src": "7851:24:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 508,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 493,
													"src": "7892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 491,
												"id": 509,
												"nodeType": "Return",
												"src": "7885:13:0"
											}
										]
									},
									"documentation": null,
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendAssetKeepingFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "7665:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "7697:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7697:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7655:67:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "7741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7740:14:0"
									},
									"scope": 512,
									"src": "7627:278:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "5938:1970:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 513,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "7941:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$146",
											"typeString": "contract Ownable"
										}
									},
									"id": 514,
									"nodeType": "InheritanceSpecifier",
									"src": "7941:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 515,
										"name": "WithStatus",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 194,
										"src": "7950:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_WithStatus_$194",
											"typeString": "contract WithStatus"
										}
									},
									"id": 516,
									"nodeType": "InheritanceSpecifier",
									"src": "7950:10:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 517,
										"name": "WithOracles",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 280,
										"src": "7962:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_WithOracles_$280",
											"typeString": "contract WithOracles"
										}
									},
									"id": 518,
									"nodeType": "InheritanceSpecifier",
									"src": "7962:11:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 519,
										"name": "WithSwapsCreator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 330,
										"src": "7975:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_WithSwapsCreator_$330",
											"typeString": "contract WithSwapsCreator"
										}
									},
									"id": 520,
									"nodeType": "InheritanceSpecifier",
									"src": "7975:16:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 521,
										"name": "AssetAdapterWithFees",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 512,
										"src": "7993:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AssetAdapterWithFees_$512",
											"typeString": "contract AssetAdapterWithFees"
										}
									},
									"id": 522,
									"nodeType": "InheritanceSpecifier",
									"src": "7993:20:0"
								}
							],
							"contractDependencies": [
								88,
								146,
								194,
								280,
								330,
								512
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 887,
							"linearizedBaseContracts": [
								887,
								512,
								88,
								330,
								280,
								194,
								146
							],
							"name": "RampInstantEscrows",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 525,
									"name": "VERSION",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "8070:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 523,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8070:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e352e30",
										"id": 524,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8103:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_92952f0b05a5e3bc794aeb47a698369a2d3befa6645200898e3d45901f654b4f",
											"typeString": "literal_string \"0.5.0\""
										},
										"value": "0.5.0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 528,
									"name": "MIN_ACTUAL_TIMESTAMP",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "8117:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 526,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "8117:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030303030303030",
										"id": 527,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8165:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										},
										"value": "1000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 531,
									"name": "MIN_SWAP_LOCK_TIME_S",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "8281:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 529,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "8281:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3234",
										"id": 530,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8329:8:0",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "24"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 534,
									"name": "MAX_SWAP_LOCK_TIME_S",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "8343:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 532,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "8343:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3330",
										"id": 533,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8391:7:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 538,
									"name": "Created",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "8419:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 535,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8418:26:0"
									},
									"src": "8405:40:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 542,
									"name": "Released",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8465:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 539,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8464:26:0"
									},
									"src": "8450:41:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 546,
									"name": "PoolReleased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "8515:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 543,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8514:26:0"
									},
									"src": "8496:45:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 550,
									"name": "Returned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "8561:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8560:26:0"
									},
									"src": "8546:41:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 554,
									"name": "PoolReturned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"indexed": true,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "8611:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 551,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8610:26:0"
									},
									"src": "8592:45:0"
								},
								{
									"constant": false,
									"id": 558,
									"name": "swaps",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "8841:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
										"typeString": "mapping(bytes32 => uint32)"
									},
									"typeName": {
										"id": 557,
										"keyType": {
											"id": 555,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "8850:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "8841:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
											"typeString": "mapping(bytes32 => uint32)"
										},
										"valueType": {
											"id": 556,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "8861:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "9502:951:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 589,
																	"name": "lockTimeS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "9533:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 590,
																	"name": "MIN_SWAP_LOCK_TIME_S",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "9546:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "9533:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 592,
																	"name": "lockTimeS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "9570:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 593,
																	"name": "MAX_SWAP_LOCK_TIME_S",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "9583:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "9570:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9533:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c6f636b2074696d65206f757473696465206c696d697473",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9617:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a7cd48400940a7f6cf038d312cb9286f145f2f6570f41a7eea2dcbc2a5d3a53",
																"typeString": "literal_string \"lock time outside limits\""
															},
															"value": "lock time outside limits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a7cd48400940a7f6cf038d312cb9286f145f2f6570f41a7eea2dcbc2a5d3a53",
																"typeString": "literal_string \"lock time outside limits\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "9512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9512:141:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "9512:141:0"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"name": "swapHash",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "9663:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 599,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 602,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9707:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9714:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9725:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 606,
																	"name": "_assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "9744:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 605,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "9734:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9734:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 608,
															"name": "_paymentDetailsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "9757:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 601,
														"name": "getSwapHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "9682:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (address,address,address,bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9682:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9663:123:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 612,
															"name": "swapHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "9817:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 611,
														"name": "requireSwapNotExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "9796:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9796:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "9796:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 615,
															"name": "swaps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "10230:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
																"typeString": "mapping(bytes32 => uint32)"
															}
														},
														"id": 617,
														"indexExpression": {
															"argumentTypes": null,
															"id": 616,
															"name": "swapHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "10236:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10230:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 619,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "10255:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10255:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10248:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": "uint32"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 622,
															"name": "lockTimeS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "10274:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "10248:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "10230:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "10230:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 628,
																	"name": "_assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "10331:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 629,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "10343:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 627,
																"name": "lockAssetWithFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "10314:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_payable_$returns$_t_bool_$",
																	"typeString": "function (bytes memory,address payable) returns (bool)"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10314:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "657363726f77206c6f636b206661696c6564",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10363:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4418e094374b6fcbe6a75088623df5076b5ae025bc0fc4a4ddc153c7af8794d",
																"typeString": "literal_string \"escrow lock failed\""
															},
															"value": "escrow lock failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4418e094374b6fcbe6a75088623df5076b5ae025bc0fc4a4ddc153c7af8794d",
																"typeString": "literal_string \"escrow lock failed\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "10293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10293:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "10293:100:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 635,
															"name": "swapHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "10416:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 634,
														"name": "Created",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "10408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10408:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "EmitStatement",
												"src": "10403:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10442:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 587,
												"id": 639,
												"nodeType": "Return",
												"src": "10435:11:0"
											}
										]
									},
									"documentation": "Swap creation, called by the Ramp Network. Checks swap parameters and ensures the crypto\nasset is locked on this contract.\n     * Emits a `Created` event with the swap hash.",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 573,
														"name": "Status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "9343:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Status_$153_$",
															"typeString": "type(enum WithStatus.Status)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "ACTIVE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "9343:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												}
											],
											"id": 575,
											"modifierName": {
												"argumentTypes": null,
												"id": 572,
												"name": "statusAtLeast",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 193,
												"src": "9329:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Status_$153_$",
													"typeString": "modifier (enum WithStatus.Status)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9329:28:0"
										},
										{
											"arguments": [],
											"id": 577,
											"modifierName": {
												"argumentTypes": null,
												"id": 576,
												"name": "onlySwapCreator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 329,
												"src": "9366:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9366:17:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 579,
													"name": "_oracle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 564,
													"src": "9401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 580,
											"modifierName": {
												"argumentTypes": null,
												"id": 578,
												"name": "isOracle",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 252,
												"src": "9392:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9392:17:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 582,
													"name": "_assetData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 566,
													"src": "9440:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												{
													"argumentTypes": null,
													"id": 583,
													"name": "_pool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 560,
													"src": "9452:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 584,
											"modifierName": {
												"argumentTypes": null,
												"id": 581,
												"name": "checkAssetTypeAndData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "9418:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$_t_address_$",
													"typeString": "modifier (bytes memory,address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9418:40:0"
										}
									],
									"name": "create",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9126:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9157:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"name": "_assetData",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9209:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"name": "_paymentDetailsHash",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9244:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"name": "lockTimeS",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9281:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 569,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "9281:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9116:187:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9484:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9483:14:0"
									},
									"scope": 887,
									"src": "9101:1352:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "11169:546:0",
										"statements": [
											{
												"assignments": [
													663
												],
												"declarations": [
													{
														"constant": false,
														"id": 663,
														"name": "swapHash",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "11179:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 662,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "11179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 665,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "11223:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 666,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "11230:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 667,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "11241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 669,
																	"name": "_assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "11260:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 668,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "11250:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11250:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 671,
															"name": "_paymentDetailsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "11273:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 664,
														"name": "getSwapHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "11198:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (address,address,address,bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11198:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11179:123:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 675,
															"name": "swapHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "11331:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 674,
														"name": "requireSwapCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "11312:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "11312:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 678,
															"name": "swaps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "11430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
																"typeString": "mapping(bytes32 => uint32)"
															}
														},
														"id": 680,
														"indexExpression": {
															"argumentTypes": null,
															"id": 679,
															"name": "swapHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "11436:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11430:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11448:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11430:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "11430:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 686,
																	"name": "_assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "11500:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 687,
																	"name": "_receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "11512:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 685,
																"name": "sendAssetKeepingFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "11480:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_payable_$returns$_t_bool_$",
																	"typeString": "function (bytes memory,address payable) returns (bool)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11480:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "61737365742072656c65617365206661696c6564",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11536:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4ddbffdea2abd204967bf90861c9bf8f33caa03ede3417effa9f75c3b78d407",
																"typeString": "literal_string \"asset release failed\""
															},
															"value": "asset release failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4ddbffdea2abd204967bf90861c9bf8f33caa03ede3417effa9f75c3b78d407",
																"typeString": "literal_string \"asset release failed\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "11459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11459:109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "11459:109:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 692,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "11582:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11582:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 694,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "11596:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11582:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "11661:48:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 702,
																		"name": "swapHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "11689:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 701,
																	"name": "Released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "11680:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11680:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 704,
															"nodeType": "EmitStatement",
															"src": "11675:23:0"
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "11578:131:0",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "11603:52:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 697,
																		"name": "swapHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "11635:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 696,
																	"name": "PoolReleased",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "11622:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11622:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 699,
															"nodeType": "EmitStatement",
															"src": "11617:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Swap release, which transfers the crypto asset to the receiver and removes the swap from\nthe active swap mapping. Normally called by the swap's oracle after it confirms a matching\nwire transfer on pool's bank account. Can be also called by the pool, for example in case\nof a dispute, when the parties reach an agreement off-chain.\n     * Emits a `Released` or `PoolReleased` event with the swap's hash.",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 654,
														"name": "Status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "11114:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Status_$153_$",
															"typeString": "type(enum WithStatus.Status)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "FINALIZE_ONLY",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "11114:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												}
											],
											"id": 656,
											"modifierName": {
												"argumentTypes": null,
												"id": 653,
												"name": "statusAtLeast",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 193,
												"src": "11100:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Status_$153_$",
													"typeString": "modifier (enum WithStatus.Status)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11100:35:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 658,
													"name": "_pool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "11153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 659,
													"name": "_oracle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 647,
													"src": "11160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 660,
											"modifierName": {
												"argumentTypes": null,
												"id": 657,
												"name": "onlyOracleOrPool",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "11136:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$_t_address_$",
													"typeString": "modifier (address,address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11136:32:0"
										}
									],
									"name": "release",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "10939:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "10962:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10962:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "10997:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"name": "_assetData",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "11022:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11022:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"name": "_paymentDetailsHash",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "11057:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 650,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10929:161:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11169:0:0"
									},
									"scope": 887,
									"src": "10913:802:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "12299:538:0",
										"statements": [
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"name": "swapHash",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "12309:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 729,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "12309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 740,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 732,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "12353:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 733,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "12360:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 734,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "12371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 736,
																	"name": "_assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "12390:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 735,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "12380:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 738,
															"name": "_paymentDetailsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "12403:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 731,
														"name": "getSwapHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "12328:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (address,address,address,bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12328:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12309:123:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 742,
															"name": "swapHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "12461:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 741,
														"name": "requireSwapExpired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "12442:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12442:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "12442:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 745,
															"name": "swaps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "12560:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
																"typeString": "mapping(bytes32 => uint32)"
															}
														},
														"id": 747,
														"indexExpression": {
															"argumentTypes": null,
															"id": 746,
															"name": "swapHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "12566:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12560:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12578:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12560:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "12560:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 753,
																	"name": "_assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "12627:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 754,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "12639:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 752,
																"name": "sendAssetWithFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "12610:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_payable_$returns$_t_bool_$",
																	"typeString": "function (bytes memory,address payable) returns (bool)"
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12610:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "61737365742072657475726e206661696c6564",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12659:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54aa7250fed8a403e90d92de69018be8a5b6f9f9d95c0ba865a7157027017cca",
																"typeString": "literal_string \"asset return failed\""
															},
															"value": "asset return failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54aa7250fed8a403e90d92de69018be8a5b6f9f9d95c0ba865a7157027017cca",
																"typeString": "literal_string \"asset return failed\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "12589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12589:101:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "12589:101:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 759,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "12704:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12704:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 761,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "12718:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "12704:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "12783:48:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 769,
																		"name": "swapHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "12811:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 768,
																	"name": "Returned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "12802:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12802:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "EmitStatement",
															"src": "12797:23:0"
														}
													]
												},
												"id": 773,
												"nodeType": "IfStatement",
												"src": "12700:131:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "12725:52:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 764,
																		"name": "swapHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "12757:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 763,
																	"name": "PoolReturned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "12744:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12744:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 766,
															"nodeType": "EmitStatement",
															"src": "12739:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Swap return, which transfers the crypto asset back to the pool and removes the swap from\nthe active swap mapping. Can be called by the pool or the swap's oracle, but only if the\nescrow lock time expired.\n     * Emits a `Returned` or `PoolReturned` event with the swap's hash.",
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 721,
														"name": "Status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "12246:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Status_$153_$",
															"typeString": "type(enum WithStatus.Status)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "RETURN_ONLY",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "12246:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$153",
														"typeString": "enum WithStatus.Status"
													}
												}
											],
											"id": 723,
											"modifierName": {
												"argumentTypes": null,
												"id": 720,
												"name": "statusAtLeast",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 193,
												"src": "12232:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Status_$153_$",
													"typeString": "modifier (enum WithStatus.Status)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12232:33:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 725,
													"name": "_pool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 710,
													"src": "12283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"argumentTypes": null,
													"id": 726,
													"name": "_oracle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 714,
													"src": "12290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 727,
											"modifierName": {
												"argumentTypes": null,
												"id": 724,
												"name": "onlyOracleOrPool",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "12266:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$_t_address_$",
													"typeString": "modifier (address,address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12266:32:0"
										}
									],
									"name": "returnFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "12071:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12071:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "12102:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "12129:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"name": "_assetData",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "12154:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12154:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"name": "_paymentDetailsHash",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "12189:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12061:161:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:0"
									},
									"scope": 887,
									"src": "12041:796:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "13338:172:0",
										"statements": [
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"name": "swapHash",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "13348:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 790,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13348:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 793,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "13392:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 794,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "13399:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 795,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "13410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 797,
																	"name": "_assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "13429:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 796,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "13419:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13419:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "_paymentDetailsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "13442:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 792,
														"name": "getSwapHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "13367:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (address,address,address,bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13367:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13348:123:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 802,
														"name": "swaps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "13488:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
															"typeString": "mapping(bytes32 => uint32)"
														}
													},
													"id": 804,
													"indexExpression": {
														"argumentTypes": null,
														"id": 803,
														"name": "swapHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "13494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13488:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 789,
												"id": 805,
												"nodeType": "Return",
												"src": "13481:22:0"
											}
										]
									},
									"documentation": "Given all valid swap details, returns its status. The return can be:\n0: the swap details are invalid, swap doesn't exist, or was already released/returned.\n>1: the swap was created, and the value is a timestamp indicating end of its lock time.",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSwapStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "13156:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "13179:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "13206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"name": "_assetData",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "13231:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13231:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"name": "_paymentDetailsHash",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "13266:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13146:153:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "13323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 787,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "13323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13322:15:0"
									},
									"scope": 887,
									"src": "13124:386:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "13817:162:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 825,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "13891:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 826,
																	"name": "_receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "13898:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 827,
																	"name": "_oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 828,
																	"name": "assetHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "13918:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 829,
																	"name": "_paymentDetailsHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "13929:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "13857:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13857:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13857:105:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 822,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "13834:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13834:138:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 821,
												"id": 832,
												"nodeType": "Return",
												"src": "13827:145:0"
											}
										]
									},
									"documentation": "Calculates the swap hash used to reference the swap in this contract's storage.",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSwapHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "13649:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "13672:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "13699:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"name": "assetHash",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "13724:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 814,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"name": "_paymentDetailsHash",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "13751:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 816,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13639:145:0"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "13808:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13807:9:0"
									},
									"scope": 887,
									"src": "13619:360:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "14047:103:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 840,
																	"name": "swaps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "14078:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
																		"typeString": "mapping(bytes32 => uint32)"
																	}
																},
																"id": 842,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 841,
																	"name": "swapHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "14084:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14078:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14097:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14078:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7377617020616c726561647920657869737473",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14112:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47336039e9637e5907067ae54df816e71d4d3b38836ce2d17d4f23c2bbe014eb",
																"typeString": "literal_string \"swap already exists\""
															},
															"value": "swap already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47336039e9637e5907067ae54df816e71d4d3b38836ce2d17d4f23c2bbe014eb",
																"typeString": "literal_string \"swap already exists\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "14057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14057:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "14057:86:0"
											}
										]
									},
									"documentation": null,
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requireSwapNotExists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "14015:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14014:18:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14047:0:0"
									},
									"scope": 887,
									"src": "13985:165:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "14216:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 855,
																	"name": "swaps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "14247:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
																		"typeString": "mapping(bytes32 => uint32)"
																	}
																},
																"id": 857,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 856,
																	"name": "swapHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "14253:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14247:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "MIN_ACTUAL_TIMESTAMP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "14265:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "14247:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7377617020696e76616c6964",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14299:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c411534364e4bcdab69e79b43634611d41647c37a0bb91378a62eb950b4c3f12",
																"typeString": "literal_string \"swap invalid\""
															},
															"value": "swap invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c411534364e4bcdab69e79b43634611d41647c37a0bb91378a62eb950b4c3f12",
																"typeString": "literal_string \"swap invalid\""
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "14226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14226:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "14226:97:0"
											}
										]
									},
									"documentation": null,
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requireSwapCreated",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "14184:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 850,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14183:18:0"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14216:0:0"
									},
									"scope": 887,
									"src": "14156:174:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "14396:232:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 870,
																		"name": "swaps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "14493:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
																			"typeString": "mapping(bytes32 => uint32)"
																		}
																	},
																	"id": 872,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 871,
																		"name": "swapHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "14499:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14493:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 873,
																	"name": "MIN_ACTUAL_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "14511:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "14493:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 875,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "14535:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14535:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 877,
																		"name": "swaps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "14553:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
																			"typeString": "mapping(bytes32 => uint32)"
																		}
																	},
																	"id": 879,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 878,
																		"name": "swapHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "14559:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14553:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "14535:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14493:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73776170206e6f742065787069726564206f7220696e76616c6964",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14582:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7d1ad19d791c56aa1fc9b4b97b10a53d4f7654f7bbd6b00ff8af7bc7579eece",
																"typeString": "literal_string \"swap not expired or invalid\""
															},
															"value": "swap not expired or invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7d1ad19d791c56aa1fc9b4b97b10a53d4f7654f7bbd6b00ff8af7bc7579eece",
																"typeString": "literal_string \"swap not expired or invalid\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "14406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14406:215:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "14406:215:0"
											}
										]
									},
									"documentation": null,
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requireSwapExpired",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"name": "swapHash",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "14364:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 865,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14363:18:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14396:0:0"
									},
									"scope": 887,
									"src": "14336:292:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "7910:6721:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 888,
										"name": "AssetAdapterWithFees",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 512,
										"src": "14656:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AssetAdapterWithFees_$512",
											"typeString": "contract AssetAdapterWithFees"
										}
									},
									"id": 889,
									"nodeType": "InheritanceSpecifier",
									"src": "14656:20:0"
								}
							],
							"contractDependencies": [
								88,
								146,
								512
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1004,
							"linearizedBaseContracts": [
								1004,
								512,
								88,
								146
							],
							"name": "EthAdapter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 892,
									"name": "ETH_TYPE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 1004,
									"src": "14684:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 890,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "14684:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14723:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 895,
									"name": "ETH_ASSET_DATA_LENGTH",
									"nodeType": "VariableDeclaration",
									"scope": 1004,
									"src": "14730:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 893,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "14730:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3334",
										"id": 894,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14779:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "34"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 898,
									"name": "accumulatedFees",
									"nodeType": "VariableDeclaration",
									"scope": 1004,
									"src": "14787:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 896,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14787:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 897,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14822:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "14879:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 905,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 901,
													"name": "ETH_TYPE_ID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 892,
													"src": "14866:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												}
											],
											"id": 902,
											"modifierName": {
												"argumentTypes": null,
												"id": 900,
												"name": "AssetAdapter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 88,
												"src": "14853:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_AssetAdapter_$88_$",
													"typeString": "type(contract AssetAdapter)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14853:25:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14841:2:0"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14879:0:0"
									},
									"scope": 1004,
									"src": "14830:51:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "15238:148:0",
										"statements": [
											{
												"externalReferences": [
													{
														"amount": {
															"declaration": 910,
															"isOffset": false,
															"isSlot": false,
															"src": "15335:6:0",
															"valueSize": 1
														}
													},
													{
														"assetData": {
															"declaration": 907,
															"isOffset": false,
															"isSlot": false,
															"src": "15355:9:0",
															"valueSize": 1
														}
													}
												],
												"id": 912,
												"nodeType": "InlineAssembly",
												"operations": "{\n    amount := mload(add(assetData, 34))\n}",
												"src": "15312:68:0"
											}
										]
									},
									"documentation": "@dev eth assetData bytes contents:\noffset length type     contents\n+00    32     uint256  data length (== 0x22 == 34 bytes)\n+32     2     uint16   asset type  (== ETH_TYPE_ID == 1)\n+34    32     uint256  ether amount in wei",
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "15175:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15175:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15174:24:0"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "15222:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15221:16:0"
									},
									"scope": 1004,
									"src": "15156:230:0",
									"stateMutability": "pure",
									"superFunction": 48,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "15542:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 928,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "15565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 925,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "15552:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15552:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15552:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "15552:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15619:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 924,
												"id": 932,
												"nodeType": "Return",
												"src": "15612:11:0"
											}
										]
									},
									"documentation": null,
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawSendAsset",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "15423:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "15459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "15484:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15484:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15413:96:0"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "15528:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15527:14:0"
									},
									"scope": 1004,
									"src": "15392:238:0",
									"stateMutability": "nonpayable",
									"superFunction": 24,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "15716:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 941,
														"name": "accumulatedFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "15726:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 942,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "15745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15726:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "15726:26:0"
											}
										]
									},
									"documentation": null,
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawAccumulateFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "15662:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15662:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "15690:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15661:45:0"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15716:0:0"
									},
									"scope": 1004,
									"src": "15636:123:0",
									"stateMutability": "nonpayable",
									"superFunction": 381,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "15902:125:0",
										"statements": [
											{
												"assignments": [
													958
												],
												"declarations": [
													{
														"constant": false,
														"id": 958,
														"name": "fees",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "15912:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"argumentTypes": null,
													"id": 959,
													"name": "accumulatedFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 898,
													"src": "15927:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15912:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 961,
														"name": "accumulatedFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "15952:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15970:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15952:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "15952:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 968,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "15994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 965,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "15981:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15981:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15981:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "15981:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16016:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 956,
												"id": 972,
												"nodeType": "Return",
												"src": "16009:11:0"
											}
										]
									},
									"documentation": null,
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 953,
											"modifierName": {
												"argumentTypes": null,
												"id": 952,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 127,
												"src": "15869:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15869:9:0"
										}
									],
									"name": "withdrawFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "15796:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15796:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "15834:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15834:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15786:73:0"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "15888:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15888:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15887:14:0"
									},
									"scope": 1004,
									"src": "15765:262:0",
									"stateMutability": "nonpayable",
									"superFunction": 405,
									"visibility": "external"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "16178:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 978,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "16196:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16196:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16196:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16215:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16196:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e76616c6964206d6574686f642063616c6c6564",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16218:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_408d3fadc5d202bdf637e0a4bd3170c56a8b24fd53083c02dcd42e19e1bb54e6",
																"typeString": "literal_string \"invalid method called\""
															},
															"value": "invalid method called"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_408d3fadc5d202bdf637e0a4bd3170c56a8b24fd53083c02dcd42e19e1bb54e6",
																"typeString": "literal_string \"invalid method called\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "16188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16188:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "16188:54:0"
											}
										]
									},
									"documentation": "This adapter can receive eth payments, but no other use of the fallback function is allowed.",
									"id": 987,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16158:2:0"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16178:0:0"
									},
									"scope": 1004,
									"src": "16149:100:0",
									"stateMutability": "payable",
									"superFunction": 87,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "16336:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 995,
																	"name": "assetData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "16354:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16354:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 997,
																"name": "ETH_ASSET_DATA_LENGTH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "16374:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "16354:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e76616c69642061737365742064617461206c656e677468",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16397:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33b61dcd0c56d70930cbf82c54462a52afb9fb3768097abf3c2296400a0e4cd2",
																"typeString": "literal_string \"invalid asset data length\""
															},
															"value": "invalid asset data length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33b61dcd0c56d70930cbf82c54462a52afb9fb3768097abf3c2296400a0e4cd2",
																"typeString": "literal_string \"invalid asset data length\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1040
														],
														"referencedDeclaration": 1040,
														"src": "16346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16346:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "16346:79:0"
											}
										]
									},
									"documentation": null,
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAssetData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"name": "assetData",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "16279:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 988,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "16303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16278:43:0"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16336:0:0"
									},
									"scope": 1004,
									"src": "16255:177:0",
									"stateMutability": "view",
									"superFunction": 79,
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "14633:1802:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1005,
										"name": "RampInstantEscrows",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 887,
										"src": "16471:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RampInstantEscrows_$887",
											"typeString": "contract RampInstantEscrows"
										}
									},
									"id": 1006,
									"nodeType": "InheritanceSpecifier",
									"src": "16471:18:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1007,
										"name": "EthAdapter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1004,
										"src": "16491:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EthAdapter_$1004",
											"typeString": "contract EthAdapter"
										}
									},
									"id": 1008,
									"nodeType": "InheritanceSpecifier",
									"src": "16491:10:0"
								}
							],
							"contractDependencies": [
								88,
								146,
								194,
								280,
								330,
								512,
								887,
								1004
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1021,
							"linearizedBaseContracts": [
								1021,
								1004,
								887,
								512,
								88,
								330,
								280,
								194,
								146
							],
							"name": "RampInstantEthEscrows",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "16664:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 1020,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 1015,
													"name": "_feeThousandthsPercent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1010,
													"src": "16625:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												{
													"argumentTypes": null,
													"id": 1016,
													"name": "_minFeeAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1012,
													"src": "16649:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1017,
											"modifierName": {
												"argumentTypes": null,
												"id": 1014,
												"name": "AssetAdapterWithFees",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 512,
												"src": "16604:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_AssetAdapterWithFees_$512_$",
													"typeString": "type(contract AssetAdapterWithFees)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16604:59:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"name": "_feeThousandthsPercent",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "16530:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1009,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"name": "_minFeeAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "16569:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16520:76:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16664:0:0"
									},
									"scope": 1021,
									"src": "16509:157:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1022,
							"src": "16437:232:0"
						}
					],
					"src": "0:16669:0"
				},
				"id": 0
			}
		}
	}
}