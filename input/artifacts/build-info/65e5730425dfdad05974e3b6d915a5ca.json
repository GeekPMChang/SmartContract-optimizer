{
	"id": "65e5730425dfdad05974e3b6d915a5ca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.10",
	"solcLongVersion": "0.5.10+commit.5a6ea5b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"input/Fixed192x64Math.sol": {
				"content": "// File: @gnosis.pm/util-contracts/contracts/Fixed192x64Math.sol\n\npragma solidity >=0.4.24 ^0.5.1;\n\n\n/// @title Fixed192x64Math library - Allows calculation of logarithmic and exponential functions\n/// @author Alan Lu - <alan.lu@gnosis.pm>\n/// @author Stefan George - <stefan@gnosis.pm>\nlibrary Fixed192x64Math {\n\n    enum EstimationMode { LowerBound, UpperBound, Midpoint }\n\n    /*\n     *  Constants\n     */\n    // This is equal to 1 in our calculations\n    uint public constant ONE =  0x10000000000000000;\n    uint public constant LN2 = 0xb17217f7d1cf79ac;\n    uint public constant LOG2_E = 0x171547652b82fe177;\n\n    /*\n     *  Public functions\n     */\n    /// @dev Returns natural exponential function value of given x\n    /// @param x x\n    /// @return e**x\n    function exp(int x)\n        public\n        pure\n        returns (uint)\n    {\n        // revert if x is > MAX_POWER, where\n        // MAX_POWER = int(mp.floor(mp.log(mpf(2**256 - 1) / ONE) * ONE))\n        require(x <= 2454971259878909886679);\n        // return 0 if exp(x) is tiny, using\n        // MIN_POWER = int(mp.floor(mp.log(mpf(1) / ONE) * ONE))\n        if (x <= -818323753292969962227)\n            return 0;\n\n        // Transform so that e^x -> 2^x\n        (uint lower, uint upper) = pow2Bounds(x * int(ONE) / int(LN2));\n        return (upper - lower) / 2 + lower;\n    }\n\n    /// @dev Returns estimate of 2**x given x\n    /// @param x exponent in fixed point\n    /// @param estimationMode whether to return a lower bound, upper bound, or a midpoint\n    /// @return estimate of 2**x in fixed point\n    function pow2(int x, EstimationMode estimationMode)\n        public\n        pure\n        returns (uint)\n    {\n        (uint lower, uint upper) = pow2Bounds(x);\n        if(estimationMode == EstimationMode.LowerBound) {\n            return lower;\n        }\n        if(estimationMode == EstimationMode.UpperBound) {\n            return upper;\n        }\n        if(estimationMode == EstimationMode.Midpoint) {\n            return (upper - lower) / 2 + lower;\n        }\n        revert();\n    }\n\n    /// @dev Returns bounds for value of 2**x given x\n    /// @param x exponent in fixed point\n    /// @return {\n    ///   \"lower\": \"lower bound of 2**x in fixed point\",\n    ///   \"upper\": \"upper bound of 2**x in fixed point\"\n    /// }\n    function pow2Bounds(int x)\n        public\n        pure\n        returns (uint lower, uint upper)\n    {\n        // revert if x is > MAX_POWER, where\n        // MAX_POWER = int(mp.floor(mp.log(mpf(2**256 - 1) / ONE, 2) * ONE))\n        require(x <= 3541774862152233910271);\n        // return 0 if exp(x) is tiny, using\n        // MIN_POWER = int(mp.floor(mp.log(mpf(1) / ONE, 2) * ONE))\n        if (x < -1180591620717411303424)\n            return (0, 1);\n\n        // 2^x = 2^(floor(x)) * 2^(x-floor(x))\n        //       ^^^^^^^^^^^^^^ is a bit shift of ceil(x)\n        // so Taylor expand on z = x-floor(x), z in [0, 1)\n        int shift;\n        int z;\n        if (x >= 0) {\n            shift = x / int(ONE);\n            z = x % int(ONE);\n        }\n        else {\n            shift = (x+1) / int(ONE) - 1;\n            z = x - (int(ONE) * shift);\n        }\n        assert(z >= 0);\n        // 2^x = 1 + (ln 2) x + (ln 2)^2/2! x^2 + ...\n        //\n        // Can generate the z coefficients using mpmath and the following lines\n        // >>> from mpmath import mp\n        // >>> mp.dps = 100\n        // >>> coeffs = [mp.log(2)**i / mp.factorial(i) for i in range(1, 21)]\n        // >>> shifts = [64 - int(mp.log(c, 2)) for c in coeffs]\n        // >>> print('\\n'.join(hex(int(c * (1 << s))) + ', ' + str(s) for c, s in zip(coeffs, shifts)))\n        int result = int(ONE) << 64;\n        int zpow = z;\n        result += 0xb17217f7d1cf79ab * zpow;\n        zpow = zpow * z / int(ONE);\n        result += 0xf5fdeffc162c7543 * zpow >> (66 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xe35846b82505fc59 * zpow >> (68 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0x9d955b7dd273b94e * zpow >> (70 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xaec3ff3c53398883 * zpow >> (73 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xa184897c363c3b7a * zpow >> (76 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xffe5fe2c45863435 * zpow >> (80 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xb160111d2e411fec * zpow >> (83 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xda929e9caf3e1ed2 * zpow >> (87 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xf267a8ac5c764fb7 * zpow >> (91 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xf465639a8dd92607 * zpow >> (95 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xe1deb287e14c2f15 * zpow >> (99 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xc0b0c98b3687cb14 * zpow >> (103 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0x98a4b26ac3c54b9f * zpow >> (107 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xe1b7421d82010f33 * zpow >> (112 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0x9c744d73cfc59c91 * zpow >> (116 - 64);\n        zpow = zpow * z / int(ONE);\n        result += 0xcc2225a0e12d3eab * zpow >> (121 - 64);\n        zpow = zpow * z / int(ONE);\n        zpow = 0xfb8bb5eda1b4aeb9 * zpow >> (126 - 64);\n        result += zpow;\n        zpow = int(8 * ONE);\n\n        shift -= 64;\n        if (shift >= 0) {\n            if (result >> (256-shift) == 0) {\n                lower = uint(result) << shift;\n                zpow <<= shift; // todo: is this safe?\n                if (lower + uint(zpow) >= lower)\n                    upper = lower + uint(zpow);\n                else\n                    upper = 2**256-1;\n                return (lower, upper);\n            }\n            else\n                return (2**256-1, 2**256-1);\n        }\n        zpow = (zpow >> (-shift)) + 1;\n        lower = uint(result) >> (-shift);\n        upper = lower + uint(zpow);\n        return (lower, upper);\n    }\n\n    /// @dev Returns natural logarithm value of given x\n    /// @param x x\n    /// @return ln(x)\n    function ln(uint x)\n        public\n        pure\n        returns (int)\n    {\n        (int lower, int upper) = log2Bounds(x);\n        return ((upper - lower) / 2 + lower) * int(ONE) / int(LOG2_E);\n    }\n\n    /// @dev Returns estimate of binaryLog(x) given x\n    /// @param x logarithm argument in fixed point\n    /// @param estimationMode whether to return a lower bound, upper bound, or a midpoint\n    /// @return estimate of binaryLog(x) in fixed point\n    function binaryLog(uint x, EstimationMode estimationMode)\n        public\n        pure\n        returns (int)\n    {\n        (int lower, int upper) = log2Bounds(x);\n        if(estimationMode == EstimationMode.LowerBound) {\n            return lower;\n        }\n        if(estimationMode == EstimationMode.UpperBound) {\n            return upper;\n        }\n        if(estimationMode == EstimationMode.Midpoint) {\n            return (upper - lower) / 2 + lower;\n        }\n        revert();\n    }\n\n    /// @dev Returns bounds for value of binaryLog(x) given x\n    /// @param x logarithm argument in fixed point\n    /// @return {\n    ///   \"lower\": \"lower bound of binaryLog(x) in fixed point\",\n    ///   \"upper\": \"upper bound of binaryLog(x) in fixed point\"\n    /// }\n    function log2Bounds(uint x)\n        public\n        pure\n        returns (int lower, int upper)\n    {\n        require(x > 0);\n        // compute ⌊log₂x⌋\n        lower = floorLog2(x);\n\n        uint y;\n        if (lower < 0)\n            y = x << uint(-lower);\n        else\n            y = x >> uint(lower);\n\n        lower *= int(ONE);\n\n        // y = x * 2^(-⌊log₂x⌋)\n        // so 1 <= y < 2\n        // and log₂x = ⌊log₂x⌋ + log₂y\n        for (int m = 1; m <= 64; m++) {\n            if(y == ONE) {\n                break;\n            }\n            y = y * y / ONE;\n            if(y >= 2 * ONE) {\n                lower += int(ONE >> m);\n                y /= 2;\n            }\n        }\n\n        return (lower, lower + 4);\n    }\n\n    /// @dev Returns base 2 logarithm value of given x\n    /// @param x x\n    /// @return logarithmic value\n    function floorLog2(uint x)\n        public\n        pure\n        returns (int lo)\n    {\n        lo = -64;\n        int hi = 193;\n        // I use a shift here instead of / 2 because it floors instead of rounding towards 0\n        int mid = (hi + lo) >> 1;\n        while((lo + 1) < hi) {\n            if (mid < 0 && x << uint(-mid) < ONE || mid >= 0 && x >> uint(mid) < ONE)\n                hi = mid;\n            else\n                lo = mid;\n            mid = (hi + lo) >> 1;\n        }\n    }\n\n    /// @dev Returns maximum of an array\n    /// @param nums Numbers to look through\n    /// @return Maximum number\n    function max(int[] memory nums)\n        public\n        pure\n        returns (int maxNum)\n    {\n        require(nums.length > 0);\n        maxNum = -2**255;\n        for (uint i = 0; i < nums.length; i++)\n            if (nums[i] > maxNum)\n                maxNum = nums[i];\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"input/Fixed192x64Math.sol": {
				"Fixed192x64Math": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "LN2",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								},
								{
									"name": "estimationMode",
									"type": "Fixed192x64Math.EstimationMode"
								}
							],
							"name": "binaryLog",
							"outputs": [
								{
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "log2Bounds",
							"outputs": [
								{
									"name": "lower",
									"type": "int256"
								},
								{
									"name": "upper",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "int256"
								},
								{
									"name": "estimationMode",
									"type": "Fixed192x64Math.EstimationMode"
								}
							],
							"name": "pow2",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "LOG2_E",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "ln",
							"outputs": [
								{
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "floorLog2",
							"outputs": [
								{
									"name": "lo",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "int256"
								}
							],
							"name": "pow2Bounds",
							"outputs": [
								{
									"name": "lower",
									"type": "uint256"
								},
								{
									"name": "upper",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ONE",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "nums",
									"type": "int256[]"
								}
							],
							"name": "max",
							"outputs": [
								{
									"name": "maxNum",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "x",
									"type": "int256"
								}
							],
							"name": "exp",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Alan Lu - <alan.lu@gnosis.pm>Stefan George - <stefan@gnosis.pm>",
						"methods": {
							"binaryLog(uint256,Fixed192x64Math.EstimationMode)": {
								"details": "Returns estimate of binaryLog(x) given x",
								"params": {
									"estimationMode": "whether to return a lower bound, upper bound, or a midpoint",
									"x": "logarithm argument in fixed point"
								},
								"return": "estimate of binaryLog(x) in fixed point"
							},
							"exp(int256)": {
								"details": "Returns natural exponential function value of given x",
								"params": {
									"x": "x"
								},
								"return": "e**x"
							},
							"floorLog2(uint256)": {
								"details": "Returns base 2 logarithm value of given x",
								"params": {
									"x": "x"
								},
								"return": "logarithmic value"
							},
							"ln(uint256)": {
								"details": "Returns natural logarithm value of given x",
								"params": {
									"x": "x"
								},
								"return": "ln(x)"
							},
							"log2Bounds(uint256)": {
								"details": "Returns bounds for value of binaryLog(x) given x",
								"params": {
									"x": "logarithm argument in fixed point"
								},
								"return": "{   \"lower\": \"lower bound of binaryLog(x) in fixed point\",   \"upper\": \"upper bound of binaryLog(x) in fixed point\" }"
							},
							"max(int256[])": {
								"details": "Returns maximum of an array",
								"params": {
									"nums": "Numbers to look through"
								},
								"return": "Maximum number"
							},
							"pow2(int256,Fixed192x64Math.EstimationMode)": {
								"details": "Returns estimate of 2**x given x",
								"params": {
									"estimationMode": "whether to return a lower bound, upper bound, or a midpoint",
									"x": "exponent in fixed point"
								},
								"return": "estimate of 2**x in fixed point"
							},
							"pow2Bounds(int256)": {
								"details": "Returns bounds for value of 2**x given x",
								"params": {
									"x": "exponent in fixed point"
								},
								"return": "{   \"lower\": \"lower bound of 2**x in fixed point\",   \"upper\": \"upper bound of 2**x in fixed point\" }"
							}
						},
						"title": "Fixed192x64Math library - Allows calculation of logarithmic and exponential functions"
					},
					"evm": {
						"assembly": "    /* \"input/Fixed192x64Math.sol\":287:9091  library Fixed192x64Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/Fixed192x64Math.sol\":287:9091  library Fixed192x64Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24d4e90a\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x24d4e90a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x45b8bafc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc1266227\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc2ee3a08\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xccc13814\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe46751e3\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_13:\n      dup1\n      0x02780677\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x137bf798\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1427f168\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1d580123\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x24902e24\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"input/Fixed192x64Math.sol\":512:557  uint public constant LN2 = 0xb17217f7d1cf79ac */\n    tag_2:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":6583:7070  function binaryLog(uint x, EstimationMode estimationMode)... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"input/Fixed192x64Math.sol\":6583:7070  function binaryLog(uint x, EstimationMode estimationMode)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":7346:8090  function log2Bounds(uint x)... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_20:\n        /* \"input/Fixed192x64Math.sol\":7346:8090  function log2Bounds(uint x)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":1574:2058  function pow2(int x, EstimationMode estimationMode)... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"input/Fixed192x64Math.sol\":1574:2058  function pow2(int x, EstimationMode estimationMode)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":563:612  uint public constant LOG2_E = 0x171547652b82fe177 */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":6126:6326  function ln(uint x)... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"input/Fixed192x64Math.sol\":6126:6326  function ln(uint x)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":8204:8692  function floorLog2(uint x)... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"input/Fixed192x64Math.sol\":8204:8692  function floorLog2(uint x)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":2300:6023  function pow2Bounds(int x)... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"input/Fixed192x64Math.sol\":2300:6023  function pow2Bounds(int x)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":459:506  uint public constant ONE =  0x10000000000000000 */\n    tag_10:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n    tag_11:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_42:\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":766:1343  function exp(int x)... */\n    tag_12:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"input/Fixed192x64Math.sol\":766:1343  function exp(int x)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/Fixed192x64Math.sol\":512:557  uint public constant LN2 = 0xb17217f7d1cf79ac */\n    tag_15:\n        /* \"input/Fixed192x64Math.sol\":539:557  0xb17217f7d1cf79ac */\n      0xb17217f7d1cf79ac\n        /* \"input/Fixed192x64Math.sol\":512:557  uint public constant LN2 = 0xb17217f7d1cf79ac */\n      dup2\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":6583:7070  function binaryLog(uint x, EstimationMode estimationMode)... */\n    tag_18:\n        /* \"input/Fixed192x64Math.sol\":6686:6689  int */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":6706:6715  int lower */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":6717:6726  int upper */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":6730:6743  log2Bounds(x) */\n      tag_48\n        /* \"input/Fixed192x64Math.sol\":6741:6742  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":6730:6740  log2Bounds */\n      tag_21\n        /* \"input/Fixed192x64Math.sol\":6730:6743  log2Bounds(x) */\n      jump\t// in\n    tag_48:\n        /* \"input/Fixed192x64Math.sol\":6705:6743  (int lower, int upper) = log2Bounds(x) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":6774:6799  EstimationMode.LowerBound */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":6756:6799  estimationMode == EstimationMode.LowerBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n        /* \"input/Fixed192x64Math.sol\":6756:6770  estimationMode */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":6756:6799  estimationMode == EstimationMode.LowerBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_50\n      jumpi\n      invalid\n    tag_50:\n      eq\n        /* \"input/Fixed192x64Math.sol\":6753:6838  if(estimationMode == EstimationMode.LowerBound) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":6822:6827  lower */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":6815:6827  return lower */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_47)\n        /* \"input/Fixed192x64Math.sol\":6753:6838  if(estimationMode == EstimationMode.LowerBound) {... */\n    tag_51:\n        /* \"input/Fixed192x64Math.sol\":6868:6893  EstimationMode.UpperBound */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":6850:6893  estimationMode == EstimationMode.UpperBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n        /* \"input/Fixed192x64Math.sol\":6850:6864  estimationMode */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":6850:6893  estimationMode == EstimationMode.UpperBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      invalid\n    tag_53:\n      eq\n        /* \"input/Fixed192x64Math.sol\":6847:6932  if(estimationMode == EstimationMode.UpperBound) {... */\n      iszero\n      tag_54\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":6916:6921  upper */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":6909:6921  return upper */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_47)\n        /* \"input/Fixed192x64Math.sol\":6847:6932  if(estimationMode == EstimationMode.UpperBound) {... */\n    tag_54:\n        /* \"input/Fixed192x64Math.sol\":6962:6985  EstimationMode.Midpoint */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":6944:6985  estimationMode == EstimationMode.Midpoint */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      invalid\n    tag_55:\n        /* \"input/Fixed192x64Math.sol\":6944:6958  estimationMode */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":6944:6985  estimationMode == EstimationMode.Midpoint */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_56\n      jumpi\n      invalid\n    tag_56:\n      eq\n        /* \"input/Fixed192x64Math.sol\":6941:7046  if(estimationMode == EstimationMode.Midpoint) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":7030:7035  lower */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":7026:7027  2 */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":7017:7022  lower */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":7009:7014  upper */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":7009:7022  upper - lower */\n      sub\n        /* \"input/Fixed192x64Math.sol\":7008:7027  (upper - lower) / 2 */\n      dup2\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":7008:7035  (upper - lower) / 2 + lower */\n      add\n        /* \"input/Fixed192x64Math.sol\":7001:7035  return (upper - lower) / 2 + lower */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_47)\n        /* \"input/Fixed192x64Math.sol\":6941:7046  if(estimationMode == EstimationMode.Midpoint) {... */\n    tag_57:\n        /* \"input/Fixed192x64Math.sol\":7055:7063  revert() */\n      0x00\n      dup1\n      revert\n        /* \"input/Fixed192x64Math.sol\":6583:7070  function binaryLog(uint x, EstimationMode estimationMode)... */\n    tag_47:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":7346:8090  function log2Bounds(uint x)... */\n    tag_21:\n        /* \"input/Fixed192x64Math.sol\":7419:7428  int lower */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":7430:7439  int upper */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":7467:7468  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":7463:7464  x */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":7463:7468  x > 0 */\n      gt\n        /* \"input/Fixed192x64Math.sol\":7455:7469  require(x > 0) */\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n        /* \"input/Fixed192x64Math.sol\":7520:7532  floorLog2(x) */\n      tag_61\n        /* \"input/Fixed192x64Math.sol\":7530:7531  x */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":7520:7529  floorLog2 */\n      tag_32\n        /* \"input/Fixed192x64Math.sol\":7520:7532  floorLog2(x) */\n      jump\t// in\n    tag_61:\n        /* \"input/Fixed192x64Math.sol\":7512:7532  lower = floorLog2(x) */\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":7543:7549  uint y */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":7571:7572  0 */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":7563:7568  lower */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":7563:7572  lower < 0 */\n      slt\n        /* \"input/Fixed192x64Math.sol\":7559:7654  if (lower < 0)... */\n      iszero\n      tag_62\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":7601:7606  lower */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":7600:7606  -lower */\n      0x00\n      sub\n        /* \"input/Fixed192x64Math.sol\":7590:7591  x */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":7590:7607  x << uint(-lower) */\n      swap1\n      shl\n        /* \"input/Fixed192x64Math.sol\":7586:7607  y = x << uint(-lower) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":7559:7654  if (lower < 0)... */\n      jump(tag_63)\n    tag_62:\n        /* \"input/Fixed192x64Math.sol\":7648:7653  lower */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":7638:7639  x */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":7638:7654  x >> uint(lower) */\n      swap1\n      shr\n        /* \"input/Fixed192x64Math.sol\":7634:7654  y = x >> uint(lower) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":7559:7654  if (lower < 0)... */\n    tag_63:\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":7665:7682  lower *= int(ONE) */\n      dup4\n      mul\n      swap3\n      pop\n        /* \"input/Fixed192x64Math.sol\":7810:7815  int m */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":7818:7819  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":7810:7819  int m = 1 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":7805:8048  for (int m = 1; m <= 64; m++) {... */\n    tag_64:\n        /* \"input/Fixed192x64Math.sol\":7826:7828  64 */\n      0x40\n        /* \"input/Fixed192x64Math.sol\":7821:7822  m */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":7821:7828  m <= 64 */\n      sgt\n        /* \"input/Fixed192x64Math.sol\":7805:8048  for (int m = 1; m <= 64; m++) {... */\n      tag_65\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":7852:7853  y */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":7852:7860  y == ONE */\n      eq\n        /* \"input/Fixed192x64Math.sol\":7849:7900  if(y == ONE) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":7880:7885  break */\n      jump(tag_65)\n        /* \"input/Fixed192x64Math.sol\":7849:7900  if(y == ONE) {... */\n    tag_67:\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":7921:7922  y */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":7917:7918  y */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":7917:7922  y * y */\n      mul\n        /* \"input/Fixed192x64Math.sol\":7917:7928  y * y / ONE */\n      dup2\n      tag_68\n      jumpi\n      invalid\n    tag_68:\n      div\n        /* \"input/Fixed192x64Math.sol\":7913:7928  y = y * y / ONE */\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":7950:7951  2 */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":7950:7957  2 * ONE */\n      mul\n        /* \"input/Fixed192x64Math.sol\":7945:7946  y */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":7945:7957  y >= 2 * ONE */\n      lt\n        /* \"input/Fixed192x64Math.sol\":7942:8038  if(y >= 2 * ONE) {... */\n      tag_69\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":7997:7998  m */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":7990:7998  ONE >> m */\n      0x00\n      dup3\n      slt\n      iszero\n      tag_70\n      jumpi\n      invalid\n    tag_70:\n      swap1\n      shr\n        /* \"input/Fixed192x64Math.sol\":7977:7999  lower += int(ONE >> m) */\n      dup5\n      add\n      swap4\n      pop\n        /* \"input/Fixed192x64Math.sol\":8022:8023  2 */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":8017:8023  y /= 2 */\n      dup3\n      dup2\n      tag_71\n      jumpi\n      invalid\n    tag_71:\n      div\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":7942:8038  if(y >= 2 * ONE) {... */\n    tag_69:\n        /* \"input/Fixed192x64Math.sol\":7830:7833  m++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"input/Fixed192x64Math.sol\":7805:8048  for (int m = 1; m <= 64; m++) {... */\n      jump(tag_64)\n    tag_65:\n      pop\n        /* \"input/Fixed192x64Math.sol\":8066:8071  lower */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":8081:8082  4 */\n      0x04\n        /* \"input/Fixed192x64Math.sol\":8073:8078  lower */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":8073:8082  lower + 4 */\n      add\n        /* \"input/Fixed192x64Math.sol\":8058:8083  return (lower, lower + 4) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"input/Fixed192x64Math.sol\":7346:8090  function log2Bounds(uint x)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":1574:2058  function pow2(int x, EstimationMode estimationMode)... */\n    tag_24:\n        /* \"input/Fixed192x64Math.sol\":1671:1675  uint */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":1692:1702  uint lower */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":1704:1714  uint upper */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":1718:1731  pow2Bounds(x) */\n      tag_73\n        /* \"input/Fixed192x64Math.sol\":1729:1730  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":1718:1728  pow2Bounds */\n      tag_35\n        /* \"input/Fixed192x64Math.sol\":1718:1731  pow2Bounds(x) */\n      jump\t// in\n    tag_73:\n        /* \"input/Fixed192x64Math.sol\":1691:1731  (uint lower, uint upper) = pow2Bounds(x) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":1762:1787  EstimationMode.LowerBound */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":1744:1787  estimationMode == EstimationMode.LowerBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_74\n      jumpi\n      invalid\n    tag_74:\n        /* \"input/Fixed192x64Math.sol\":1744:1758  estimationMode */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":1744:1787  estimationMode == EstimationMode.LowerBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_75\n      jumpi\n      invalid\n    tag_75:\n      eq\n        /* \"input/Fixed192x64Math.sol\":1741:1826  if(estimationMode == EstimationMode.LowerBound) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":1810:1815  lower */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":1803:1815  return lower */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_72)\n        /* \"input/Fixed192x64Math.sol\":1741:1826  if(estimationMode == EstimationMode.LowerBound) {... */\n    tag_76:\n        /* \"input/Fixed192x64Math.sol\":1856:1881  EstimationMode.UpperBound */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":1838:1881  estimationMode == EstimationMode.UpperBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n        /* \"input/Fixed192x64Math.sol\":1838:1852  estimationMode */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":1838:1881  estimationMode == EstimationMode.UpperBound */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n      eq\n        /* \"input/Fixed192x64Math.sol\":1835:1920  if(estimationMode == EstimationMode.UpperBound) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":1904:1909  upper */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":1897:1909  return upper */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_72)\n        /* \"input/Fixed192x64Math.sol\":1835:1920  if(estimationMode == EstimationMode.UpperBound) {... */\n    tag_79:\n        /* \"input/Fixed192x64Math.sol\":1950:1973  EstimationMode.Midpoint */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":1932:1973  estimationMode == EstimationMode.Midpoint */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_80\n      jumpi\n      invalid\n    tag_80:\n        /* \"input/Fixed192x64Math.sol\":1932:1946  estimationMode */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":1932:1973  estimationMode == EstimationMode.Midpoint */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_81\n      jumpi\n      invalid\n    tag_81:\n      eq\n        /* \"input/Fixed192x64Math.sol\":1929:2034  if(estimationMode == EstimationMode.Midpoint) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":2018:2023  lower */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":2014:2015  2 */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":2005:2010  lower */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":1997:2002  upper */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":1997:2010  upper - lower */\n      sub\n        /* \"input/Fixed192x64Math.sol\":1996:2015  (upper - lower) / 2 */\n      dup2\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      div\n        /* \"input/Fixed192x64Math.sol\":1996:2023  (upper - lower) / 2 + lower */\n      add\n        /* \"input/Fixed192x64Math.sol\":1989:2023  return (upper - lower) / 2 + lower */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_72)\n        /* \"input/Fixed192x64Math.sol\":1929:2034  if(estimationMode == EstimationMode.Midpoint) {... */\n    tag_82:\n        /* \"input/Fixed192x64Math.sol\":2043:2051  revert() */\n      0x00\n      dup1\n      revert\n        /* \"input/Fixed192x64Math.sol\":1574:2058  function pow2(int x, EstimationMode estimationMode)... */\n    tag_72:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":563:612  uint public constant LOG2_E = 0x171547652b82fe177 */\n    tag_26:\n        /* \"input/Fixed192x64Math.sol\":593:612  0x171547652b82fe177 */\n      0x0171547652b82fe177\n        /* \"input/Fixed192x64Math.sol\":563:612  uint public constant LOG2_E = 0x171547652b82fe177 */\n      dup2\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":6126:6326  function ln(uint x)... */\n    tag_29:\n        /* \"input/Fixed192x64Math.sol\":6191:6194  int */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":6211:6220  int lower */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":6222:6231  int upper */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":6235:6248  log2Bounds(x) */\n      tag_85\n        /* \"input/Fixed192x64Math.sol\":6246:6247  x */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":6235:6245  log2Bounds */\n      tag_21\n        /* \"input/Fixed192x64Math.sol\":6235:6248  log2Bounds(x) */\n      jump\t// in\n    tag_85:\n        /* \"input/Fixed192x64Math.sol\":6210:6248  (int lower, int upper) = log2Bounds(x) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":593:612  0x171547652b82fe177 */\n      0x0171547652b82fe177\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":6288:6293  lower */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":6284:6285  2 */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":6275:6280  lower */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":6267:6272  upper */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":6267:6280  upper - lower */\n      sub\n        /* \"input/Fixed192x64Math.sol\":6266:6285  (upper - lower) / 2 */\n      dup2\n      tag_86\n      jumpi\n      invalid\n    tag_86:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":6266:6293  (upper - lower) / 2 + lower */\n      add\n        /* \"input/Fixed192x64Math.sol\":6265:6305  ((upper - lower) / 2 + lower) * int(ONE) */\n      mul\n        /* \"input/Fixed192x64Math.sol\":6265:6319  ((upper - lower) / 2 + lower) * int(ONE) / int(LOG2_E) */\n      dup2\n      tag_87\n      jumpi\n      invalid\n    tag_87:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":6258:6319  return ((upper - lower) / 2 + lower) * int(ONE) / int(LOG2_E) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"input/Fixed192x64Math.sol\":6126:6326  function ln(uint x)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":8204:8692  function floorLog2(uint x)... */\n    tag_32:\n        /* \"input/Fixed192x64Math.sol\":8276:8282  int lo */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":8303:8306  -64 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0\n        /* \"input/Fixed192x64Math.sol\":8298:8306  lo = -64 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":8316:8322  int hi */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":8325:8328  193 */\n      0xc1\n        /* \"input/Fixed192x64Math.sol\":8316:8328  int hi = 193 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":8431:8438  int mid */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":8454:8455  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":8447:8449  lo */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":8442:8444  hi */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":8442:8449  hi + lo */\n      add\n        /* \"input/Fixed192x64Math.sol\":8441:8455  (hi + lo) >> 1 */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":8431:8455  int mid = (hi + lo) >> 1 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":8465:8686  while((lo + 1) < hi) {... */\n    tag_89:\n        /* \"input/Fixed192x64Math.sol\":8482:8484  hi */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":8477:8478  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":8472:8474  lo */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":8472:8478  lo + 1 */\n      add\n        /* \"input/Fixed192x64Math.sol\":8471:8484  (lo + 1) < hi */\n      slt\n        /* \"input/Fixed192x64Math.sol\":8465:8686  while((lo + 1) < hi) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":8510:8511  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":8504:8507  mid */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":8504:8511  mid < 0 */\n      slt\n        /* \"input/Fixed192x64Math.sol\":8504:8536  mid < 0 && x << uint(-mid) < ONE */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":8526:8529  mid */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":8525:8529  -mid */\n      0x00\n      sub\n        /* \"input/Fixed192x64Math.sol\":8515:8516  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":8515:8530  x << uint(-mid) */\n      swap1\n      shl\n        /* \"input/Fixed192x64Math.sol\":8515:8536  x << uint(-mid) < ONE */\n      lt\n        /* \"input/Fixed192x64Math.sol\":8504:8536  mid < 0 && x << uint(-mid) < ONE */\n    tag_91:\n        /* \"input/Fixed192x64Math.sol\":8504:8572  mid < 0 && x << uint(-mid) < ONE || mid >= 0 && x >> uint(mid) < ONE */\n      dup1\n      tag_92\n      jumpi\n      pop\n        /* \"input/Fixed192x64Math.sol\":8547:8548  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":8540:8543  mid */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":8540:8548  mid >= 0 */\n      slt\n      iszero\n        /* \"input/Fixed192x64Math.sol\":8540:8572  mid >= 0 && x >> uint(mid) < ONE */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":8562:8565  mid */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":8552:8553  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":8552:8566  x >> uint(mid) */\n      swap1\n      shr\n        /* \"input/Fixed192x64Math.sol\":8552:8572  x >> uint(mid) < ONE */\n      lt\n        /* \"input/Fixed192x64Math.sol\":8540:8572  mid >= 0 && x >> uint(mid) < ONE */\n    tag_93:\n        /* \"input/Fixed192x64Math.sol\":8504:8572  mid < 0 && x << uint(-mid) < ONE || mid >= 0 && x >> uint(mid) < ONE */\n    tag_92:\n        /* \"input/Fixed192x64Math.sol\":8500:8641  if (mid < 0 && x << uint(-mid) < ONE || mid >= 0 && x >> uint(mid) < ONE)... */\n      iszero\n      tag_94\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":8595:8598  mid */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":8590:8598  hi = mid */\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":8500:8641  if (mid < 0 && x << uint(-mid) < ONE || mid >= 0 && x >> uint(mid) < ONE)... */\n      jump(tag_95)\n    tag_94:\n        /* \"input/Fixed192x64Math.sol\":8638:8641  mid */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":8633:8641  lo = mid */\n      swap3\n      pop\n        /* \"input/Fixed192x64Math.sol\":8500:8641  if (mid < 0 && x << uint(-mid) < ONE || mid >= 0 && x >> uint(mid) < ONE)... */\n    tag_95:\n        /* \"input/Fixed192x64Math.sol\":8674:8675  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":8667:8669  lo */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":8662:8664  hi */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":8662:8669  hi + lo */\n      add\n        /* \"input/Fixed192x64Math.sol\":8661:8675  (hi + lo) >> 1 */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":8655:8675  mid = (hi + lo) >> 1 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":8465:8686  while((lo + 1) < hi) {... */\n      jump(tag_89)\n    tag_90:\n        /* \"input/Fixed192x64Math.sol\":8204:8692  function floorLog2(uint x)... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":2300:6023  function pow2Bounds(int x)... */\n    tag_35:\n        /* \"input/Fixed192x64Math.sol\":2372:2382  uint lower */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":2384:2394  uint upper */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":2545:2567  3541774862152233910271 */\n      0xbfffffffffffffffff\n        /* \"input/Fixed192x64Math.sol\":2540:2541  x */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":2540:2567  x <= 3541774862152233910271 */\n      sgt\n      iszero\n        /* \"input/Fixed192x64Math.sol\":2532:2568  require(x <= 3541774862152233910271) */\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n        /* \"input/Fixed192x64Math.sol\":2699:2722  -1180591620717411303424 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffc00000000000000000\n        /* \"input/Fixed192x64Math.sol\":2695:2696  x */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":2695:2722  x < -1180591620717411303424 */\n      slt\n        /* \"input/Fixed192x64Math.sol\":2691:2749  if (x < -1180591620717411303424)... */\n      iszero\n      tag_98\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":2744:2745  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":2747:2748  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":2736:2749  return (0, 1) */\n      dup2\n      swap2\n      pop\n      dup1\n      swap1\n      pop\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_96)\n        /* \"input/Fixed192x64Math.sol\":2691:2749  if (x < -1180591620717411303424)... */\n    tag_98:\n        /* \"input/Fixed192x64Math.sol\":2924:2933  int shift */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":2943:2948  int z */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":2967:2968  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":2962:2963  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":2962:2968  x >= 0 */\n      slt\n        /* \"input/Fixed192x64Math.sol\":2958:3152  if (x >= 0) {... */\n      tag_99\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":2992:2993  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":2992:3004  x / int(ONE) */\n      dup2\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":2984:3004  shift = x / int(ONE) */\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":3022:3023  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":3022:3034  x % int(ONE) */\n      dup2\n      tag_101\n      jumpi\n      invalid\n    tag_101:\n      smod\n        /* \"input/Fixed192x64Math.sol\":3018:3034  z = x % int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":2958:3152  if (x >= 0) {... */\n      jump(tag_102)\n    tag_99:\n        /* \"input/Fixed192x64Math.sol\":3100:3101  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":3084:3085  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":3082:3083  x */\n      dup8\n        /* \"input/Fixed192x64Math.sol\":3082:3085  x+1 */\n      add\n        /* \"input/Fixed192x64Math.sol\":3081:3097  (x+1) / int(ONE) */\n      dup2\n      tag_103\n      jumpi\n      invalid\n    tag_103:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":3081:3101  (x+1) / int(ONE) - 1 */\n      sub\n        /* \"input/Fixed192x64Math.sol\":3073:3101  shift = (x+1) / int(ONE) - 1 */\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":3135:3140  shift */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":3124:3140  int(ONE) * shift */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3119:3120  x */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":3119:3141  x - (int(ONE) * shift) */\n      sub\n        /* \"input/Fixed192x64Math.sol\":3115:3141  z = x - (int(ONE) * shift) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":2958:3152  if (x >= 0) {... */\n    tag_102:\n        /* \"input/Fixed192x64Math.sol\":3173:3174  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":3168:3169  z */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":3168:3174  z >= 0 */\n      slt\n      iszero\n        /* \"input/Fixed192x64Math.sol\":3161:3175  assert(z >= 0) */\n      tag_104\n      jumpi\n      invalid\n    tag_104:\n        /* \"input/Fixed192x64Math.sol\":3643:3653  int result */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":3668:3670  64 */\n      0x40\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":3656:3670  int(ONE) << 64 */\n      swap1\n      shl\n        /* \"input/Fixed192x64Math.sol\":3643:3670  int result = int(ONE) << 64 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":3680:3688  int zpow */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":3691:3692  z */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":3680:3692  int zpow = z */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":3733:3737  zpow */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":3712:3730  0xb17217f7d1cf79ab */\n      0xb17217f7d1cf79ab\n        /* \"input/Fixed192x64Math.sol\":3712:3737  0xb17217f7d1cf79ab * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3702:3737  result += 0xb17217f7d1cf79ab * zpow */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":3761:3762  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":3754:3758  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":3754:3762  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3754:3773  zpow * z / int(ONE) */\n      dup2\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":3747:3773  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":3823:3830  66 - 64 */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":3814:3818  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":3793:3811  0xf5fdeffc162c7543 */\n      0xf5fdeffc162c7543\n        /* \"input/Fixed192x64Math.sol\":3793:3818  0xf5fdeffc162c7543 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3793:3831  0xf5fdeffc162c7543 * zpow >> (66 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":3783:3831  result += 0xf5fdeffc162c7543 * zpow >> (66 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":3855:3856  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":3848:3852  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":3848:3856  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3848:3867  zpow * z / int(ONE) */\n      dup2\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":3841:3867  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":3917:3924  68 - 64 */\n      0x04\n        /* \"input/Fixed192x64Math.sol\":3908:3912  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":3887:3905  0xe35846b82505fc59 */\n      0xe35846b82505fc59\n        /* \"input/Fixed192x64Math.sol\":3887:3912  0xe35846b82505fc59 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3887:3925  0xe35846b82505fc59 * zpow >> (68 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":3877:3925  result += 0xe35846b82505fc59 * zpow >> (68 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":3949:3950  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":3942:3946  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":3942:3950  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3942:3961  zpow * z / int(ONE) */\n      dup2\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":3935:3961  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4011:4018  70 - 64 */\n      0x06\n        /* \"input/Fixed192x64Math.sol\":4002:4006  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":3981:3999  0x9d955b7dd273b94e */\n      0x9d955b7dd273b94e\n        /* \"input/Fixed192x64Math.sol\":3981:4006  0x9d955b7dd273b94e * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":3981:4019  0x9d955b7dd273b94e * zpow >> (70 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":3971:4019  result += 0x9d955b7dd273b94e * zpow >> (70 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4043:4044  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4036:4040  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4036:4044  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4036:4055  zpow * z / int(ONE) */\n      dup2\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4029:4055  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4105:4112  73 - 64 */\n      0x09\n        /* \"input/Fixed192x64Math.sol\":4096:4100  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4075:4093  0xaec3ff3c53398883 */\n      0xaec3ff3c53398883\n        /* \"input/Fixed192x64Math.sol\":4075:4100  0xaec3ff3c53398883 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4075:4113  0xaec3ff3c53398883 * zpow >> (73 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4065:4113  result += 0xaec3ff3c53398883 * zpow >> (73 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4137:4138  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4130:4134  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4130:4138  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4130:4149  zpow * z / int(ONE) */\n      dup2\n      tag_109\n      jumpi\n      invalid\n    tag_109:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4123:4149  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4199:4206  76 - 64 */\n      0x0c\n        /* \"input/Fixed192x64Math.sol\":4190:4194  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4169:4187  0xa184897c363c3b7a */\n      0xa184897c363c3b7a\n        /* \"input/Fixed192x64Math.sol\":4169:4194  0xa184897c363c3b7a * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4169:4207  0xa184897c363c3b7a * zpow >> (76 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4159:4207  result += 0xa184897c363c3b7a * zpow >> (76 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4231:4232  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4224:4228  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4224:4232  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4224:4243  zpow * z / int(ONE) */\n      dup2\n      tag_110\n      jumpi\n      invalid\n    tag_110:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4217:4243  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4293:4300  80 - 64 */\n      0x10\n        /* \"input/Fixed192x64Math.sol\":4284:4288  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4263:4281  0xffe5fe2c45863435 */\n      0xffe5fe2c45863435\n        /* \"input/Fixed192x64Math.sol\":4263:4288  0xffe5fe2c45863435 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4263:4301  0xffe5fe2c45863435 * zpow >> (80 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4253:4301  result += 0xffe5fe2c45863435 * zpow >> (80 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4325:4326  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4318:4322  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4318:4326  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4318:4337  zpow * z / int(ONE) */\n      dup2\n      tag_111\n      jumpi\n      invalid\n    tag_111:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4311:4337  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4387:4394  83 - 64 */\n      0x13\n        /* \"input/Fixed192x64Math.sol\":4378:4382  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4357:4375  0xb160111d2e411fec */\n      0xb160111d2e411fec\n        /* \"input/Fixed192x64Math.sol\":4357:4382  0xb160111d2e411fec * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4357:4395  0xb160111d2e411fec * zpow >> (83 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4347:4395  result += 0xb160111d2e411fec * zpow >> (83 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4419:4420  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4412:4416  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4412:4420  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4412:4431  zpow * z / int(ONE) */\n      dup2\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4405:4431  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4481:4488  87 - 64 */\n      0x17\n        /* \"input/Fixed192x64Math.sol\":4472:4476  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4451:4469  0xda929e9caf3e1ed2 */\n      0xda929e9caf3e1ed2\n        /* \"input/Fixed192x64Math.sol\":4451:4476  0xda929e9caf3e1ed2 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4451:4489  0xda929e9caf3e1ed2 * zpow >> (87 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4441:4489  result += 0xda929e9caf3e1ed2 * zpow >> (87 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4513:4514  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4506:4510  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4506:4514  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4506:4525  zpow * z / int(ONE) */\n      dup2\n      tag_113\n      jumpi\n      invalid\n    tag_113:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4499:4525  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4575:4582  91 - 64 */\n      0x1b\n        /* \"input/Fixed192x64Math.sol\":4566:4570  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4545:4563  0xf267a8ac5c764fb7 */\n      0xf267a8ac5c764fb7\n        /* \"input/Fixed192x64Math.sol\":4545:4570  0xf267a8ac5c764fb7 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4545:4583  0xf267a8ac5c764fb7 * zpow >> (91 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4535:4583  result += 0xf267a8ac5c764fb7 * zpow >> (91 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4607:4608  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4600:4604  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4600:4608  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4600:4619  zpow * z / int(ONE) */\n      dup2\n      tag_114\n      jumpi\n      invalid\n    tag_114:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4593:4619  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4669:4676  95 - 64 */\n      0x1f\n        /* \"input/Fixed192x64Math.sol\":4660:4664  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4639:4657  0xf465639a8dd92607 */\n      0xf465639a8dd92607\n        /* \"input/Fixed192x64Math.sol\":4639:4664  0xf465639a8dd92607 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4639:4677  0xf465639a8dd92607 * zpow >> (95 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4629:4677  result += 0xf465639a8dd92607 * zpow >> (95 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4701:4702  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4694:4698  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4694:4702  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4694:4713  zpow * z / int(ONE) */\n      dup2\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4687:4713  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4763:4770  99 - 64 */\n      0x23\n        /* \"input/Fixed192x64Math.sol\":4754:4758  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4733:4751  0xe1deb287e14c2f15 */\n      0xe1deb287e14c2f15\n        /* \"input/Fixed192x64Math.sol\":4733:4758  0xe1deb287e14c2f15 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4733:4771  0xe1deb287e14c2f15 * zpow >> (99 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4723:4771  result += 0xe1deb287e14c2f15 * zpow >> (99 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4795:4796  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4788:4792  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4788:4796  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4788:4807  zpow * z / int(ONE) */\n      dup2\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4781:4807  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4857:4865  103 - 64 */\n      0x27\n        /* \"input/Fixed192x64Math.sol\":4848:4852  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4827:4845  0xc0b0c98b3687cb14 */\n      0xc0b0c98b3687cb14\n        /* \"input/Fixed192x64Math.sol\":4827:4852  0xc0b0c98b3687cb14 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4827:4866  0xc0b0c98b3687cb14 * zpow >> (103 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4817:4866  result += 0xc0b0c98b3687cb14 * zpow >> (103 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4890:4891  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4883:4887  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4883:4891  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4883:4902  zpow * z / int(ONE) */\n      dup2\n      tag_117\n      jumpi\n      invalid\n    tag_117:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4876:4902  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":4952:4960  107 - 64 */\n      0x2b\n        /* \"input/Fixed192x64Math.sol\":4943:4947  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":4922:4940  0x98a4b26ac3c54b9f */\n      0x98a4b26ac3c54b9f\n        /* \"input/Fixed192x64Math.sol\":4922:4947  0x98a4b26ac3c54b9f * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4922:4961  0x98a4b26ac3c54b9f * zpow >> (107 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":4912:4961  result += 0x98a4b26ac3c54b9f * zpow >> (107 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":4985:4986  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":4978:4982  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":4978:4986  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":4978:4997  zpow * z / int(ONE) */\n      dup2\n      tag_118\n      jumpi\n      invalid\n    tag_118:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":4971:4997  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5047:5055  112 - 64 */\n      0x30\n        /* \"input/Fixed192x64Math.sol\":5038:5042  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":5017:5035  0xe1b7421d82010f33 */\n      0xe1b7421d82010f33\n        /* \"input/Fixed192x64Math.sol\":5017:5042  0xe1b7421d82010f33 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5017:5056  0xe1b7421d82010f33 * zpow >> (112 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":5007:5056  result += 0xe1b7421d82010f33 * zpow >> (112 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":5080:5081  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":5073:5077  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":5073:5081  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5073:5092  zpow * z / int(ONE) */\n      dup2\n      tag_119\n      jumpi\n      invalid\n    tag_119:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":5066:5092  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5142:5150  116 - 64 */\n      0x34\n        /* \"input/Fixed192x64Math.sol\":5133:5137  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":5112:5130  0x9c744d73cfc59c91 */\n      0x9c744d73cfc59c91\n        /* \"input/Fixed192x64Math.sol\":5112:5137  0x9c744d73cfc59c91 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5112:5151  0x9c744d73cfc59c91 * zpow >> (116 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":5102:5151  result += 0x9c744d73cfc59c91 * zpow >> (116 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":5175:5176  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":5168:5172  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":5168:5176  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5168:5187  zpow * z / int(ONE) */\n      dup2\n      tag_120\n      jumpi\n      invalid\n    tag_120:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":5161:5187  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5237:5245  121 - 64 */\n      0x39\n        /* \"input/Fixed192x64Math.sol\":5228:5232  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":5207:5225  0xcc2225a0e12d3eab */\n      0xcc2225a0e12d3eab\n        /* \"input/Fixed192x64Math.sol\":5207:5232  0xcc2225a0e12d3eab * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5207:5246  0xcc2225a0e12d3eab * zpow >> (121 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":5197:5246  result += 0xcc2225a0e12d3eab * zpow >> (121 - 64) */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":5270:5271  z */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":5263:5267  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":5263:5271  zpow * z */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5263:5282  zpow * z / int(ONE) */\n      dup2\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":5256:5282  zpow = zpow * z / int(ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5329:5337  126 - 64 */\n      0x3e\n        /* \"input/Fixed192x64Math.sol\":5320:5324  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":5299:5317  0xfb8bb5eda1b4aeb9 */\n      0xfb8bb5eda1b4aeb9\n        /* \"input/Fixed192x64Math.sol\":5299:5324  0xfb8bb5eda1b4aeb9 * zpow */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5299:5338  0xfb8bb5eda1b4aeb9 * zpow >> (126 - 64) */\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":5292:5338  zpow = 0xfb8bb5eda1b4aeb9 * zpow >> (126 - 64) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5358:5362  zpow */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":5348:5362  result += zpow */\n      dup3\n      add\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":5383:5384  8 */\n      0x08\n        /* \"input/Fixed192x64Math.sol\":5383:5390  8 * ONE */\n      mul\n        /* \"input/Fixed192x64Math.sol\":5372:5391  zpow = int(8 * ONE) */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5411:5413  64 */\n      0x40\n        /* \"input/Fixed192x64Math.sol\":5402:5413  shift -= 64 */\n      dup5\n      sub\n      swap4\n      pop\n        /* \"input/Fixed192x64Math.sol\":5436:5437  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":5427:5432  shift */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":5427:5437  shift >= 0 */\n      slt\n        /* \"input/Fixed192x64Math.sol\":5423:5869  if (shift >= 0) {... */\n      tag_122\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":5482:5483  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":5472:5477  shift */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":5468:5471  256 */\n      0x0100\n        /* \"input/Fixed192x64Math.sol\":5468:5477  256-shift */\n      sub\n        /* \"input/Fixed192x64Math.sol\":5457:5463  result */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":5457:5478  result >> (256-shift) */\n      0x00\n      dup3\n      slt\n      iszero\n      tag_123\n      jumpi\n      invalid\n    tag_123:\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":5457:5483  result >> (256-shift) == 0 */\n      eq\n        /* \"input/Fixed192x64Math.sol\":5453:5858  if (result >> (256-shift) == 0) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":5527:5532  shift */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":5516:5522  result */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":5511:5532  uint(result) << shift */\n      0x00\n      dup3\n      slt\n      iszero\n      tag_125\n      jumpi\n      invalid\n    tag_125:\n      swap1\n      shl\n        /* \"input/Fixed192x64Math.sol\":5503:5532  lower = uint(result) << shift */\n      swap6\n      pop\n        /* \"input/Fixed192x64Math.sol\":5559:5564  shift */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":5550:5564  zpow <<= shift */\n      dup2\n      0x00\n      dup3\n      slt\n      iszero\n      tag_126\n      jumpi\n      invalid\n    tag_126:\n      swap1\n      shl\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5631:5636  lower */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":5622:5626  zpow */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":5609:5614  lower */\n      dup8\n        /* \"input/Fixed192x64Math.sol\":5609:5627  lower + uint(zpow) */\n      add\n        /* \"input/Fixed192x64Math.sol\":5609:5636  lower + uint(zpow) >= lower */\n      lt\n        /* \"input/Fixed192x64Math.sol\":5605:5743  if (lower + uint(zpow) >= lower)... */\n      tag_127\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":5679:5683  zpow */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":5666:5671  lower */\n      dup7\n        /* \"input/Fixed192x64Math.sol\":5666:5684  lower + uint(zpow) */\n      add\n        /* \"input/Fixed192x64Math.sol\":5658:5684  upper = lower + uint(zpow) */\n      swap5\n      pop\n        /* \"input/Fixed192x64Math.sol\":5605:5743  if (lower + uint(zpow) >= lower)... */\n      jump(tag_128)\n    tag_127:\n        /* \"input/Fixed192x64Math.sol\":5735:5743  2**256-1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"input/Fixed192x64Math.sol\":5727:5743  upper = 2**256-1 */\n      swap5\n      pop\n        /* \"input/Fixed192x64Math.sol\":5605:5743  if (lower + uint(zpow) >= lower)... */\n    tag_128:\n        /* \"input/Fixed192x64Math.sol\":5769:5774  lower */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":5776:5781  upper */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":5761:5782  return (lower, upper) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_96)\n        /* \"input/Fixed192x64Math.sol\":5453:5858  if (result >> (256-shift) == 0) {... */\n    tag_124:\n        /* \"input/Fixed192x64Math.sol\":5839:5847  2**256-1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"input/Fixed192x64Math.sol\":5849:5857  2**256-1 */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":5831:5858  return (2**256-1, 2**256-1) */\n      dup2\n      swap2\n      pop\n      dup1\n      swap1\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_96)\n        /* \"input/Fixed192x64Math.sol\":5423:5869  if (shift >= 0) {... */\n    tag_122:\n        /* \"input/Fixed192x64Math.sol\":5906:5907  1 */\n      0x01\n        /* \"input/Fixed192x64Math.sol\":5896:5901  shift */\n      dup5\n        /* \"input/Fixed192x64Math.sol\":5895:5901  -shift */\n      0x00\n      sub\n        /* \"input/Fixed192x64Math.sol\":5886:5890  zpow */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":5886:5902  zpow >> (-shift) */\n      0x00\n      dup3\n      slt\n      iszero\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n      swap1\n      sar\n        /* \"input/Fixed192x64Math.sol\":5885:5907  (zpow >> (-shift)) + 1 */\n      add\n        /* \"input/Fixed192x64Math.sol\":5878:5907  zpow = (zpow >> (-shift)) + 1 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":5943:5948  shift */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":5942:5948  -shift */\n      0x00\n      sub\n        /* \"input/Fixed192x64Math.sol\":5930:5936  result */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":5925:5949  uint(result) >> (-shift) */\n      0x00\n      dup3\n      slt\n      iszero\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n      swap1\n      shr\n        /* \"input/Fixed192x64Math.sol\":5917:5949  lower = uint(result) >> (-shift) */\n      swap6\n      pop\n        /* \"input/Fixed192x64Math.sol\":5980:5984  zpow */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":5967:5972  lower */\n      dup7\n        /* \"input/Fixed192x64Math.sol\":5967:5985  lower + uint(zpow) */\n      add\n        /* \"input/Fixed192x64Math.sol\":5959:5985  upper = lower + uint(zpow) */\n      swap5\n      pop\n        /* \"input/Fixed192x64Math.sol\":6003:6008  lower */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":6010:6015  upper */\n      dup6\n        /* \"input/Fixed192x64Math.sol\":5995:6016  return (lower, upper) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"input/Fixed192x64Math.sol\":2300:6023  function pow2Bounds(int x)... */\n    tag_96:\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":459:506  uint public constant ONE =  0x10000000000000000 */\n    tag_37:\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":459:506  uint public constant ONE =  0x10000000000000000 */\n      dup2\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n    tag_43:\n        /* \"input/Fixed192x64Math.sol\":8891:8901  int maxNum */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":8939:8940  0 */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":8925:8929  nums */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":8925:8936  nums.length */\n      mload\n        /* \"input/Fixed192x64Math.sol\":8925:8940  nums.length > 0 */\n      gt\n        /* \"input/Fixed192x64Math.sol\":8917:8941  require(nums.length > 0) */\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n        /* \"input/Fixed192x64Math.sol\":8960:8967  -2**255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"input/Fixed192x64Math.sol\":8951:8967  maxNum = -2**255 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":8982:8988  uint i */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":8991:8992  0 */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":8982:8992  uint i = 0 */\n      swap1\n      pop\n        /* \"input/Fixed192x64Math.sol\":8977:9082  for (uint i = 0; i < nums.length; i++)... */\n    tag_134:\n        /* \"input/Fixed192x64Math.sol\":8998:9002  nums */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":8998:9009  nums.length */\n      mload\n        /* \"input/Fixed192x64Math.sol\":8994:8995  i */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":8994:9009  i < nums.length */\n      lt\n        /* \"input/Fixed192x64Math.sol\":8977:9082  for (uint i = 0; i < nums.length; i++)... */\n      iszero\n      tag_135\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":9042:9048  maxNum */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":9032:9036  nums */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":9037:9038  i */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":9032:9039  nums[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      invalid\n    tag_137:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"input/Fixed192x64Math.sol\":9032:9048  nums[i] > maxNum */\n      sgt\n        /* \"input/Fixed192x64Math.sol\":9028:9082  if (nums[i] > maxNum)... */\n      iszero\n      tag_138\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":9075:9079  nums */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":9080:9081  i */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":9075:9082  nums[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_139\n      jumpi\n      invalid\n    tag_139:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"input/Fixed192x64Math.sol\":9066:9082  maxNum = nums[i] */\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":9028:9082  if (nums[i] > maxNum)... */\n    tag_138:\n        /* \"input/Fixed192x64Math.sol\":9011:9014  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"input/Fixed192x64Math.sol\":8977:9082  for (uint i = 0; i < nums.length; i++)... */\n      jump(tag_134)\n    tag_135:\n      pop\n        /* \"input/Fixed192x64Math.sol\":8814:9089  function max(int[] memory nums)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"input/Fixed192x64Math.sol\":766:1343  function exp(int x)... */\n    tag_46:\n        /* \"input/Fixed192x64Math.sol\":831:835  uint */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":983:1005  2454971259878909886679 */\n      0x851591f9dd5b9b40d7\n        /* \"input/Fixed192x64Math.sol\":978:979  x */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":978:1005  x <= 2454971259878909886679 */\n      sgt\n      iszero\n        /* \"input/Fixed192x64Math.sol\":970:1006  require(x <= 2454971259878909886679) */\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n        /* \"input/Fixed192x64Math.sol\":1135:1157  -818323753292969962227 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffd3a37a020b8c21950d\n        /* \"input/Fixed192x64Math.sol\":1130:1131  x */\n      dup3\n        /* \"input/Fixed192x64Math.sol\":1130:1157  x <= -818323753292969962227 */\n      sgt\n        /* \"input/Fixed192x64Math.sol\":1126:1179  if (x <= -818323753292969962227)... */\n      tag_142\n      jumpi\n        /* \"input/Fixed192x64Math.sol\":1178:1179  0 */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":1171:1179  return 0 */\n      swap1\n      pop\n      jump(tag_140)\n        /* \"input/Fixed192x64Math.sol\":1126:1179  if (x <= -818323753292969962227)... */\n    tag_142:\n        /* \"input/Fixed192x64Math.sol\":1231:1241  uint lower */\n      0x00\n        /* \"input/Fixed192x64Math.sol\":1243:1253  uint upper */\n      dup1\n        /* \"input/Fixed192x64Math.sol\":1257:1292  pow2Bounds(x * int(ONE) / int(LN2)) */\n      tag_143\n        /* \"input/Fixed192x64Math.sol\":539:557  0xb17217f7d1cf79ac */\n      0xb17217f7d1cf79ac\n        /* \"input/Fixed192x64Math.sol\":487:506  0x10000000000000000 */\n      0x010000000000000000\n        /* \"input/Fixed192x64Math.sol\":1268:1269  x */\n      dup7\n        /* \"input/Fixed192x64Math.sol\":1268:1280  x * int(ONE) */\n      mul\n        /* \"input/Fixed192x64Math.sol\":1268:1291  x * int(ONE) / int(LN2) */\n      dup2\n      tag_144\n      jumpi\n      invalid\n    tag_144:\n      sdiv\n        /* \"input/Fixed192x64Math.sol\":1257:1267  pow2Bounds */\n      tag_35\n        /* \"input/Fixed192x64Math.sol\":1257:1292  pow2Bounds(x * int(ONE) / int(LN2)) */\n      jump\t// in\n    tag_143:\n        /* \"input/Fixed192x64Math.sol\":1230:1292  (uint lower, uint upper) = pow2Bounds(x * int(ONE) / int(LN2)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"input/Fixed192x64Math.sol\":1331:1336  lower */\n      dup2\n        /* \"input/Fixed192x64Math.sol\":1327:1328  2 */\n      0x02\n        /* \"input/Fixed192x64Math.sol\":1318:1323  lower */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":1310:1315  upper */\n      dup4\n        /* \"input/Fixed192x64Math.sol\":1310:1323  upper - lower */\n      sub\n        /* \"input/Fixed192x64Math.sol\":1309:1328  (upper - lower) / 2 */\n      dup2\n      tag_145\n      jumpi\n      invalid\n    tag_145:\n      div\n        /* \"input/Fixed192x64Math.sol\":1309:1336  (upper - lower) / 2 + lower */\n      add\n        /* \"input/Fixed192x64Math.sol\":1302:1336  return (upper - lower) / 2 + lower */\n      swap3\n      pop\n      pop\n      pop\n        /* \"input/Fixed192x64Math.sol\":766:1343  function exp(int x)... */\n    tag_140:\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72305820169bc9e3abd6e0bab573d3bb9deb31d9760871ef70461591ec2fb3392277490c64736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "610d27610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c806324d4e90a1161007b57806324d4e90a146101db57806345b8bafc1461021d578063c12662271461025f578063c2ee3a08146102a8578063ccc13814146102c6578063e46751e314610392576100b3565b806302780677146100b8578063137bf798146100d65780631427f168146101255780631d5801231461016e57806324902e24146101bd575b600080fd5b6100c06103d4565b6040518082815260200191505060405180910390f35b61010f600480360360408110156100ec57600080fd5b8101908080359060200190929190803560ff1690602001909291905050506103e0565b6040518082815260200191505060405180910390f35b6101516004803603602081101561013b57600080fd5b8101908080359060200190929190505050610485565b604051808381526020018281526020019250505060405180910390f35b6101a76004803603604081101561018457600080fd5b8101908080359060200190929190803560ff169060200190929190505050610563565b6040518082815260200191505060405180910390f35b6101c5610608565b6040518082815260200191505060405180910390f35b610207600480360360208110156101f157600080fd5b8101908080359060200190929190505050610615565b6040518082815260200191505060405180910390f35b6102496004803603602081101561023357600080fd5b810190808035906020019092919050505061065c565b6040518082815260200191505060405180910390f35b61028b6004803603602081101561027557600080fd5b8101908080359060200190929190505050610705565b604051808381526020018281526020019250505060405180910390f35b6102b0610bd2565b6040518082815260200191505060405180910390f35b61037c600480360360208110156102dc57600080fd5b81019080803590602001906401000000008111156102f957600080fd5b82018360208201111561030b57600080fd5b8035906020019184602083028401116401000000008311171561032d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610bdf565b6040518082815260200191505060405180910390f35b6103be600480360360208110156103a857600080fd5b8101908080359060200190929190505050610c65565b6040518082815260200191505060405180910390f35b67b17217f7d1cf79ac81565b60008060006103ee85610485565b91509150600060028111156103ff57fe5b84600281111561040b57fe5b141561041b57819250505061047f565b6001600281111561042857fe5b84600281111561043457fe5b141561044457809250505061047f565b60028081111561045057fe5b84600281111561045c57fe5b141561047a578160028383038161046f57fe5b05019250505061047f565b600080fd5b92915050565b6000806000831161049557600080fd5b61049e8361065c565b91506000808312156104b8578260000384901b90506104bf565b8284901c90505b68010000000000000000830292506000600190505b6040811361055357680100000000000000008214156104f257610553565b680100000000000000008283028161050657fe5b049150680100000000000000006002028210610546578068010000000000000000600082121561053257fe5b901c840193506002828161054257fe5b0491505b80806001019150506104d4565b5082600484019250925050915091565b600080600061057185610705565b915091506000600281111561058257fe5b84600281111561058e57fe5b141561059e578192505050610602565b600160028111156105ab57fe5b8460028111156105b757fe5b14156105c7578092505050610602565b6002808111156105d357fe5b8460028111156105df57fe5b14156105fd57816002838303816105f257fe5b040192505050610602565b600080fd5b92915050565b680171547652b82fe17781565b600080600061062384610485565b91509150680171547652b82fe177680100000000000000008360028585038161064857fe5b0501028161065257fe5b0592505050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc09050600060c1905060006001838301901d90505b816001840112156106fe576000811280156106bc5750680100000000000000008160000385901b105b806106df5750600081121580156106de5750680100000000000000008185901c105b5b156106ec578091506106f0565b8092505b6001838301901d9050610693565b5050919050565b60008068bfffffffffffffffff83131561071e57600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffc00000000000000000831215610759576000600181915080905091509150610bcd565b600080600085126107935768010000000000000000858161077657fe5b05915068010000000000000000858161078b57fe5b0790506107bf565b60016801000000000000000060018701816107aa57fe5b05039150816801000000000000000002850390505b60008112156107ca57fe5b6000604068010000000000000000901b905060008290508067b17217f7d1cf79ab0282019150680100000000000000008382028161080457fe5b05905060028167f5fdeffc162c754302901d82019150680100000000000000008382028161082e57fe5b05905060048167e35846b82505fc5902901d82019150680100000000000000008382028161085857fe5b059050600681679d955b7dd273b94e02901d82019150680100000000000000008382028161088257fe5b05905060098167aec3ff3c5339888302901d8201915068010000000000000000838202816108ac57fe5b059050600c8167a184897c363c3b7a02901d8201915068010000000000000000838202816108d657fe5b05905060108167ffe5fe2c4586343502901d82019150680100000000000000008382028161090057fe5b05905060138167b160111d2e411fec02901d82019150680100000000000000008382028161092a57fe5b05905060178167da929e9caf3e1ed202901d82019150680100000000000000008382028161095457fe5b059050601b8167f267a8ac5c764fb702901d82019150680100000000000000008382028161097e57fe5b059050601f8167f465639a8dd9260702901d8201915068010000000000000000838202816109a857fe5b05905060238167e1deb287e14c2f1502901d8201915068010000000000000000838202816109d257fe5b05905060278167c0b0c98b3687cb1402901d8201915068010000000000000000838202816109fc57fe5b059050602b816798a4b26ac3c54b9f02901d820191506801000000000000000083820281610a2657fe5b05905060308167e1b7421d82010f3302901d820191506801000000000000000083820281610a5057fe5b059050603481679c744d73cfc59c9102901d820191506801000000000000000083820281610a7a57fe5b05905060398167cc2225a0e12d3eab02901d820191506801000000000000000083820281610aa457fe5b059050603e8167fb8bb5eda1b4aeb902901d9050808201915068010000000000000000600802905060408403935060008412610b925760008461010003836000821215610aed57fe5b901d1415610b5d5783826000821215610b0257fe5b901b955083816000821215610b1357fe5b901b90508581870110610b2a578086019450610b4e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b85859550955050505050610bcd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808191508090509550955050505050610bcd565b600184600003826000821215610ba457fe5b901d01905083600003826000821215610bb957fe5b901c95508086019450858595509550505050505b915091565b6801000000000000000081565b600080825111610bee57600080fd5b7f8000000000000000000000000000000000000000000000000000000000000000905060008090505b8251811015610c5f5781838281518110610c2d57fe5b60200260200101511315610c5257828181518110610c4757fe5b602002602001015191505b8080600101915050610c17565b50919050565b600068851591f9dd5b9b40d7821315610c7d57600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffd3a37a020b8c21950d8213610cad5760009050610ced565b600080610cd567b17217f7d1cf79ac68010000000000000000860281610ccf57fe5b05610705565b9150915081600283830381610ce657fe5b0401925050505b91905056fea265627a7a72305820169bc9e3abd6e0bab573d3bb9deb31d9760871ef70461591ec2fb3392277490c64736f6c634300050a0032",
							"opcodes": "PUSH2 0xD27 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24D4E90A GT PUSH2 0x7B JUMPI DUP1 PUSH4 0x24D4E90A EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x45B8BAFC EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xC1266227 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xCCC13814 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xE46751E3 EQ PUSH2 0x392 JUMPI PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH4 0x2780677 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x137BF798 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x1427F168 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1D580123 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x24902E24 EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0xB17217F7D1CF79AC DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3EE DUP6 PUSH2 0x485 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3FF JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x40B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x41B JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x47F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x428 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x434 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x444 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x47F JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x450 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x45C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x47A JUMPI DUP2 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0x46F JUMPI INVALID JUMPDEST SDIV ADD SWAP3 POP POP POP PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49E DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0x4B8 JUMPI DUP3 PUSH1 0x0 SUB DUP5 SWAP1 SHL SWAP1 POP PUSH2 0x4BF JUMP JUMPDEST DUP3 DUP5 SWAP1 SHR SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP4 MUL SWAP3 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x40 DUP2 SGT PUSH2 0x553 JUMPI PUSH9 0x10000000000000000 DUP3 EQ ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x553 JUMP JUMPDEST PUSH9 0x10000000000000000 DUP3 DUP4 MUL DUP2 PUSH2 0x506 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH9 0x10000000000000000 PUSH1 0x2 MUL DUP3 LT PUSH2 0x546 JUMPI DUP1 PUSH9 0x10000000000000000 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x532 JUMPI INVALID JUMPDEST SWAP1 SHR DUP5 ADD SWAP4 POP PUSH1 0x2 DUP3 DUP2 PUSH2 0x542 JUMPI INVALID JUMPDEST DIV SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4D4 JUMP JUMPDEST POP DUP3 PUSH1 0x4 DUP5 ADD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x571 DUP6 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x582 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x58E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x59E JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5AB JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5B7 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5C7 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x602 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x5D3 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5DF JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5FD JUMPI DUP2 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0x5F2 JUMPI INVALID JUMPDEST DIV ADD SWAP3 POP POP POP PUSH2 0x602 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x171547652B82FE177 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x623 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH9 0x171547652B82FE177 PUSH9 0x10000000000000000 DUP4 PUSH1 0x2 DUP6 DUP6 SUB DUP2 PUSH2 0x648 JUMPI INVALID JUMPDEST SDIV ADD MUL DUP2 PUSH2 0x652 JUMPI INVALID JUMPDEST SDIV SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 SWAP1 POP PUSH1 0x0 PUSH1 0xC1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP4 ADD SWAP1 SAR SWAP1 POP JUMPDEST DUP2 PUSH1 0x1 DUP5 ADD SLT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP2 SLT DUP1 ISZERO PUSH2 0x6BC JUMPI POP PUSH9 0x10000000000000000 DUP2 PUSH1 0x0 SUB DUP6 SWAP1 SHL LT JUMPDEST DUP1 PUSH2 0x6DF JUMPI POP PUSH1 0x0 DUP2 SLT ISZERO DUP1 ISZERO PUSH2 0x6DE JUMPI POP PUSH9 0x10000000000000000 DUP2 DUP6 SWAP1 SHR LT JUMPDEST JUMPDEST ISZERO PUSH2 0x6EC JUMPI DUP1 SWAP2 POP PUSH2 0x6F0 JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST PUSH1 0x1 DUP4 DUP4 ADD SWAP1 SAR SWAP1 POP PUSH2 0x693 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH9 0xBFFFFFFFFFFFFFFFFF DUP4 SGT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000 DUP4 SLT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 PUSH1 0x1 DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP2 POP SWAP2 POP PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SLT PUSH2 0x793 JUMPI PUSH9 0x10000000000000000 DUP6 DUP2 PUSH2 0x776 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH9 0x10000000000000000 DUP6 DUP2 PUSH2 0x78B JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x1 PUSH9 0x10000000000000000 PUSH1 0x1 DUP8 ADD DUP2 PUSH2 0x7AA JUMPI INVALID JUMPDEST SDIV SUB SWAP2 POP DUP2 PUSH9 0x10000000000000000 MUL DUP6 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x7CA JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH9 0x10000000000000000 SWAP1 SHL SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH8 0xB17217F7D1CF79AB MUL DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x804 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xF5FDEFFC162C7543 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x82E JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x4 DUP2 PUSH8 0xE35846B82505FC59 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x858 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x6 DUP2 PUSH8 0x9D955B7DD273B94E MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x882 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x9 DUP2 PUSH8 0xAEC3FF3C53398883 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x8AC JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0xC DUP2 PUSH8 0xA184897C363C3B7A MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x8D6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x10 DUP2 PUSH8 0xFFE5FE2C45863435 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x900 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x13 DUP2 PUSH8 0xB160111D2E411FEC MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x92A JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x17 DUP2 PUSH8 0xDA929E9CAF3E1ED2 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x954 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1B DUP2 PUSH8 0xF267A8AC5C764FB7 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x97E JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1F DUP2 PUSH8 0xF465639A8DD92607 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x9A8 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x23 DUP2 PUSH8 0xE1DEB287E14C2F15 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x9D2 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x27 DUP2 PUSH8 0xC0B0C98B3687CB14 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x9FC JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x2B DUP2 PUSH8 0x98A4B26AC3C54B9F MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xA26 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x30 DUP2 PUSH8 0xE1B7421D82010F33 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xA50 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x34 DUP2 PUSH8 0x9C744D73CFC59C91 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xA7A JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x39 DUP2 PUSH8 0xCC2225A0E12D3EAB MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xAA4 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x3E DUP2 PUSH8 0xFB8BB5EDA1B4AEB9 MUL SWAP1 SAR SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 PUSH1 0x8 MUL SWAP1 POP PUSH1 0x40 DUP5 SUB SWAP4 POP PUSH1 0x0 DUP5 SLT PUSH2 0xB92 JUMPI PUSH1 0x0 DUP5 PUSH2 0x100 SUB DUP4 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xAED JUMPI INVALID JUMPDEST SWAP1 SAR EQ ISZERO PUSH2 0xB5D JUMPI DUP4 DUP3 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xB02 JUMPI INVALID JUMPDEST SWAP1 SHL SWAP6 POP DUP4 DUP2 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xB13 JUMPI INVALID JUMPDEST SWAP1 SHL SWAP1 POP DUP6 DUP2 DUP8 ADD LT PUSH2 0xB2A JUMPI DUP1 DUP7 ADD SWAP5 POP PUSH2 0xB4E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST DUP6 DUP6 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0xBCD JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x0 SUB DUP3 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xBA4 JUMPI INVALID JUMPDEST SWAP1 SAR ADD SWAP1 POP DUP4 PUSH1 0x0 SUB DUP3 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xBB9 JUMPI INVALID JUMPDEST SWAP1 SHR SWAP6 POP DUP1 DUP7 ADD SWAP5 POP DUP6 DUP6 SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH9 0x10000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD GT PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI DUP2 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC2D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT ISZERO PUSH2 0xC52 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC47 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC17 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x851591F9DD5B9B40D7 DUP3 SGT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3A37A020B8C21950D DUP3 SGT PUSH2 0xCAD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xCED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCD5 PUSH8 0xB17217F7D1CF79AC PUSH9 0x10000000000000000 DUP7 MUL DUP2 PUSH2 0xCCF JUMPI INVALID JUMPDEST SDIV PUSH2 0x705 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0xCE6 JUMPI INVALID JUMPDEST DIV ADD SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 AND SWAP12 0xc9 0xe3 0xab 0xd6 0xe0 0xba 0xb5 PUSH20 0xD3BB9DEB31D9760871EF70461591EC2FB3392277 0x49 0xc PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "287:8804:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c806324d4e90a1161007b57806324d4e90a146101db57806345b8bafc1461021d578063c12662271461025f578063c2ee3a08146102a8578063ccc13814146102c6578063e46751e314610392576100b3565b806302780677146100b8578063137bf798146100d65780631427f168146101255780631d5801231461016e57806324902e24146101bd575b600080fd5b6100c06103d4565b6040518082815260200191505060405180910390f35b61010f600480360360408110156100ec57600080fd5b8101908080359060200190929190803560ff1690602001909291905050506103e0565b6040518082815260200191505060405180910390f35b6101516004803603602081101561013b57600080fd5b8101908080359060200190929190505050610485565b604051808381526020018281526020019250505060405180910390f35b6101a76004803603604081101561018457600080fd5b8101908080359060200190929190803560ff169060200190929190505050610563565b6040518082815260200191505060405180910390f35b6101c5610608565b6040518082815260200191505060405180910390f35b610207600480360360208110156101f157600080fd5b8101908080359060200190929190505050610615565b6040518082815260200191505060405180910390f35b6102496004803603602081101561023357600080fd5b810190808035906020019092919050505061065c565b6040518082815260200191505060405180910390f35b61028b6004803603602081101561027557600080fd5b8101908080359060200190929190505050610705565b604051808381526020018281526020019250505060405180910390f35b6102b0610bd2565b6040518082815260200191505060405180910390f35b61037c600480360360208110156102dc57600080fd5b81019080803590602001906401000000008111156102f957600080fd5b82018360208201111561030b57600080fd5b8035906020019184602083028401116401000000008311171561032d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610bdf565b6040518082815260200191505060405180910390f35b6103be600480360360208110156103a857600080fd5b8101908080359060200190929190505050610c65565b6040518082815260200191505060405180910390f35b67b17217f7d1cf79ac81565b60008060006103ee85610485565b91509150600060028111156103ff57fe5b84600281111561040b57fe5b141561041b57819250505061047f565b6001600281111561042857fe5b84600281111561043457fe5b141561044457809250505061047f565b60028081111561045057fe5b84600281111561045c57fe5b141561047a578160028383038161046f57fe5b05019250505061047f565b600080fd5b92915050565b6000806000831161049557600080fd5b61049e8361065c565b91506000808312156104b8578260000384901b90506104bf565b8284901c90505b68010000000000000000830292506000600190505b6040811361055357680100000000000000008214156104f257610553565b680100000000000000008283028161050657fe5b049150680100000000000000006002028210610546578068010000000000000000600082121561053257fe5b901c840193506002828161054257fe5b0491505b80806001019150506104d4565b5082600484019250925050915091565b600080600061057185610705565b915091506000600281111561058257fe5b84600281111561058e57fe5b141561059e578192505050610602565b600160028111156105ab57fe5b8460028111156105b757fe5b14156105c7578092505050610602565b6002808111156105d357fe5b8460028111156105df57fe5b14156105fd57816002838303816105f257fe5b040192505050610602565b600080fd5b92915050565b680171547652b82fe17781565b600080600061062384610485565b91509150680171547652b82fe177680100000000000000008360028585038161064857fe5b0501028161065257fe5b0592505050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc09050600060c1905060006001838301901d90505b816001840112156106fe576000811280156106bc5750680100000000000000008160000385901b105b806106df5750600081121580156106de5750680100000000000000008185901c105b5b156106ec578091506106f0565b8092505b6001838301901d9050610693565b5050919050565b60008068bfffffffffffffffff83131561071e57600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffc00000000000000000831215610759576000600181915080905091509150610bcd565b600080600085126107935768010000000000000000858161077657fe5b05915068010000000000000000858161078b57fe5b0790506107bf565b60016801000000000000000060018701816107aa57fe5b05039150816801000000000000000002850390505b60008112156107ca57fe5b6000604068010000000000000000901b905060008290508067b17217f7d1cf79ab0282019150680100000000000000008382028161080457fe5b05905060028167f5fdeffc162c754302901d82019150680100000000000000008382028161082e57fe5b05905060048167e35846b82505fc5902901d82019150680100000000000000008382028161085857fe5b059050600681679d955b7dd273b94e02901d82019150680100000000000000008382028161088257fe5b05905060098167aec3ff3c5339888302901d8201915068010000000000000000838202816108ac57fe5b059050600c8167a184897c363c3b7a02901d8201915068010000000000000000838202816108d657fe5b05905060108167ffe5fe2c4586343502901d82019150680100000000000000008382028161090057fe5b05905060138167b160111d2e411fec02901d82019150680100000000000000008382028161092a57fe5b05905060178167da929e9caf3e1ed202901d82019150680100000000000000008382028161095457fe5b059050601b8167f267a8ac5c764fb702901d82019150680100000000000000008382028161097e57fe5b059050601f8167f465639a8dd9260702901d8201915068010000000000000000838202816109a857fe5b05905060238167e1deb287e14c2f1502901d8201915068010000000000000000838202816109d257fe5b05905060278167c0b0c98b3687cb1402901d8201915068010000000000000000838202816109fc57fe5b059050602b816798a4b26ac3c54b9f02901d820191506801000000000000000083820281610a2657fe5b05905060308167e1b7421d82010f3302901d820191506801000000000000000083820281610a5057fe5b059050603481679c744d73cfc59c9102901d820191506801000000000000000083820281610a7a57fe5b05905060398167cc2225a0e12d3eab02901d820191506801000000000000000083820281610aa457fe5b059050603e8167fb8bb5eda1b4aeb902901d9050808201915068010000000000000000600802905060408403935060008412610b925760008461010003836000821215610aed57fe5b901d1415610b5d5783826000821215610b0257fe5b901b955083816000821215610b1357fe5b901b90508581870110610b2a578086019450610b4e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b85859550955050505050610bcd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808191508090509550955050505050610bcd565b600184600003826000821215610ba457fe5b901d01905083600003826000821215610bb957fe5b901c95508086019450858595509550505050505b915091565b6801000000000000000081565b600080825111610bee57600080fd5b7f8000000000000000000000000000000000000000000000000000000000000000905060008090505b8251811015610c5f5781838281518110610c2d57fe5b60200260200101511315610c5257828181518110610c4757fe5b602002602001015191505b8080600101915050610c17565b50919050565b600068851591f9dd5b9b40d7821315610c7d57600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffd3a37a020b8c21950d8213610cad5760009050610ced565b600080610cd567b17217f7d1cf79ac68010000000000000000860281610ccf57fe5b05610705565b9150915081600283830381610ce657fe5b0401925050505b91905056fea265627a7a72305820169bc9e3abd6e0bab573d3bb9deb31d9760871ef70461591ec2fb3392277490c64736f6c634300050a0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24D4E90A GT PUSH2 0x7B JUMPI DUP1 PUSH4 0x24D4E90A EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x45B8BAFC EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xC1266227 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xCCC13814 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xE46751E3 EQ PUSH2 0x392 JUMPI PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH4 0x2780677 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x137BF798 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x1427F168 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1D580123 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x24902E24 EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0xB17217F7D1CF79AC DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3EE DUP6 PUSH2 0x485 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3FF JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x40B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x41B JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x47F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x428 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x434 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x444 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x47F JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x450 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x45C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x47A JUMPI DUP2 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0x46F JUMPI INVALID JUMPDEST SDIV ADD SWAP3 POP POP POP PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49E DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0x4B8 JUMPI DUP3 PUSH1 0x0 SUB DUP5 SWAP1 SHL SWAP1 POP PUSH2 0x4BF JUMP JUMPDEST DUP3 DUP5 SWAP1 SHR SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP4 MUL SWAP3 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x40 DUP2 SGT PUSH2 0x553 JUMPI PUSH9 0x10000000000000000 DUP3 EQ ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x553 JUMP JUMPDEST PUSH9 0x10000000000000000 DUP3 DUP4 MUL DUP2 PUSH2 0x506 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH9 0x10000000000000000 PUSH1 0x2 MUL DUP3 LT PUSH2 0x546 JUMPI DUP1 PUSH9 0x10000000000000000 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x532 JUMPI INVALID JUMPDEST SWAP1 SHR DUP5 ADD SWAP4 POP PUSH1 0x2 DUP3 DUP2 PUSH2 0x542 JUMPI INVALID JUMPDEST DIV SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4D4 JUMP JUMPDEST POP DUP3 PUSH1 0x4 DUP5 ADD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x571 DUP6 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x582 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x58E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x59E JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5AB JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5B7 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5C7 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x602 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x5D3 JUMPI INVALID JUMPDEST DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5DF JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5FD JUMPI DUP2 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0x5F2 JUMPI INVALID JUMPDEST DIV ADD SWAP3 POP POP POP PUSH2 0x602 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x171547652B82FE177 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x623 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH9 0x171547652B82FE177 PUSH9 0x10000000000000000 DUP4 PUSH1 0x2 DUP6 DUP6 SUB DUP2 PUSH2 0x648 JUMPI INVALID JUMPDEST SDIV ADD MUL DUP2 PUSH2 0x652 JUMPI INVALID JUMPDEST SDIV SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 SWAP1 POP PUSH1 0x0 PUSH1 0xC1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP4 ADD SWAP1 SAR SWAP1 POP JUMPDEST DUP2 PUSH1 0x1 DUP5 ADD SLT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP2 SLT DUP1 ISZERO PUSH2 0x6BC JUMPI POP PUSH9 0x10000000000000000 DUP2 PUSH1 0x0 SUB DUP6 SWAP1 SHL LT JUMPDEST DUP1 PUSH2 0x6DF JUMPI POP PUSH1 0x0 DUP2 SLT ISZERO DUP1 ISZERO PUSH2 0x6DE JUMPI POP PUSH9 0x10000000000000000 DUP2 DUP6 SWAP1 SHR LT JUMPDEST JUMPDEST ISZERO PUSH2 0x6EC JUMPI DUP1 SWAP2 POP PUSH2 0x6F0 JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST PUSH1 0x1 DUP4 DUP4 ADD SWAP1 SAR SWAP1 POP PUSH2 0x693 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH9 0xBFFFFFFFFFFFFFFFFF DUP4 SGT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000 DUP4 SLT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 PUSH1 0x1 DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP2 POP SWAP2 POP PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SLT PUSH2 0x793 JUMPI PUSH9 0x10000000000000000 DUP6 DUP2 PUSH2 0x776 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH9 0x10000000000000000 DUP6 DUP2 PUSH2 0x78B JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x1 PUSH9 0x10000000000000000 PUSH1 0x1 DUP8 ADD DUP2 PUSH2 0x7AA JUMPI INVALID JUMPDEST SDIV SUB SWAP2 POP DUP2 PUSH9 0x10000000000000000 MUL DUP6 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x7CA JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH9 0x10000000000000000 SWAP1 SHL SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH8 0xB17217F7D1CF79AB MUL DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x804 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xF5FDEFFC162C7543 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x82E JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x4 DUP2 PUSH8 0xE35846B82505FC59 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x858 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x6 DUP2 PUSH8 0x9D955B7DD273B94E MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x882 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x9 DUP2 PUSH8 0xAEC3FF3C53398883 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x8AC JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0xC DUP2 PUSH8 0xA184897C363C3B7A MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x8D6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x10 DUP2 PUSH8 0xFFE5FE2C45863435 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x900 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x13 DUP2 PUSH8 0xB160111D2E411FEC MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x92A JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x17 DUP2 PUSH8 0xDA929E9CAF3E1ED2 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x954 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1B DUP2 PUSH8 0xF267A8AC5C764FB7 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x97E JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1F DUP2 PUSH8 0xF465639A8DD92607 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x9A8 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x23 DUP2 PUSH8 0xE1DEB287E14C2F15 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x9D2 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x27 DUP2 PUSH8 0xC0B0C98B3687CB14 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0x9FC JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x2B DUP2 PUSH8 0x98A4B26AC3C54B9F MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xA26 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x30 DUP2 PUSH8 0xE1B7421D82010F33 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xA50 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x34 DUP2 PUSH8 0x9C744D73CFC59C91 MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xA7A JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x39 DUP2 PUSH8 0xCC2225A0E12D3EAB MUL SWAP1 SAR DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 DUP4 DUP3 MUL DUP2 PUSH2 0xAA4 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x3E DUP2 PUSH8 0xFB8BB5EDA1B4AEB9 MUL SWAP1 SAR SWAP1 POP DUP1 DUP3 ADD SWAP2 POP PUSH9 0x10000000000000000 PUSH1 0x8 MUL SWAP1 POP PUSH1 0x40 DUP5 SUB SWAP4 POP PUSH1 0x0 DUP5 SLT PUSH2 0xB92 JUMPI PUSH1 0x0 DUP5 PUSH2 0x100 SUB DUP4 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xAED JUMPI INVALID JUMPDEST SWAP1 SAR EQ ISZERO PUSH2 0xB5D JUMPI DUP4 DUP3 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xB02 JUMPI INVALID JUMPDEST SWAP1 SHL SWAP6 POP DUP4 DUP2 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xB13 JUMPI INVALID JUMPDEST SWAP1 SHL SWAP1 POP DUP6 DUP2 DUP8 ADD LT PUSH2 0xB2A JUMPI DUP1 DUP7 ADD SWAP5 POP PUSH2 0xB4E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST DUP6 DUP6 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0xBCD JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x0 SUB DUP3 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xBA4 JUMPI INVALID JUMPDEST SWAP1 SAR ADD SWAP1 POP DUP4 PUSH1 0x0 SUB DUP3 PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xBB9 JUMPI INVALID JUMPDEST SWAP1 SHR SWAP6 POP DUP1 DUP7 ADD SWAP5 POP DUP6 DUP6 SWAP6 POP SWAP6 POP POP POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH9 0x10000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD GT PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI DUP2 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC2D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT ISZERO PUSH2 0xC52 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC47 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC17 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x851591F9DD5B9B40D7 DUP3 SGT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3A37A020B8C21950D DUP3 SGT PUSH2 0xCAD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xCED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCD5 PUSH8 0xB17217F7D1CF79AC PUSH9 0x10000000000000000 DUP7 MUL DUP2 PUSH2 0xCCF JUMPI INVALID JUMPDEST SDIV PUSH2 0x705 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x2 DUP4 DUP4 SUB DUP2 PUSH2 0xCE6 JUMPI INVALID JUMPDEST DIV ADD SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 AND SWAP12 0xc9 0xe3 0xab 0xd6 0xe0 0xba 0xb5 PUSH20 0xD3BB9DEB31D9760871EF70461591EC2FB3392277 0x49 0xc PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
							"sourceMap": "287:8804:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6583:487;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6583:487:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7346:744;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7346:744:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1574:484;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1574:484:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;563:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6126:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6126:200:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8204:488;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8204:488:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2300:3723;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2300:3723:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;459:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8814:275;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8814:275:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8814:275:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8814:275:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8814:275:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8814:275:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;766:577;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;766:577:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;512:45;539:18;512:45;:::o;6583:487::-;6686:3;6706:9;6717;6730:13;6741:1;6730:10;:13::i;:::-;6705:38;;;;6774:25;6756:43;;;;;;;;:14;:43;;;;;;;;;6753:85;;;6822:5;6815:12;;;;;;6753:85;6868:25;6850:43;;;;;;;;:14;:43;;;;;;;;;6847:85;;;6916:5;6909:12;;;;;;6847:85;6962:23;6944:41;;;;;;;;:14;:41;;;;;;;;;6941:105;;;7030:5;7026:1;7017:5;7009;:13;7008:19;;;;;;:27;7001:34;;;;;;6941:105;7055:8;;;6583:487;;;;;:::o;7346:744::-;7419:9;7430;7467:1;7463;:5;7455:14;;;;;;7520:12;7530:1;7520:9;:12::i;:::-;7512:20;;7543:6;7571:1;7563:5;:9;7559:95;;;7601:5;7600:6;;7590:1;:17;;7586:21;;7559:95;;;7648:5;7638:1;:16;;7634:20;;7559:95;487:19;7665:17;;;;7810:5;7818:1;7810:9;;7805:243;7826:2;7821:1;:7;7805:243;;487:19;7852:1;:8;7849:51;;;7880:5;;7849:51;487:19;7921:1;7917;:5;:11;;;;;;7913:15;;487:19;7950:1;:7;7945:1;:12;7942:96;;7997:1;487:19;7990:8;;;;;;;;;;7977:22;;;;8022:1;8017:6;;;;;;;;;7942:96;7830:3;;;;;;;7805:243;;;;8066:5;8081:1;8073:5;:9;8058:25;;;;;7346:744;;;:::o;1574:484::-;1671:4;1692:10;1704;1718:13;1729:1;1718:10;:13::i;:::-;1691:40;;;;1762:25;1744:43;;;;;;;;:14;:43;;;;;;;;;1741:85;;;1810:5;1803:12;;;;;;1741:85;1856:25;1838:43;;;;;;;;:14;:43;;;;;;;;;1835:85;;;1904:5;1897:12;;;;;;1835:85;1950:23;1932:41;;;;;;;;:14;:41;;;;;;;;;1929:105;;;2018:5;2014:1;2005:5;1997;:13;1996:19;;;;;;:27;1989:34;;;;;;1929:105;2043:8;;;1574:484;;;;;:::o;563:49::-;593:19;563:49;:::o;6126:200::-;6191:3;6211:9;6222;6235:13;6246:1;6235:10;:13::i;:::-;6210:38;;;;593:19;487;6288:5;6284:1;6275:5;6267;:13;6266:19;;;;;;:27;6265:40;:54;;;;;;6258:61;;;;6126:200;;;:::o;8204:488::-;8276:6;8303:3;8298:8;;8316:6;8325:3;8316:12;;8431:7;8454:1;8447:2;8442;:7;8441:14;;8431:24;;8465:221;8482:2;8477:1;8472:2;:6;8471:13;8465:221;;;8510:1;8504:3;:7;:32;;;;;487:19;8526:3;8525:4;;8515:1;:15;;:21;8504:32;:68;;;;8547:1;8540:3;:8;;:32;;;;;487:19;8562:3;8552:1;:14;;:20;8540:32;8504:68;8500:141;;;8595:3;8590:8;;8500:141;;;8638:3;8633:8;;8500:141;8674:1;8667:2;8662;:7;8661:14;;8655:20;;8465:221;;;8204:488;;;;;:::o;2300:3723::-;2372:10;2384;2545:22;2540:1;:27;;2532:36;;;;;;2699:23;2695:1;:27;2691:58;;;2744:1;2747;2736:13;;;;;;;;;;;;2691:58;2924:9;2943:5;2967:1;2962;:6;2958:194;;487:19;2992:1;:12;;;;;;2984:20;;487:19;3022:1;:12;;;;;;3018:16;;2958:194;;;3100:1;487:19;3084:1;3082;:3;3081:16;;;;;;:20;3073:28;;3135:5;487:19;3124:16;3119:1;:22;3115:26;;2958:194;3173:1;3168;:6;;3161:14;;;;3643:10;3668:2;487:19;3656:14;;3643:27;;3680:8;3691:1;3680:12;;3733:4;3712:18;:25;3702:35;;;;487:19;3761:1;3754:4;:8;:19;;;;;;3747:26;;3823:7;3814:4;3793:18;:25;:38;;3783:48;;;;487:19;3855:1;3848:4;:8;:19;;;;;;3841:26;;3917:7;3908:4;3887:18;:25;:38;;3877:48;;;;487:19;3949:1;3942:4;:8;:19;;;;;;3935:26;;4011:7;4002:4;3981:18;:25;:38;;3971:48;;;;487:19;4043:1;4036:4;:8;:19;;;;;;4029:26;;4105:7;4096:4;4075:18;:25;:38;;4065:48;;;;487:19;4137:1;4130:4;:8;:19;;;;;;4123:26;;4199:7;4190:4;4169:18;:25;:38;;4159:48;;;;487:19;4231:1;4224:4;:8;:19;;;;;;4217:26;;4293:7;4284:4;4263:18;:25;:38;;4253:48;;;;487:19;4325:1;4318:4;:8;:19;;;;;;4311:26;;4387:7;4378:4;4357:18;:25;:38;;4347:48;;;;487:19;4419:1;4412:4;:8;:19;;;;;;4405:26;;4481:7;4472:4;4451:18;:25;:38;;4441:48;;;;487:19;4513:1;4506:4;:8;:19;;;;;;4499:26;;4575:7;4566:4;4545:18;:25;:38;;4535:48;;;;487:19;4607:1;4600:4;:8;:19;;;;;;4593:26;;4669:7;4660:4;4639:18;:25;:38;;4629:48;;;;487:19;4701:1;4694:4;:8;:19;;;;;;4687:26;;4763:7;4754:4;4733:18;:25;:38;;4723:48;;;;487:19;4795:1;4788:4;:8;:19;;;;;;4781:26;;4857:8;4848:4;4827:18;:25;:39;;4817:49;;;;487:19;4890:1;4883:4;:8;:19;;;;;;4876:26;;4952:8;4943:4;4922:18;:25;:39;;4912:49;;;;487:19;4985:1;4978:4;:8;:19;;;;;;4971:26;;5047:8;5038:4;5017:18;:25;:39;;5007:49;;;;487:19;5080:1;5073:4;:8;:19;;;;;;5066:26;;5142:8;5133:4;5112:18;:25;:39;;5102:49;;;;487:19;5175:1;5168:4;:8;:19;;;;;;5161:26;;5237:8;5228:4;5207:18;:25;:39;;5197:49;;;;487:19;5270:1;5263:4;:8;:19;;;;;;5256:26;;5329:8;5320:4;5299:18;:25;:39;;5292:46;;5358:4;5348:14;;;;487:19;5383:1;:7;5372:19;;5411:2;5402:11;;;;5436:1;5427:5;:10;5423:446;;5482:1;5472:5;5468:3;:9;5457:6;:21;;;;;;;;;;:26;5453:405;;;5527:5;5516:6;5511:21;;;;;;;;;;5503:29;;5559:5;5550:14;;;;;;;;;;;;;5631:5;5622:4;5609:5;:18;:27;5605:138;;5679:4;5666:5;:18;5658:26;;5605:138;;;5735:8;5727:16;;5605:138;5769:5;5776;5761:21;;;;;;;;;;5453:405;5839:8;5849;5831:27;;;;;;;;;;;;;;;;5423:446;5906:1;5896:5;5895:6;;5886:4;:16;;;;;;;;;;5885:22;5878:29;;5943:5;5942:6;;5930;5925:24;;;;;;;;;;5917:32;;5980:4;5967:5;:18;5959:26;;6003:5;6010;5995:21;;;;;;;;2300:3723;;;;:::o;459:47::-;487:19;459:47;:::o;8814:275::-;8891:10;8939:1;8925:4;:11;:15;8917:24;;;;;;8960:7;8951:16;;8982:6;8991:1;8982:10;;8977:105;8998:4;:11;8994:1;:15;8977:105;;;9042:6;9032:4;9037:1;9032:7;;;;;;;;;;;;;;:16;9028:54;;;9075:4;9080:1;9075:7;;;;;;;;;;;;;;9066:16;;9028:54;9011:3;;;;;;;8977:105;;;;8814:275;;;:::o;766:577::-;831:4;983:22;978:1;:27;;970:36;;;;;;1135:22;1130:1;:27;1126:53;;1178:1;1171:8;;;;1126:53;1231:10;1243;1257:35;539:18;487:19;1268:1;:12;:23;;;;;;1257:10;:35::i;:::-;1230:62;;;;1331:5;1327:1;1318:5;1310;:13;1309:19;;;;;;:27;1302:34;;;;766:577;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "673400",
								"executionCost": "733",
								"totalCost": "674133"
							},
							"external": {
								"LN2()": "190",
								"LOG2_E()": "278",
								"ONE()": "255",
								"binaryLog(uint256,Fixed192x64Math.EstimationMode)": "infinite",
								"exp(int256)": "2338",
								"floorLog2(uint256)": "infinite",
								"ln(uint256)": "infinite",
								"log2Bounds(uint256)": "infinite",
								"max(int256[])": "infinite",
								"pow2(int256,Fixed192x64Math.EstimationMode)": "2492",
								"pow2Bounds(int256)": "2106"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 287,
									"end": 9091,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 9091,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820169bc9e3abd6e0bab573d3bb9deb31d9760871ef70461591ec2fb3392277490c64736f6c634300050a0032",
									".code": [
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "ADDRESS"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "MSTORE"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "LT"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "SHR"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "24D4E90A"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "GT"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "24D4E90A"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "45B8BAFC"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "C1266227"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "C2EE3A08"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "CCC13814"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "E46751E3"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMP"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "2780677"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "137BF798"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "1427F168"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "1D580123"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "24902E24"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "EQ"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 9091,
											"name": "REVERT"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "DUP3"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "MSTORE"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "ADD"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "SWAP2"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "POP"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "MLOAD"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "DUP1"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "SWAP2"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "SUB"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "SWAP1"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "RETURN"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "JUMPDEST"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP2"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "ADD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "ADD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP3"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP2"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "AND"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "ADD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP3"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP2"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "JUMPDEST"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "MLOAD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP3"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP2"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "MSTORE"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "ADD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP2"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "MLOAD"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "DUP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP2"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SUB"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP1"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "RETURN"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "JUMPDEST"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP2"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "ADD"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "ADD"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP3"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP2"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "JUMPDEST"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "MLOAD"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP4"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP2"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "MSTORE"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "ADD"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP3"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP2"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "MSTORE"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "ADD"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP3"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "MLOAD"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "DUP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP2"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SUB"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP1"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "RETURN"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP2"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP3"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "AND"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP3"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "MLOAD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP3"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP2"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "MSTORE"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "MLOAD"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SUB"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "RETURN"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "MLOAD"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "DUP3"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "MSTORE"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "ADD"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "SWAP2"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "POP"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "POP"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "MLOAD"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "SWAP2"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "SUB"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "SWAP1"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "RETURN"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "JUMPDEST"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP2"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "ADD"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "ADD"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP3"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP2"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "POP"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "POP"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "POP"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "JUMPDEST"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "MLOAD"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP3"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP2"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "MSTORE"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "ADD"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP2"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "POP"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "POP"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "MLOAD"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "DUP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP2"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SUB"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "RETURN"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "JUMPDEST"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP2"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "ADD"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "ADD"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP3"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP2"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "JUMPDEST"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "MLOAD"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP3"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP2"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "MSTORE"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "ADD"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP2"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "MLOAD"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "DUP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP2"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SUB"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "RETURN"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "JUMPDEST"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP3"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP2"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "JUMPDEST"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "MLOAD"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP4"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "MSTORE"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP3"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "MSTORE"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP3"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "MLOAD"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP2"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SUB"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP1"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "RETURN"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "MLOAD"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "DUP3"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "ADD"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "SWAP2"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "MLOAD"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "SWAP2"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "SUB"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "RETURN"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "JUMPDEST"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP3"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MUL"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MLOAD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MSTORE"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP4"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP3"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MSTORE"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP4"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP4"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP3"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP3"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "JUMPDEST"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MLOAD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP3"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MSTORE"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "ADD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "MLOAD"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "DUP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SUB"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "RETURN"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "JUMPDEST"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP2"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "ADD"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "ADD"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP3"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP2"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "JUMPDEST"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "MLOAD"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP3"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP2"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "MSTORE"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "ADD"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP2"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "MLOAD"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP2"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SUB"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "RETURN"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 557,
											"name": "PUSH",
											"value": "B17217F7D1CF79AC"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 557,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "JUMPDEST"
										},
										{
											"begin": 6686,
											"end": 6689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP1"
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6743,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 6741,
											"end": 6742,
											"name": "DUP6"
										},
										{
											"begin": 6730,
											"end": 6740,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 6730,
											"end": 6743,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6730,
											"end": 6743,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 6730,
											"end": 6743,
											"name": "JUMPDEST"
										},
										{
											"begin": 6705,
											"end": 6743,
											"name": "SWAP2"
										},
										{
											"begin": 6705,
											"end": 6743,
											"name": "POP"
										},
										{
											"begin": 6705,
											"end": 6743,
											"name": "SWAP2"
										},
										{
											"begin": 6705,
											"end": 6743,
											"name": "POP"
										},
										{
											"begin": 6774,
											"end": 6799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "DUP2"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "GT"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "ISZERO"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "JUMPI"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "INVALID"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "JUMPDEST"
										},
										{
											"begin": 6756,
											"end": 6770,
											"name": "DUP5"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "DUP2"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "GT"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "ISZERO"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "JUMPI"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "INVALID"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "JUMPDEST"
										},
										{
											"begin": 6756,
											"end": 6799,
											"name": "EQ"
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "ISZERO"
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "JUMPI"
										},
										{
											"begin": 6822,
											"end": 6827,
											"name": "DUP2"
										},
										{
											"begin": 6815,
											"end": 6827,
											"name": "SWAP3"
										},
										{
											"begin": 6815,
											"end": 6827,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6827,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6827,
											"name": "POP"
										},
										{
											"begin": 6815,
											"end": 6827,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 6815,
											"end": 6827,
											"name": "JUMP"
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "JUMPDEST"
										},
										{
											"begin": 6868,
											"end": 6893,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "DUP2"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "GT"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "ISZERO"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "JUMPI"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "INVALID"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "JUMPDEST"
										},
										{
											"begin": 6850,
											"end": 6864,
											"name": "DUP5"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "DUP2"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "GT"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "ISZERO"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "JUMPI"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "INVALID"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "JUMPDEST"
										},
										{
											"begin": 6850,
											"end": 6893,
											"name": "EQ"
										},
										{
											"begin": 6847,
											"end": 6932,
											"name": "ISZERO"
										},
										{
											"begin": 6847,
											"end": 6932,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6847,
											"end": 6932,
											"name": "JUMPI"
										},
										{
											"begin": 6916,
											"end": 6921,
											"name": "DUP1"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "SWAP3"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "POP"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "POP"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "POP"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "JUMP"
										},
										{
											"begin": 6847,
											"end": 6932,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 6847,
											"end": 6932,
											"name": "JUMPDEST"
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "DUP1"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "DUP2"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "GT"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "ISZERO"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "JUMPI"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "INVALID"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "JUMPDEST"
										},
										{
											"begin": 6944,
											"end": 6958,
											"name": "DUP5"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "DUP2"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "GT"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "ISZERO"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "JUMPI"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "INVALID"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "JUMPDEST"
										},
										{
											"begin": 6944,
											"end": 6985,
											"name": "EQ"
										},
										{
											"begin": 6941,
											"end": 7046,
											"name": "ISZERO"
										},
										{
											"begin": 6941,
											"end": 7046,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 6941,
											"end": 7046,
											"name": "JUMPI"
										},
										{
											"begin": 7030,
											"end": 7035,
											"name": "DUP2"
										},
										{
											"begin": 7026,
											"end": 7027,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7017,
											"end": 7022,
											"name": "DUP4"
										},
										{
											"begin": 7009,
											"end": 7014,
											"name": "DUP4"
										},
										{
											"begin": 7009,
											"end": 7022,
											"name": "SUB"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "DUP2"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "JUMPI"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "INVALID"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "JUMPDEST"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "SDIV"
										},
										{
											"begin": 7008,
											"end": 7035,
											"name": "ADD"
										},
										{
											"begin": 7001,
											"end": 7035,
											"name": "SWAP3"
										},
										{
											"begin": 7001,
											"end": 7035,
											"name": "POP"
										},
										{
											"begin": 7001,
											"end": 7035,
											"name": "POP"
										},
										{
											"begin": 7001,
											"end": 7035,
											"name": "POP"
										},
										{
											"begin": 7001,
											"end": 7035,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 7001,
											"end": 7035,
											"name": "JUMP"
										},
										{
											"begin": 6941,
											"end": 7046,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 6941,
											"end": 7046,
											"name": "JUMPDEST"
										},
										{
											"begin": 7055,
											"end": 7063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7063,
											"name": "DUP1"
										},
										{
											"begin": 7055,
											"end": 7063,
											"name": "REVERT"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "JUMPDEST"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP3"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "SWAP2"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "POP"
										},
										{
											"begin": 6583,
											"end": 7070,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "JUMPDEST"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "DUP4"
										},
										{
											"begin": 7463,
											"end": 7468,
											"name": "GT"
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "JUMPI"
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "DUP1"
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "REVERT"
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "JUMPDEST"
										},
										{
											"begin": 7520,
											"end": 7532,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP4"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 7520,
											"end": 7532,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7520,
											"end": 7532,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 7520,
											"end": 7532,
											"name": "JUMPDEST"
										},
										{
											"begin": 7512,
											"end": 7532,
											"name": "SWAP2"
										},
										{
											"begin": 7512,
											"end": 7532,
											"name": "POP"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7572,
											"name": "DUP1"
										},
										{
											"begin": 7563,
											"end": 7568,
											"name": "DUP4"
										},
										{
											"begin": 7563,
											"end": 7572,
											"name": "SLT"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "ISZERO"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "JUMPI"
										},
										{
											"begin": 7601,
											"end": 7606,
											"name": "DUP3"
										},
										{
											"begin": 7600,
											"end": 7606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7600,
											"end": 7606,
											"name": "SUB"
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "DUP5"
										},
										{
											"begin": 7590,
											"end": 7607,
											"name": "SWAP1"
										},
										{
											"begin": 7590,
											"end": 7607,
											"name": "SHL"
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "SWAP1"
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "POP"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "JUMP"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "JUMPDEST"
										},
										{
											"begin": 7648,
											"end": 7653,
											"name": "DUP3"
										},
										{
											"begin": 7638,
											"end": 7639,
											"name": "DUP5"
										},
										{
											"begin": 7638,
											"end": 7654,
											"name": "SWAP1"
										},
										{
											"begin": 7638,
											"end": 7654,
											"name": "SHR"
										},
										{
											"begin": 7634,
											"end": 7654,
											"name": "SWAP1"
										},
										{
											"begin": 7634,
											"end": 7654,
											"name": "POP"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 7559,
											"end": 7654,
											"name": "JUMPDEST"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 7665,
											"end": 7682,
											"name": "DUP4"
										},
										{
											"begin": 7665,
											"end": 7682,
											"name": "MUL"
										},
										{
											"begin": 7665,
											"end": 7682,
											"name": "SWAP3"
										},
										{
											"begin": 7665,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7810,
											"end": 7815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7810,
											"end": 7819,
											"name": "SWAP1"
										},
										{
											"begin": 7810,
											"end": 7819,
											"name": "POP"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "JUMPDEST"
										},
										{
											"begin": 7826,
											"end": 7828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7822,
											"name": "DUP2"
										},
										{
											"begin": 7821,
											"end": 7828,
											"name": "SGT"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "JUMPI"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 7852,
											"end": 7853,
											"name": "DUP3"
										},
										{
											"begin": 7852,
											"end": 7860,
											"name": "EQ"
										},
										{
											"begin": 7849,
											"end": 7900,
											"name": "ISZERO"
										},
										{
											"begin": 7849,
											"end": 7900,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 7849,
											"end": 7900,
											"name": "JUMPI"
										},
										{
											"begin": 7880,
											"end": 7885,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7880,
											"end": 7885,
											"name": "JUMP"
										},
										{
											"begin": 7849,
											"end": 7900,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 7849,
											"end": 7900,
											"name": "JUMPDEST"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP3"
										},
										{
											"begin": 7917,
											"end": 7918,
											"name": "DUP4"
										},
										{
											"begin": 7917,
											"end": 7922,
											"name": "MUL"
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "DUP2"
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "JUMPI"
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "INVALID"
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "JUMPDEST"
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "DIV"
										},
										{
											"begin": 7913,
											"end": 7928,
											"name": "SWAP2"
										},
										{
											"begin": 7913,
											"end": 7928,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 7950,
											"end": 7951,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7950,
											"end": 7957,
											"name": "MUL"
										},
										{
											"begin": 7945,
											"end": 7946,
											"name": "DUP3"
										},
										{
											"begin": 7945,
											"end": 7957,
											"name": "LT"
										},
										{
											"begin": 7942,
											"end": 8038,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 7942,
											"end": 8038,
											"name": "JUMPI"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "DUP1"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "DUP3"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "SLT"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "ISZERO"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "JUMPI"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "INVALID"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "JUMPDEST"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "SWAP1"
										},
										{
											"begin": 7990,
											"end": 7998,
											"name": "SHR"
										},
										{
											"begin": 7977,
											"end": 7999,
											"name": "DUP5"
										},
										{
											"begin": 7977,
											"end": 7999,
											"name": "ADD"
										},
										{
											"begin": 7977,
											"end": 7999,
											"name": "SWAP4"
										},
										{
											"begin": 7977,
											"end": 7999,
											"name": "POP"
										},
										{
											"begin": 8022,
											"end": 8023,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "DUP3"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "DUP2"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "JUMPI"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "INVALID"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "JUMPDEST"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "DIV"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "SWAP2"
										},
										{
											"begin": 8017,
											"end": 8023,
											"name": "POP"
										},
										{
											"begin": 7942,
											"end": 8038,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 7942,
											"end": 8038,
											"name": "JUMPDEST"
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "DUP1"
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "DUP1"
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "ADD"
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "SWAP2"
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "POP"
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "POP"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "JUMP"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "JUMPDEST"
										},
										{
											"begin": 7805,
											"end": 8048,
											"name": "POP"
										},
										{
											"begin": 8066,
											"end": 8071,
											"name": "DUP3"
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8073,
											"end": 8078,
											"name": "DUP5"
										},
										{
											"begin": 8073,
											"end": 8082,
											"name": "ADD"
										},
										{
											"begin": 8058,
											"end": 8083,
											"name": "SWAP3"
										},
										{
											"begin": 8058,
											"end": 8083,
											"name": "POP"
										},
										{
											"begin": 8058,
											"end": 8083,
											"name": "SWAP3"
										},
										{
											"begin": 8058,
											"end": 8083,
											"name": "POP"
										},
										{
											"begin": 8058,
											"end": 8083,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP2"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "POP"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "SWAP2"
										},
										{
											"begin": 7346,
											"end": 8090,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1671,
											"end": 1675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1702,
											"name": "DUP1"
										},
										{
											"begin": 1704,
											"end": 1714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "DUP6"
										},
										{
											"begin": 1718,
											"end": 1728,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "JUMPDEST"
										},
										{
											"begin": 1691,
											"end": 1731,
											"name": "SWAP2"
										},
										{
											"begin": 1691,
											"end": 1731,
											"name": "POP"
										},
										{
											"begin": 1691,
											"end": 1731,
											"name": "SWAP2"
										},
										{
											"begin": 1691,
											"end": 1731,
											"name": "POP"
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "GT"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "JUMPI"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "INVALID"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "JUMPDEST"
										},
										{
											"begin": 1744,
											"end": 1758,
											"name": "DUP5"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "DUP2"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "GT"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "ISZERO"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "JUMPI"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "INVALID"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "JUMPDEST"
										},
										{
											"begin": 1744,
											"end": 1787,
											"name": "EQ"
										},
										{
											"begin": 1741,
											"end": 1826,
											"name": "ISZERO"
										},
										{
											"begin": 1741,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1741,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP2"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "SWAP3"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "JUMP"
										},
										{
											"begin": 1741,
											"end": 1826,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1741,
											"end": 1826,
											"name": "JUMPDEST"
										},
										{
											"begin": 1856,
											"end": 1881,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "DUP2"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "GT"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "ISZERO"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "JUMPI"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "INVALID"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "JUMPDEST"
										},
										{
											"begin": 1838,
											"end": 1852,
											"name": "DUP5"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "DUP2"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "GT"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "ISZERO"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "JUMPI"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "INVALID"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "JUMPDEST"
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "EQ"
										},
										{
											"begin": 1835,
											"end": 1920,
											"name": "ISZERO"
										},
										{
											"begin": 1835,
											"end": 1920,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1835,
											"end": 1920,
											"name": "JUMPI"
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "DUP1"
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "SWAP3"
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "JUMP"
										},
										{
											"begin": 1835,
											"end": 1920,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1835,
											"end": 1920,
											"name": "JUMPDEST"
										},
										{
											"begin": 1950,
											"end": 1973,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "DUP1"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "GT"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "ISZERO"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "JUMPI"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "INVALID"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "JUMPDEST"
										},
										{
											"begin": 1932,
											"end": 1946,
											"name": "DUP5"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "GT"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "ISZERO"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "JUMPI"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "INVALID"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "JUMPDEST"
										},
										{
											"begin": 1932,
											"end": 1973,
											"name": "EQ"
										},
										{
											"begin": 1929,
											"end": 2034,
											"name": "ISZERO"
										},
										{
											"begin": 1929,
											"end": 2034,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 1929,
											"end": 2034,
											"name": "JUMPI"
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "DUP2"
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP4"
										},
										{
											"begin": 1997,
											"end": 2002,
											"name": "DUP4"
										},
										{
											"begin": 1997,
											"end": 2010,
											"name": "SUB"
										},
										{
											"begin": 1996,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 1996,
											"end": 2015,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1996,
											"end": 2015,
											"name": "JUMPI"
										},
										{
											"begin": 1996,
											"end": 2015,
											"name": "INVALID"
										},
										{
											"begin": 1996,
											"end": 2015,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1996,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1996,
											"end": 2015,
											"name": "DIV"
										},
										{
											"begin": 1996,
											"end": 2023,
											"name": "ADD"
										},
										{
											"begin": 1989,
											"end": 2023,
											"name": "SWAP3"
										},
										{
											"begin": 1989,
											"end": 2023,
											"name": "POP"
										},
										{
											"begin": 1989,
											"end": 2023,
											"name": "POP"
										},
										{
											"begin": 1989,
											"end": 2023,
											"name": "POP"
										},
										{
											"begin": 1989,
											"end": 2023,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1989,
											"end": 2023,
											"name": "JUMP"
										},
										{
											"begin": 1929,
											"end": 2034,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 1929,
											"end": 2034,
											"name": "JUMPDEST"
										},
										{
											"begin": 2043,
											"end": 2051,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2051,
											"name": "DUP1"
										},
										{
											"begin": 2043,
											"end": 2051,
											"name": "REVERT"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP3"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1574,
											"end": 2058,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 593,
											"end": 612,
											"name": "PUSH",
											"value": "171547652B82FE177"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 563,
											"end": 612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "JUMPDEST"
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP1"
										},
										{
											"begin": 6222,
											"end": 6231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6248,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 6246,
											"end": 6247,
											"name": "DUP5"
										},
										{
											"begin": 6235,
											"end": 6245,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 6235,
											"end": 6248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6248,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 6235,
											"end": 6248,
											"name": "JUMPDEST"
										},
										{
											"begin": 6210,
											"end": 6248,
											"name": "SWAP2"
										},
										{
											"begin": 6210,
											"end": 6248,
											"name": "POP"
										},
										{
											"begin": 6210,
											"end": 6248,
											"name": "SWAP2"
										},
										{
											"begin": 6210,
											"end": 6248,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 612,
											"name": "PUSH",
											"value": "171547652B82FE177"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "DUP4"
										},
										{
											"begin": 6284,
											"end": 6285,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6275,
											"end": 6280,
											"name": "DUP6"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "DUP6"
										},
										{
											"begin": 6267,
											"end": 6280,
											"name": "SUB"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "DUP2"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "JUMPI"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "INVALID"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "JUMPDEST"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "SDIV"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6265,
											"end": 6305,
											"name": "MUL"
										},
										{
											"begin": 6265,
											"end": 6319,
											"name": "DUP2"
										},
										{
											"begin": 6265,
											"end": 6319,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 6265,
											"end": 6319,
											"name": "JUMPI"
										},
										{
											"begin": 6265,
											"end": 6319,
											"name": "INVALID"
										},
										{
											"begin": 6265,
											"end": 6319,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 6265,
											"end": 6319,
											"name": "JUMPDEST"
										},
										{
											"begin": 6265,
											"end": 6319,
											"name": "SDIV"
										},
										{
											"begin": 6258,
											"end": 6319,
											"name": "SWAP3"
										},
										{
											"begin": 6258,
											"end": 6319,
											"name": "POP"
										},
										{
											"begin": 6258,
											"end": 6319,
											"name": "POP"
										},
										{
											"begin": 6258,
											"end": 6319,
											"name": "POP"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP2"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "SWAP1"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "POP"
										},
										{
											"begin": 6126,
											"end": 6326,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "JUMPDEST"
										},
										{
											"begin": 8276,
											"end": 8282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8303,
											"end": 8306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0"
										},
										{
											"begin": 8298,
											"end": 8306,
											"name": "SWAP1"
										},
										{
											"begin": 8298,
											"end": 8306,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "PUSH",
											"value": "C1"
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "SWAP1"
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "POP"
										},
										{
											"begin": 8431,
											"end": 8438,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8455,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8447,
											"end": 8449,
											"name": "DUP4"
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "DUP4"
										},
										{
											"begin": 8442,
											"end": 8449,
											"name": "ADD"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "SWAP1"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "SAR"
										},
										{
											"begin": 8431,
											"end": 8455,
											"name": "SWAP1"
										},
										{
											"begin": 8431,
											"end": 8455,
											"name": "POP"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "JUMPDEST"
										},
										{
											"begin": 8482,
											"end": 8484,
											"name": "DUP2"
										},
										{
											"begin": 8477,
											"end": 8478,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8472,
											"end": 8474,
											"name": "DUP5"
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "ADD"
										},
										{
											"begin": 8471,
											"end": 8484,
											"name": "SLT"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "ISZERO"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "JUMPI"
										},
										{
											"begin": 8510,
											"end": 8511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8504,
											"end": 8507,
											"name": "DUP2"
										},
										{
											"begin": 8504,
											"end": 8511,
											"name": "SLT"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "DUP1"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "ISZERO"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "JUMPI"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 8526,
											"end": 8529,
											"name": "DUP2"
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "SUB"
										},
										{
											"begin": 8515,
											"end": 8516,
											"name": "DUP6"
										},
										{
											"begin": 8515,
											"end": 8530,
											"name": "SWAP1"
										},
										{
											"begin": 8515,
											"end": 8530,
											"name": "SHL"
										},
										{
											"begin": 8515,
											"end": 8536,
											"name": "LT"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "JUMPDEST"
										},
										{
											"begin": 8504,
											"end": 8572,
											"name": "DUP1"
										},
										{
											"begin": 8504,
											"end": 8572,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8504,
											"end": 8572,
											"name": "JUMPI"
										},
										{
											"begin": 8504,
											"end": 8572,
											"name": "POP"
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8543,
											"name": "DUP2"
										},
										{
											"begin": 8540,
											"end": 8548,
											"name": "SLT"
										},
										{
											"begin": 8540,
											"end": 8548,
											"name": "ISZERO"
										},
										{
											"begin": 8540,
											"end": 8572,
											"name": "DUP1"
										},
										{
											"begin": 8540,
											"end": 8572,
											"name": "ISZERO"
										},
										{
											"begin": 8540,
											"end": 8572,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 8540,
											"end": 8572,
											"name": "JUMPI"
										},
										{
											"begin": 8540,
											"end": 8572,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 8562,
											"end": 8565,
											"name": "DUP2"
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "DUP6"
										},
										{
											"begin": 8552,
											"end": 8566,
											"name": "SWAP1"
										},
										{
											"begin": 8552,
											"end": 8566,
											"name": "SHR"
										},
										{
											"begin": 8552,
											"end": 8572,
											"name": "LT"
										},
										{
											"begin": 8540,
											"end": 8572,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 8540,
											"end": 8572,
											"name": "JUMPDEST"
										},
										{
											"begin": 8504,
											"end": 8572,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8504,
											"end": 8572,
											"name": "JUMPDEST"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "ISZERO"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "JUMPI"
										},
										{
											"begin": 8595,
											"end": 8598,
											"name": "DUP1"
										},
										{
											"begin": 8590,
											"end": 8598,
											"name": "SWAP2"
										},
										{
											"begin": 8590,
											"end": 8598,
											"name": "POP"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "JUMP"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "JUMPDEST"
										},
										{
											"begin": 8638,
											"end": 8641,
											"name": "DUP1"
										},
										{
											"begin": 8633,
											"end": 8641,
											"name": "SWAP3"
										},
										{
											"begin": 8633,
											"end": 8641,
											"name": "POP"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 8500,
											"end": 8641,
											"name": "JUMPDEST"
										},
										{
											"begin": 8674,
											"end": 8675,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8667,
											"end": 8669,
											"name": "DUP4"
										},
										{
											"begin": 8662,
											"end": 8664,
											"name": "DUP4"
										},
										{
											"begin": 8662,
											"end": 8669,
											"name": "ADD"
										},
										{
											"begin": 8661,
											"end": 8675,
											"name": "SWAP1"
										},
										{
											"begin": 8661,
											"end": 8675,
											"name": "SAR"
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "POP"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "JUMP"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 8465,
											"end": 8686,
											"name": "JUMPDEST"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP2"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "SWAP1"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8692,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "JUMPDEST"
										},
										{
											"begin": 2372,
											"end": 2382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2394,
											"name": "DUP1"
										},
										{
											"begin": 2545,
											"end": 2567,
											"name": "PUSH",
											"value": "BFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2541,
											"name": "DUP4"
										},
										{
											"begin": 2540,
											"end": 2567,
											"name": "SGT"
										},
										{
											"begin": 2540,
											"end": 2567,
											"name": "ISZERO"
										},
										{
											"begin": 2532,
											"end": 2568,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2532,
											"end": 2568,
											"name": "JUMPI"
										},
										{
											"begin": 2532,
											"end": 2568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2568,
											"name": "DUP1"
										},
										{
											"begin": 2532,
											"end": 2568,
											"name": "REVERT"
										},
										{
											"begin": 2532,
											"end": 2568,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2532,
											"end": 2568,
											"name": "JUMPDEST"
										},
										{
											"begin": 2699,
											"end": 2722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000"
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "DUP4"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "SLT"
										},
										{
											"begin": 2691,
											"end": 2749,
											"name": "ISZERO"
										},
										{
											"begin": 2691,
											"end": 2749,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2691,
											"end": 2749,
											"name": "JUMPI"
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "SWAP2"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "POP"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "DUP1"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "SWAP1"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "POP"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "SWAP2"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "POP"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "SWAP2"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "POP"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2736,
											"end": 2749,
											"name": "JUMP"
										},
										{
											"begin": 2691,
											"end": 2749,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2691,
											"end": 2749,
											"name": "JUMPDEST"
										},
										{
											"begin": 2924,
											"end": 2933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "DUP6"
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "SLT"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "JUMPI"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 2992,
											"end": 2993,
											"name": "DUP6"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "DUP2"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "INVALID"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "JUMPDEST"
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "SDIV"
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "SWAP2"
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "DUP6"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "DUP2"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "JUMPI"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "INVALID"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "JUMPDEST"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "SMOD"
										},
										{
											"begin": 3018,
											"end": 3034,
											"name": "SWAP1"
										},
										{
											"begin": 3018,
											"end": 3034,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "JUMP"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "JUMPDEST"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "DUP8"
										},
										{
											"begin": 3082,
											"end": 3085,
											"name": "ADD"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "DUP2"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "JUMPI"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "INVALID"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "JUMPDEST"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "SDIV"
										},
										{
											"begin": 3081,
											"end": 3101,
											"name": "SUB"
										},
										{
											"begin": 3073,
											"end": 3101,
											"name": "SWAP2"
										},
										{
											"begin": 3073,
											"end": 3101,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "DUP2"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 3124,
											"end": 3140,
											"name": "MUL"
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "DUP6"
										},
										{
											"begin": 3119,
											"end": 3141,
											"name": "SUB"
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "SWAP1"
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 2958,
											"end": 3152,
											"name": "JUMPDEST"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "SLT"
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "ISZERO"
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "JUMPI"
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "INVALID"
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3161,
											"end": 3175,
											"name": "JUMPDEST"
										},
										{
											"begin": 3643,
											"end": 3653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 3656,
											"end": 3670,
											"name": "SWAP1"
										},
										{
											"begin": 3656,
											"end": 3670,
											"name": "SHL"
										},
										{
											"begin": 3643,
											"end": 3670,
											"name": "SWAP1"
										},
										{
											"begin": 3643,
											"end": 3670,
											"name": "POP"
										},
										{
											"begin": 3680,
											"end": 3688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "DUP3"
										},
										{
											"begin": 3680,
											"end": 3692,
											"name": "SWAP1"
										},
										{
											"begin": 3680,
											"end": 3692,
											"name": "POP"
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "DUP1"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "PUSH",
											"value": "B17217F7D1CF79AB"
										},
										{
											"begin": 3712,
											"end": 3737,
											"name": "MUL"
										},
										{
											"begin": 3702,
											"end": 3737,
											"name": "DUP3"
										},
										{
											"begin": 3702,
											"end": 3737,
											"name": "ADD"
										},
										{
											"begin": 3702,
											"end": 3737,
											"name": "SWAP2"
										},
										{
											"begin": 3702,
											"end": 3737,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP4"
										},
										{
											"begin": 3754,
											"end": 3758,
											"name": "DUP3"
										},
										{
											"begin": 3754,
											"end": 3762,
											"name": "MUL"
										},
										{
											"begin": 3754,
											"end": 3773,
											"name": "DUP2"
										},
										{
											"begin": 3754,
											"end": 3773,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 3754,
											"end": 3773,
											"name": "JUMPI"
										},
										{
											"begin": 3754,
											"end": 3773,
											"name": "INVALID"
										},
										{
											"begin": 3754,
											"end": 3773,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 3754,
											"end": 3773,
											"name": "JUMPDEST"
										},
										{
											"begin": 3754,
											"end": 3773,
											"name": "SDIV"
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "SWAP1"
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "POP"
										},
										{
											"begin": 3823,
											"end": 3830,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP2"
										},
										{
											"begin": 3793,
											"end": 3811,
											"name": "PUSH",
											"value": "F5FDEFFC162C7543"
										},
										{
											"begin": 3793,
											"end": 3818,
											"name": "MUL"
										},
										{
											"begin": 3793,
											"end": 3831,
											"name": "SWAP1"
										},
										{
											"begin": 3793,
											"end": 3831,
											"name": "SAR"
										},
										{
											"begin": 3783,
											"end": 3831,
											"name": "DUP3"
										},
										{
											"begin": 3783,
											"end": 3831,
											"name": "ADD"
										},
										{
											"begin": 3783,
											"end": 3831,
											"name": "SWAP2"
										},
										{
											"begin": 3783,
											"end": 3831,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP4"
										},
										{
											"begin": 3848,
											"end": 3852,
											"name": "DUP3"
										},
										{
											"begin": 3848,
											"end": 3856,
											"name": "MUL"
										},
										{
											"begin": 3848,
											"end": 3867,
											"name": "DUP2"
										},
										{
											"begin": 3848,
											"end": 3867,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 3848,
											"end": 3867,
											"name": "JUMPI"
										},
										{
											"begin": 3848,
											"end": 3867,
											"name": "INVALID"
										},
										{
											"begin": 3848,
											"end": 3867,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 3848,
											"end": 3867,
											"name": "JUMPDEST"
										},
										{
											"begin": 3848,
											"end": 3867,
											"name": "SDIV"
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "POP"
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP2"
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "PUSH",
											"value": "E35846B82505FC59"
										},
										{
											"begin": 3887,
											"end": 3912,
											"name": "MUL"
										},
										{
											"begin": 3887,
											"end": 3925,
											"name": "SWAP1"
										},
										{
											"begin": 3887,
											"end": 3925,
											"name": "SAR"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "ADD"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 3925,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP4"
										},
										{
											"begin": 3942,
											"end": 3946,
											"name": "DUP3"
										},
										{
											"begin": 3942,
											"end": 3950,
											"name": "MUL"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "DUP2"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "JUMPI"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "INVALID"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "JUMPDEST"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "SDIV"
										},
										{
											"begin": 3935,
											"end": 3961,
											"name": "SWAP1"
										},
										{
											"begin": 3935,
											"end": 3961,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "DUP2"
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "PUSH",
											"value": "9D955B7DD273B94E"
										},
										{
											"begin": 3981,
											"end": 4006,
											"name": "MUL"
										},
										{
											"begin": 3981,
											"end": 4019,
											"name": "SWAP1"
										},
										{
											"begin": 3981,
											"end": 4019,
											"name": "SAR"
										},
										{
											"begin": 3971,
											"end": 4019,
											"name": "DUP3"
										},
										{
											"begin": 3971,
											"end": 4019,
											"name": "ADD"
										},
										{
											"begin": 3971,
											"end": 4019,
											"name": "SWAP2"
										},
										{
											"begin": 3971,
											"end": 4019,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "DUP4"
										},
										{
											"begin": 4036,
											"end": 4040,
											"name": "DUP3"
										},
										{
											"begin": 4036,
											"end": 4044,
											"name": "MUL"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "JUMPI"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "INVALID"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "SDIV"
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP1"
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "POP"
										},
										{
											"begin": 4105,
											"end": 4112,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4096,
											"end": 4100,
											"name": "DUP2"
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "PUSH",
											"value": "AEC3FF3C53398883"
										},
										{
											"begin": 4075,
											"end": 4100,
											"name": "MUL"
										},
										{
											"begin": 4075,
											"end": 4113,
											"name": "SWAP1"
										},
										{
											"begin": 4075,
											"end": 4113,
											"name": "SAR"
										},
										{
											"begin": 4065,
											"end": 4113,
											"name": "DUP3"
										},
										{
											"begin": 4065,
											"end": 4113,
											"name": "ADD"
										},
										{
											"begin": 4065,
											"end": 4113,
											"name": "SWAP2"
										},
										{
											"begin": 4065,
											"end": 4113,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4137,
											"end": 4138,
											"name": "DUP4"
										},
										{
											"begin": 4130,
											"end": 4134,
											"name": "DUP3"
										},
										{
											"begin": 4130,
											"end": 4138,
											"name": "MUL"
										},
										{
											"begin": 4130,
											"end": 4149,
											"name": "DUP2"
										},
										{
											"begin": 4130,
											"end": 4149,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4130,
											"end": 4149,
											"name": "JUMPI"
										},
										{
											"begin": 4130,
											"end": 4149,
											"name": "INVALID"
										},
										{
											"begin": 4130,
											"end": 4149,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4130,
											"end": 4149,
											"name": "JUMPDEST"
										},
										{
											"begin": 4130,
											"end": 4149,
											"name": "SDIV"
										},
										{
											"begin": 4123,
											"end": 4149,
											"name": "SWAP1"
										},
										{
											"begin": 4123,
											"end": 4149,
											"name": "POP"
										},
										{
											"begin": 4199,
											"end": 4206,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4190,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"value": "A184897C363C3B7A"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MUL"
										},
										{
											"begin": 4169,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4169,
											"end": 4207,
											"name": "SAR"
										},
										{
											"begin": 4159,
											"end": 4207,
											"name": "DUP3"
										},
										{
											"begin": 4159,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4159,
											"end": 4207,
											"name": "SWAP2"
										},
										{
											"begin": 4159,
											"end": 4207,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "DUP4"
										},
										{
											"begin": 4224,
											"end": 4228,
											"name": "DUP3"
										},
										{
											"begin": 4224,
											"end": 4232,
											"name": "MUL"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "JUMPI"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "INVALID"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "JUMPDEST"
										},
										{
											"begin": 4224,
											"end": 4243,
											"name": "SDIV"
										},
										{
											"begin": 4217,
											"end": 4243,
											"name": "SWAP1"
										},
										{
											"begin": 4217,
											"end": 4243,
											"name": "POP"
										},
										{
											"begin": 4293,
											"end": 4300,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 4284,
											"end": 4288,
											"name": "DUP2"
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH",
											"value": "FFE5FE2C45863435"
										},
										{
											"begin": 4263,
											"end": 4288,
											"name": "MUL"
										},
										{
											"begin": 4263,
											"end": 4301,
											"name": "SWAP1"
										},
										{
											"begin": 4263,
											"end": 4301,
											"name": "SAR"
										},
										{
											"begin": 4253,
											"end": 4301,
											"name": "DUP3"
										},
										{
											"begin": 4253,
											"end": 4301,
											"name": "ADD"
										},
										{
											"begin": 4253,
											"end": 4301,
											"name": "SWAP2"
										},
										{
											"begin": 4253,
											"end": 4301,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "DUP4"
										},
										{
											"begin": 4318,
											"end": 4322,
											"name": "DUP3"
										},
										{
											"begin": 4318,
											"end": 4326,
											"name": "MUL"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "DUP2"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "JUMPI"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "INVALID"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "JUMPDEST"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "SDIV"
										},
										{
											"begin": 4311,
											"end": 4337,
											"name": "SWAP1"
										},
										{
											"begin": 4311,
											"end": 4337,
											"name": "POP"
										},
										{
											"begin": 4387,
											"end": 4394,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "DUP2"
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "PUSH",
											"value": "B160111D2E411FEC"
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "MUL"
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "SWAP1"
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "SAR"
										},
										{
											"begin": 4347,
											"end": 4395,
											"name": "DUP3"
										},
										{
											"begin": 4347,
											"end": 4395,
											"name": "ADD"
										},
										{
											"begin": 4347,
											"end": 4395,
											"name": "SWAP2"
										},
										{
											"begin": 4347,
											"end": 4395,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4419,
											"end": 4420,
											"name": "DUP4"
										},
										{
											"begin": 4412,
											"end": 4416,
											"name": "DUP3"
										},
										{
											"begin": 4412,
											"end": 4420,
											"name": "MUL"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "DUP2"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "JUMPI"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "INVALID"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "JUMPDEST"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "SDIV"
										},
										{
											"begin": 4405,
											"end": 4431,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4431,
											"name": "POP"
										},
										{
											"begin": 4481,
											"end": 4488,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4472,
											"end": 4476,
											"name": "DUP2"
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "PUSH",
											"value": "DA929E9CAF3E1ED2"
										},
										{
											"begin": 4451,
											"end": 4476,
											"name": "MUL"
										},
										{
											"begin": 4451,
											"end": 4489,
											"name": "SWAP1"
										},
										{
											"begin": 4451,
											"end": 4489,
											"name": "SAR"
										},
										{
											"begin": 4441,
											"end": 4489,
											"name": "DUP3"
										},
										{
											"begin": 4441,
											"end": 4489,
											"name": "ADD"
										},
										{
											"begin": 4441,
											"end": 4489,
											"name": "SWAP2"
										},
										{
											"begin": 4441,
											"end": 4489,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "DUP4"
										},
										{
											"begin": 4506,
											"end": 4510,
											"name": "DUP3"
										},
										{
											"begin": 4506,
											"end": 4514,
											"name": "MUL"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "DUP2"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "JUMPI"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "INVALID"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "JUMPDEST"
										},
										{
											"begin": 4506,
											"end": 4525,
											"name": "SDIV"
										},
										{
											"begin": 4499,
											"end": 4525,
											"name": "SWAP1"
										},
										{
											"begin": 4499,
											"end": 4525,
											"name": "POP"
										},
										{
											"begin": 4575,
											"end": 4582,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4566,
											"end": 4570,
											"name": "DUP2"
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "PUSH",
											"value": "F267A8AC5C764FB7"
										},
										{
											"begin": 4545,
											"end": 4570,
											"name": "MUL"
										},
										{
											"begin": 4545,
											"end": 4583,
											"name": "SWAP1"
										},
										{
											"begin": 4545,
											"end": 4583,
											"name": "SAR"
										},
										{
											"begin": 4535,
											"end": 4583,
											"name": "DUP3"
										},
										{
											"begin": 4535,
											"end": 4583,
											"name": "ADD"
										},
										{
											"begin": 4535,
											"end": 4583,
											"name": "SWAP2"
										},
										{
											"begin": 4535,
											"end": 4583,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "DUP4"
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "DUP3"
										},
										{
											"begin": 4600,
											"end": 4608,
											"name": "MUL"
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "DUP2"
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "JUMPI"
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "INVALID"
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "JUMPDEST"
										},
										{
											"begin": 4600,
											"end": 4619,
											"name": "SDIV"
										},
										{
											"begin": 4593,
											"end": 4619,
											"name": "SWAP1"
										},
										{
											"begin": 4593,
											"end": 4619,
											"name": "POP"
										},
										{
											"begin": 4669,
											"end": 4676,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "DUP2"
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "PUSH",
											"value": "F465639A8DD92607"
										},
										{
											"begin": 4639,
											"end": 4664,
											"name": "MUL"
										},
										{
											"begin": 4639,
											"end": 4677,
											"name": "SWAP1"
										},
										{
											"begin": 4639,
											"end": 4677,
											"name": "SAR"
										},
										{
											"begin": 4629,
											"end": 4677,
											"name": "DUP3"
										},
										{
											"begin": 4629,
											"end": 4677,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4677,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4677,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4701,
											"end": 4702,
											"name": "DUP4"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "DUP3"
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "MUL"
										},
										{
											"begin": 4694,
											"end": 4713,
											"name": "DUP2"
										},
										{
											"begin": 4694,
											"end": 4713,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 4694,
											"end": 4713,
											"name": "JUMPI"
										},
										{
											"begin": 4694,
											"end": 4713,
											"name": "INVALID"
										},
										{
											"begin": 4694,
											"end": 4713,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 4694,
											"end": 4713,
											"name": "JUMPDEST"
										},
										{
											"begin": 4694,
											"end": 4713,
											"name": "SDIV"
										},
										{
											"begin": 4687,
											"end": 4713,
											"name": "SWAP1"
										},
										{
											"begin": 4687,
											"end": 4713,
											"name": "POP"
										},
										{
											"begin": 4763,
											"end": 4770,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 4754,
											"end": 4758,
											"name": "DUP2"
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "PUSH",
											"value": "E1DEB287E14C2F15"
										},
										{
											"begin": 4733,
											"end": 4758,
											"name": "MUL"
										},
										{
											"begin": 4733,
											"end": 4771,
											"name": "SWAP1"
										},
										{
											"begin": 4733,
											"end": 4771,
											"name": "SAR"
										},
										{
											"begin": 4723,
											"end": 4771,
											"name": "DUP3"
										},
										{
											"begin": 4723,
											"end": 4771,
											"name": "ADD"
										},
										{
											"begin": 4723,
											"end": 4771,
											"name": "SWAP2"
										},
										{
											"begin": 4723,
											"end": 4771,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "DUP4"
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "DUP3"
										},
										{
											"begin": 4788,
											"end": 4796,
											"name": "MUL"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "DUP2"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "JUMPI"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "INVALID"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "JUMPDEST"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "SDIV"
										},
										{
											"begin": 4781,
											"end": 4807,
											"name": "SWAP1"
										},
										{
											"begin": 4781,
											"end": 4807,
											"name": "POP"
										},
										{
											"begin": 4857,
											"end": 4865,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "DUP2"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "PUSH",
											"value": "C0B0C98B3687CB14"
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "MUL"
										},
										{
											"begin": 4827,
											"end": 4866,
											"name": "SWAP1"
										},
										{
											"begin": 4827,
											"end": 4866,
											"name": "SAR"
										},
										{
											"begin": 4817,
											"end": 4866,
											"name": "DUP3"
										},
										{
											"begin": 4817,
											"end": 4866,
											"name": "ADD"
										},
										{
											"begin": 4817,
											"end": 4866,
											"name": "SWAP2"
										},
										{
											"begin": 4817,
											"end": 4866,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "DUP4"
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "DUP3"
										},
										{
											"begin": 4883,
											"end": 4891,
											"name": "MUL"
										},
										{
											"begin": 4883,
											"end": 4902,
											"name": "DUP2"
										},
										{
											"begin": 4883,
											"end": 4902,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 4883,
											"end": 4902,
											"name": "JUMPI"
										},
										{
											"begin": 4883,
											"end": 4902,
											"name": "INVALID"
										},
										{
											"begin": 4883,
											"end": 4902,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 4883,
											"end": 4902,
											"name": "JUMPDEST"
										},
										{
											"begin": 4883,
											"end": 4902,
											"name": "SDIV"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "SWAP1"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "POP"
										},
										{
											"begin": 4952,
											"end": 4960,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 4943,
											"end": 4947,
											"name": "DUP2"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "PUSH",
											"value": "98A4B26AC3C54B9F"
										},
										{
											"begin": 4922,
											"end": 4947,
											"name": "MUL"
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "SWAP1"
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "SAR"
										},
										{
											"begin": 4912,
											"end": 4961,
											"name": "DUP3"
										},
										{
											"begin": 4912,
											"end": 4961,
											"name": "ADD"
										},
										{
											"begin": 4912,
											"end": 4961,
											"name": "SWAP2"
										},
										{
											"begin": 4912,
											"end": 4961,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 4985,
											"end": 4986,
											"name": "DUP4"
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "DUP3"
										},
										{
											"begin": 4978,
											"end": 4986,
											"name": "MUL"
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "DUP2"
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "JUMPI"
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "INVALID"
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "JUMPDEST"
										},
										{
											"begin": 4978,
											"end": 4997,
											"name": "SDIV"
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "SWAP1"
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "POP"
										},
										{
											"begin": 5047,
											"end": 5055,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 5038,
											"end": 5042,
											"name": "DUP2"
										},
										{
											"begin": 5017,
											"end": 5035,
											"name": "PUSH",
											"value": "E1B7421D82010F33"
										},
										{
											"begin": 5017,
											"end": 5042,
											"name": "MUL"
										},
										{
											"begin": 5017,
											"end": 5056,
											"name": "SWAP1"
										},
										{
											"begin": 5017,
											"end": 5056,
											"name": "SAR"
										},
										{
											"begin": 5007,
											"end": 5056,
											"name": "DUP3"
										},
										{
											"begin": 5007,
											"end": 5056,
											"name": "ADD"
										},
										{
											"begin": 5007,
											"end": 5056,
											"name": "SWAP2"
										},
										{
											"begin": 5007,
											"end": 5056,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 5080,
											"end": 5081,
											"name": "DUP4"
										},
										{
											"begin": 5073,
											"end": 5077,
											"name": "DUP3"
										},
										{
											"begin": 5073,
											"end": 5081,
											"name": "MUL"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "DUP2"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "JUMPI"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "INVALID"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "JUMPDEST"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "SDIV"
										},
										{
											"begin": 5066,
											"end": 5092,
											"name": "SWAP1"
										},
										{
											"begin": 5066,
											"end": 5092,
											"name": "POP"
										},
										{
											"begin": 5142,
											"end": 5150,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 5133,
											"end": 5137,
											"name": "DUP2"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "PUSH",
											"value": "9C744D73CFC59C91"
										},
										{
											"begin": 5112,
											"end": 5137,
											"name": "MUL"
										},
										{
											"begin": 5112,
											"end": 5151,
											"name": "SWAP1"
										},
										{
											"begin": 5112,
											"end": 5151,
											"name": "SAR"
										},
										{
											"begin": 5102,
											"end": 5151,
											"name": "DUP3"
										},
										{
											"begin": 5102,
											"end": 5151,
											"name": "ADD"
										},
										{
											"begin": 5102,
											"end": 5151,
											"name": "SWAP2"
										},
										{
											"begin": 5102,
											"end": 5151,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "DUP4"
										},
										{
											"begin": 5168,
											"end": 5172,
											"name": "DUP3"
										},
										{
											"begin": 5168,
											"end": 5176,
											"name": "MUL"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "DUP2"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "JUMPI"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "INVALID"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "JUMPDEST"
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "SDIV"
										},
										{
											"begin": 5161,
											"end": 5187,
											"name": "SWAP1"
										},
										{
											"begin": 5161,
											"end": 5187,
											"name": "POP"
										},
										{
											"begin": 5237,
											"end": 5245,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 5228,
											"end": 5232,
											"name": "DUP2"
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "PUSH",
											"value": "CC2225A0E12D3EAB"
										},
										{
											"begin": 5207,
											"end": 5232,
											"name": "MUL"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "SWAP1"
										},
										{
											"begin": 5207,
											"end": 5246,
											"name": "SAR"
										},
										{
											"begin": 5197,
											"end": 5246,
											"name": "DUP3"
										},
										{
											"begin": 5197,
											"end": 5246,
											"name": "ADD"
										},
										{
											"begin": 5197,
											"end": 5246,
											"name": "SWAP2"
										},
										{
											"begin": 5197,
											"end": 5246,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "DUP4"
										},
										{
											"begin": 5263,
											"end": 5267,
											"name": "DUP3"
										},
										{
											"begin": 5263,
											"end": 5271,
											"name": "MUL"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "DUP2"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "JUMPI"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "INVALID"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "JUMPDEST"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "SDIV"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "SWAP1"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "POP"
										},
										{
											"begin": 5329,
											"end": 5337,
											"name": "PUSH",
											"value": "3E"
										},
										{
											"begin": 5320,
											"end": 5324,
											"name": "DUP2"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "PUSH",
											"value": "FB8BB5EDA1B4AEB9"
										},
										{
											"begin": 5299,
											"end": 5324,
											"name": "MUL"
										},
										{
											"begin": 5299,
											"end": 5338,
											"name": "SWAP1"
										},
										{
											"begin": 5299,
											"end": 5338,
											"name": "SAR"
										},
										{
											"begin": 5292,
											"end": 5338,
											"name": "SWAP1"
										},
										{
											"begin": 5292,
											"end": 5338,
											"name": "POP"
										},
										{
											"begin": 5358,
											"end": 5362,
											"name": "DUP1"
										},
										{
											"begin": 5348,
											"end": 5362,
											"name": "DUP3"
										},
										{
											"begin": 5348,
											"end": 5362,
											"name": "ADD"
										},
										{
											"begin": 5348,
											"end": 5362,
											"name": "SWAP2"
										},
										{
											"begin": 5348,
											"end": 5362,
											"name": "POP"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5383,
											"end": 5390,
											"name": "MUL"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "SWAP1"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "POP"
										},
										{
											"begin": 5411,
											"end": 5413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5413,
											"name": "DUP5"
										},
										{
											"begin": 5402,
											"end": 5413,
											"name": "SUB"
										},
										{
											"begin": 5402,
											"end": 5413,
											"name": "SWAP4"
										},
										{
											"begin": 5402,
											"end": 5413,
											"name": "POP"
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5432,
											"name": "DUP5"
										},
										{
											"begin": 5427,
											"end": 5437,
											"name": "SLT"
										},
										{
											"begin": 5423,
											"end": 5869,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5423,
											"end": 5869,
											"name": "JUMPI"
										},
										{
											"begin": 5482,
											"end": 5483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5477,
											"name": "DUP5"
										},
										{
											"begin": 5468,
											"end": 5471,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "SUB"
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP4"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "DUP3"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "SLT"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "ISZERO"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "JUMPI"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "INVALID"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "JUMPDEST"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "SWAP1"
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "SAR"
										},
										{
											"begin": 5457,
											"end": 5483,
											"name": "EQ"
										},
										{
											"begin": 5453,
											"end": 5858,
											"name": "ISZERO"
										},
										{
											"begin": 5453,
											"end": 5858,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5453,
											"end": 5858,
											"name": "JUMPI"
										},
										{
											"begin": 5527,
											"end": 5532,
											"name": "DUP4"
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "DUP3"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "DUP3"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "SLT"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "ISZERO"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "JUMPI"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "INVALID"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "JUMPDEST"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "SWAP1"
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "SHL"
										},
										{
											"begin": 5503,
											"end": 5532,
											"name": "SWAP6"
										},
										{
											"begin": 5503,
											"end": 5532,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5564,
											"name": "DUP4"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "DUP2"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "DUP3"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "SLT"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "ISZERO"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "JUMPI"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "INVALID"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "JUMPDEST"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "SWAP1"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "SHL"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "SWAP1"
										},
										{
											"begin": 5550,
											"end": 5564,
											"name": "POP"
										},
										{
											"begin": 5631,
											"end": 5636,
											"name": "DUP6"
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "DUP2"
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP8"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "ADD"
										},
										{
											"begin": 5609,
											"end": 5636,
											"name": "LT"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "JUMPI"
										},
										{
											"begin": 5679,
											"end": 5683,
											"name": "DUP1"
										},
										{
											"begin": 5666,
											"end": 5671,
											"name": "DUP7"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "ADD"
										},
										{
											"begin": 5658,
											"end": 5684,
											"name": "SWAP5"
										},
										{
											"begin": 5658,
											"end": 5684,
											"name": "POP"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "JUMP"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "JUMPDEST"
										},
										{
											"begin": 5735,
											"end": 5743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5727,
											"end": 5743,
											"name": "SWAP5"
										},
										{
											"begin": 5727,
											"end": 5743,
											"name": "POP"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 5605,
											"end": 5743,
											"name": "JUMPDEST"
										},
										{
											"begin": 5769,
											"end": 5774,
											"name": "DUP6"
										},
										{
											"begin": 5776,
											"end": 5781,
											"name": "DUP6"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "SWAP6"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "POP"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "SWAP6"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "POP"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "POP"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "POP"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "POP"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "POP"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5761,
											"end": 5782,
											"name": "JUMP"
										},
										{
											"begin": 5453,
											"end": 5858,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5453,
											"end": 5858,
											"name": "JUMPDEST"
										},
										{
											"begin": 5839,
											"end": 5847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5857,
											"name": "DUP1"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "DUP2"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "SWAP2"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "DUP1"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "SWAP1"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "SWAP6"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "SWAP6"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "JUMP"
										},
										{
											"begin": 5423,
											"end": 5869,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 5423,
											"end": 5869,
											"name": "JUMPDEST"
										},
										{
											"begin": 5906,
											"end": 5907,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5896,
											"end": 5901,
											"name": "DUP5"
										},
										{
											"begin": 5895,
											"end": 5901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5901,
											"name": "SUB"
										},
										{
											"begin": 5886,
											"end": 5890,
											"name": "DUP3"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "DUP3"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "SLT"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "ISZERO"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "JUMPI"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "INVALID"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "JUMPDEST"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "SWAP1"
										},
										{
											"begin": 5886,
											"end": 5902,
											"name": "SAR"
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "ADD"
										},
										{
											"begin": 5878,
											"end": 5907,
											"name": "SWAP1"
										},
										{
											"begin": 5878,
											"end": 5907,
											"name": "POP"
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4"
										},
										{
											"begin": 5942,
											"end": 5948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5948,
											"name": "SUB"
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP3"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "DUP3"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "SLT"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "ISZERO"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPI"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "INVALID"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "SWAP1"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "SHR"
										},
										{
											"begin": 5917,
											"end": 5949,
											"name": "SWAP6"
										},
										{
											"begin": 5917,
											"end": 5949,
											"name": "POP"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "DUP1"
										},
										{
											"begin": 5967,
											"end": 5972,
											"name": "DUP7"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD"
										},
										{
											"begin": 5959,
											"end": 5985,
											"name": "SWAP5"
										},
										{
											"begin": 5959,
											"end": 5985,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6008,
											"name": "DUP6"
										},
										{
											"begin": 6010,
											"end": 6015,
											"name": "DUP6"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "SWAP6"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "POP"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "SWAP6"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "POP"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "POP"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "POP"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "POP"
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "JUMPDEST"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP2"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "SWAP2"
										},
										{
											"begin": 2300,
											"end": 6023,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 506,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "JUMPDEST"
										},
										{
											"begin": 8891,
											"end": 8901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8939,
											"end": 8940,
											"name": "DUP1"
										},
										{
											"begin": 8925,
											"end": 8929,
											"name": "DUP3"
										},
										{
											"begin": 8925,
											"end": 8936,
											"name": "MLOAD"
										},
										{
											"begin": 8925,
											"end": 8940,
											"name": "GT"
										},
										{
											"begin": 8917,
											"end": 8941,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8917,
											"end": 8941,
											"name": "JUMPI"
										},
										{
											"begin": 8917,
											"end": 8941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8941,
											"name": "DUP1"
										},
										{
											"begin": 8917,
											"end": 8941,
											"name": "REVERT"
										},
										{
											"begin": 8917,
											"end": 8941,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 8917,
											"end": 8941,
											"name": "JUMPDEST"
										},
										{
											"begin": 8960,
											"end": 8967,
											"name": "PUSH",
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8951,
											"end": 8967,
											"name": "SWAP1"
										},
										{
											"begin": 8951,
											"end": 8967,
											"name": "POP"
										},
										{
											"begin": 8982,
											"end": 8988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8992,
											"name": "DUP1"
										},
										{
											"begin": 8982,
											"end": 8992,
											"name": "SWAP1"
										},
										{
											"begin": 8982,
											"end": 8992,
											"name": "POP"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "JUMPDEST"
										},
										{
											"begin": 8998,
											"end": 9002,
											"name": "DUP3"
										},
										{
											"begin": 8998,
											"end": 9009,
											"name": "MLOAD"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "DUP2"
										},
										{
											"begin": 8994,
											"end": 9009,
											"name": "LT"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "ISZERO"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "JUMPI"
										},
										{
											"begin": 9042,
											"end": 9048,
											"name": "DUP2"
										},
										{
											"begin": 9032,
											"end": 9036,
											"name": "DUP4"
										},
										{
											"begin": 9037,
											"end": 9038,
											"name": "DUP3"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "DUP2"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "MLOAD"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "DUP2"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "LT"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "JUMPI"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "INVALID"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "JUMPDEST"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "MUL"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "ADD"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "ADD"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "MLOAD"
										},
										{
											"begin": 9032,
											"end": 9048,
											"name": "SGT"
										},
										{
											"begin": 9028,
											"end": 9082,
											"name": "ISZERO"
										},
										{
											"begin": 9028,
											"end": 9082,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9028,
											"end": 9082,
											"name": "JUMPI"
										},
										{
											"begin": 9075,
											"end": 9079,
											"name": "DUP3"
										},
										{
											"begin": 9080,
											"end": 9081,
											"name": "DUP2"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "DUP2"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "MLOAD"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "DUP2"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "LT"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "JUMPI"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "INVALID"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "JUMPDEST"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "MUL"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "ADD"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "ADD"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "MLOAD"
										},
										{
											"begin": 9066,
											"end": 9082,
											"name": "SWAP2"
										},
										{
											"begin": 9066,
											"end": 9082,
											"name": "POP"
										},
										{
											"begin": 9028,
											"end": 9082,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 9028,
											"end": 9082,
											"name": "JUMPDEST"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "DUP1"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "DUP1"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "ADD"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "SWAP2"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "POP"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "POP"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "JUMP"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "JUMPDEST"
										},
										{
											"begin": 8977,
											"end": 9082,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP2"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "SWAP1"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "POP"
										},
										{
											"begin": 8814,
											"end": 9089,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "JUMPDEST"
										},
										{
											"begin": 831,
											"end": 835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1005,
											"name": "PUSH",
											"value": "851591F9DD5B9B40D7"
										},
										{
											"begin": 978,
											"end": 979,
											"name": "DUP3"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "SGT"
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "ISZERO"
										},
										{
											"begin": 970,
											"end": 1006,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 970,
											"end": 1006,
											"name": "JUMPI"
										},
										{
											"begin": 970,
											"end": 1006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 1006,
											"name": "DUP1"
										},
										{
											"begin": 970,
											"end": 1006,
											"name": "REVERT"
										},
										{
											"begin": 970,
											"end": 1006,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 970,
											"end": 1006,
											"name": "JUMPDEST"
										},
										{
											"begin": 1135,
											"end": 1157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3A37A020B8C21950D"
										},
										{
											"begin": 1130,
											"end": 1131,
											"name": "DUP3"
										},
										{
											"begin": 1130,
											"end": 1157,
											"name": "SGT"
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "JUMPI"
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "POP"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "JUMP"
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1126,
											"end": 1179,
											"name": "JUMPDEST"
										},
										{
											"begin": 1231,
											"end": 1241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "DUP1"
										},
										{
											"begin": 1257,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 539,
											"end": 557,
											"name": "PUSH",
											"value": "B17217F7D1CF79AC"
										},
										{
											"begin": 487,
											"end": 506,
											"name": "PUSH",
											"value": "10000000000000000"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP7"
										},
										{
											"begin": 1268,
											"end": 1280,
											"name": "MUL"
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "DUP2"
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "INVALID"
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "SDIV"
										},
										{
											"begin": 1257,
											"end": 1267,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1257,
											"end": 1292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1292,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 1257,
											"end": 1292,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1292,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1292,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1292,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1292,
											"name": "POP"
										},
										{
											"begin": 1331,
											"end": 1336,
											"name": "DUP2"
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "DUP4"
										},
										{
											"begin": 1310,
											"end": 1315,
											"name": "DUP4"
										},
										{
											"begin": 1310,
											"end": 1323,
											"name": "SUB"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "DUP2"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "JUMPI"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "INVALID"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "JUMPDEST"
										},
										{
											"begin": 1309,
											"end": 1328,
											"name": "DIV"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "ADD"
										},
										{
											"begin": 1302,
											"end": 1336,
											"name": "SWAP3"
										},
										{
											"begin": 1302,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "JUMPDEST"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP2"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 766,
											"end": 1343,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"LN2()": "02780677",
							"LOG2_E()": "24902e24",
							"ONE()": "c2ee3a08",
							"binaryLog(uint256,Fixed192x64Math.EstimationMode)": "137bf798",
							"exp(int256)": "e46751e3",
							"floorLog2(uint256)": "45b8bafc",
							"ln(uint256)": "24d4e90a",
							"log2Bounds(uint256)": "1427f168",
							"max(int256[])": "ccc13814",
							"pow2(int256,Fixed192x64Math.EstimationMode)": "1d580123",
							"pow2Bounds(int256)": "c1266227"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"LN2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"estimationMode\",\"type\":\"Fixed192x64Math.EstimationMode\"}],\"name\":\"binaryLog\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"log2Bounds\",\"outputs\":[{\"name\":\"lower\",\"type\":\"int256\"},{\"name\":\"upper\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"int256\"},{\"name\":\"estimationMode\",\"type\":\"Fixed192x64Math.EstimationMode\"}],\"name\":\"pow2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOG2_E\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"ln\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"floorLog2\",\"outputs\":[{\"name\":\"lo\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"int256\"}],\"name\":\"pow2Bounds\",\"outputs\":[{\"name\":\"lower\",\"type\":\"uint256\"},{\"name\":\"upper\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nums\",\"type\":\"int256[]\"}],\"name\":\"max\",\"outputs\":[{\"name\":\"maxNum\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"int256\"}],\"name\":\"exp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alan Lu - <alan.lu@gnosis.pm>Stefan George - <stefan@gnosis.pm>\",\"methods\":{\"binaryLog(uint256,Fixed192x64Math.EstimationMode)\":{\"details\":\"Returns estimate of binaryLog(x) given x\",\"params\":{\"estimationMode\":\"whether to return a lower bound, upper bound, or a midpoint\",\"x\":\"logarithm argument in fixed point\"},\"return\":\"estimate of binaryLog(x) in fixed point\"},\"exp(int256)\":{\"details\":\"Returns natural exponential function value of given x\",\"params\":{\"x\":\"x\"},\"return\":\"e**x\"},\"floorLog2(uint256)\":{\"details\":\"Returns base 2 logarithm value of given x\",\"params\":{\"x\":\"x\"},\"return\":\"logarithmic value\"},\"ln(uint256)\":{\"details\":\"Returns natural logarithm value of given x\",\"params\":{\"x\":\"x\"},\"return\":\"ln(x)\"},\"log2Bounds(uint256)\":{\"details\":\"Returns bounds for value of binaryLog(x) given x\",\"params\":{\"x\":\"logarithm argument in fixed point\"},\"return\":\"{   \\\"lower\\\": \\\"lower bound of binaryLog(x) in fixed point\\\",   \\\"upper\\\": \\\"upper bound of binaryLog(x) in fixed point\\\" }\"},\"max(int256[])\":{\"details\":\"Returns maximum of an array\",\"params\":{\"nums\":\"Numbers to look through\"},\"return\":\"Maximum number\"},\"pow2(int256,Fixed192x64Math.EstimationMode)\":{\"details\":\"Returns estimate of 2**x given x\",\"params\":{\"estimationMode\":\"whether to return a lower bound, upper bound, or a midpoint\",\"x\":\"exponent in fixed point\"},\"return\":\"estimate of 2**x in fixed point\"},\"pow2Bounds(int256)\":{\"details\":\"Returns bounds for value of 2**x given x\",\"params\":{\"x\":\"exponent in fixed point\"},\"return\":\"{   \\\"lower\\\": \\\"lower bound of 2**x in fixed point\\\",   \\\"upper\\\": \\\"upper bound of 2**x in fixed point\\\" }\"}},\"title\":\"Fixed192x64Math library - Allows calculation of logarithmic and exponential functions\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/Fixed192x64Math.sol\":\"Fixed192x64Math\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/Fixed192x64Math.sol\":{\"keccak256\":\"0xc33138c638cc87d227f443dfa6da620e539e38868c6f583c46147cdc75fe4775\",\"urls\":[\"bzzr://ea3d05d35ae7e989810fa9ef193aed1eb312aa47315c245c1d349afa9ee77ea6\",\"dweb:/ipfs/QmbMp9vUSiUJSUD6n9LpnQgmaVemsZjy7mPrfY5ukSNAfT\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"input/Fixed192x64Math.sol": {
				"ast": {
					"absolutePath": "input/Fixed192x64Math.sol",
					"exportedSymbols": {
						"Fixed192x64Math": [
							999
						]
					},
					"id": 1000,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "66:32:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title Fixed192x64Math library - Allows calculation of logarithmic and exponential functions\n @author Alan Lu - <alan.lu@gnosis.pm>\n @author Stefan George - <stefan@gnosis.pm>",
							"fullyImplemented": true,
							"id": 999,
							"linearizedBaseContracts": [
								999
							],
							"name": "Fixed192x64Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Fixed192x64Math.EstimationMode",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "LowerBound",
											"nodeType": "EnumValue",
											"src": "340:10:0"
										},
										{
											"id": 3,
											"name": "UpperBound",
											"nodeType": "EnumValue",
											"src": "352:10:0"
										},
										{
											"id": 4,
											"name": "Midpoint",
											"nodeType": "EnumValue",
											"src": "364:8:0"
										}
									],
									"name": "EstimationMode",
									"nodeType": "EnumDefinition",
									"src": "318:56:0"
								},
								{
									"constant": true,
									"id": 8,
									"name": "ONE",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "459:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "459:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783130303030303030303030303030303030",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "487:19:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551616_by_1",
											"typeString": "int_const 18446744073709551616"
										},
										"value": "0x10000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 11,
									"name": "LN2",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "512:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "512:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307862313732313766376431636637396163",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "539:18:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12786308645202655660_by_1",
											"typeString": "int_const 12786308645202655660"
										},
										"value": "0xb17217f7d1cf79ac"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "LOG2_E",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "563:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "563:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783137313534373635326238326665313737",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "593:19:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26613026195688644983_by_1",
											"typeString": "int_const 26613026195688644983"
										},
										"value": "0x171547652b82fe177"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "841:502:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 22,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "978:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32343534393731323539383738393039383836363739",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "983:22:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2454971259878909886679_by_1",
																	"typeString": "int_const 2454971259878909886679"
																},
																"value": "2454971259878909886679"
															},
															"src": "978:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1017,
															1018
														],
														"referencedDeclaration": 1017,
														"src": "970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "970:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 27,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1130:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "1135:22:0",
														"subExpression": {
															"argumentTypes": null,
															"hexValue": "383138333233373533323932393639393632323237",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1136:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_818323753292969962227_by_1",
																"typeString": "int_const 818323753292969962227"
															},
															"value": "818323753292969962227"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_818323753292969962227_by_1",
															"typeString": "int_const -818323753292969962227"
														}
													},
													"src": "1130:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 33,
												"nodeType": "IfStatement",
												"src": "1126:53:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1178:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 20,
													"id": 32,
													"nodeType": "Return",
													"src": "1171:8:0"
												}
											},
											{
												"assignments": [
													35,
													37
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 59,
														"src": "1231:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 34,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 37,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 59,
														"src": "1243:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 36,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "1268:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 41,
																			"name": "ONE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "1276:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1272:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": "int"
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1272:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1268:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 45,
																		"name": "LN2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1287:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1283:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": "int"
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1268:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 38,
														"name": "pow2Bounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "1257:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (int256) pure returns (uint256,uint256)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1230:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 50,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1310:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 51,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "1318:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1310:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 53,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1309:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1327:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1309:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 56,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1331:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1309:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 58,
												"nodeType": "Return",
												"src": "1302:34:0"
											}
										]
									},
									"documentation": "@dev Returns natural exponential function value of given x\n @param x x\n @return e**x",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "779:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 15,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "779:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "778:7:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "830:6:0"
									},
									"scope": 999,
									"src": "766:577:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1681:377:0",
										"statements": [
											{
												"assignments": [
													70,
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 111,
														"src": "1692:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 69,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1692:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 72,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 111,
														"src": "1704:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 71,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 74,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1729:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 73,
														"name": "pow2Bounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "1718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (int256) pure returns (uint256,uint256)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1691:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 77,
														"name": "estimationMode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1744:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 78,
															"name": "EstimationMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1762:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_EstimationMode_$5_$",
																"typeString": "type(enum Fixed192x64Math.EstimationMode)"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "LowerBound",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1762:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"src": "1744:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 84,
												"nodeType": "IfStatement",
												"src": "1741:85:0",
												"trueBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "1789:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 81,
																"name": "lower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1810:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 68,
															"id": 82,
															"nodeType": "Return",
															"src": "1803:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 85,
														"name": "estimationMode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1838:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 86,
															"name": "EstimationMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1856:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_EstimationMode_$5_$",
																"typeString": "type(enum Fixed192x64Math.EstimationMode)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "UpperBound",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1856:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"src": "1838:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 92,
												"nodeType": "IfStatement",
												"src": "1835:85:0",
												"trueBody": {
													"id": 91,
													"nodeType": "Block",
													"src": "1883:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 89,
																"name": "upper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "1904:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 68,
															"id": 90,
															"nodeType": "Return",
															"src": "1897:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "estimationMode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1932:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 94,
															"name": "EstimationMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1950:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_EstimationMode_$5_$",
																"typeString": "type(enum Fixed192x64Math.EstimationMode)"
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Midpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1950:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"src": "1932:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 107,
												"nodeType": "IfStatement",
												"src": "1929:105:0",
												"trueBody": {
													"id": 106,
													"nodeType": "Block",
													"src": "1975:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 97,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 72,
																					"src": "1997:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 98,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "2005:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1997:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 100,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1996:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2014:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1996:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 103,
																	"name": "lower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "2018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1996:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 68,
															"id": 105,
															"nodeType": "Return",
															"src": "1989:34:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 108,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1019,
															1020
														],
														"referencedDeclaration": 1019,
														"src": "2043:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "2043:8:0"
											}
										]
									},
									"documentation": "@dev Returns estimate of 2**x given x\n @param x exponent in fixed point\n @param estimationMode whether to return a lower bound, upper bound, or a midpoint\n @return estimate of 2**x in fixed point",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pow2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1588:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 61,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1588:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "estimationMode",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1595:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_EstimationMode_$5",
													"typeString": "enum Fixed192x64Math.EstimationMode"
												},
												"typeName": {
													"contractScope": null,
													"id": 63,
													"name": "EstimationMode",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 5,
													"src": "1595:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1587:38:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1671:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1671:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1670:6:0"
									},
									"scope": 999,
									"src": "1574:484:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "2400:3623:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2540:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33353431373734383632313532323333393130323731",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2545:22:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3541774862152233910271_by_1",
																	"typeString": "int_const 3541774862152233910271"
																},
																"value": "3541774862152233910271"
															},
															"src": "2540:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1017,
															1018
														],
														"referencedDeclaration": 1017,
														"src": "2532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2532:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "2532:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2695:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2699:23:0",
														"subExpression": {
															"argumentTypes": null,
															"hexValue": "31313830353931363230373137343131333033343234",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2700:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1180591620717411303424_by_1",
																"typeString": "int_const 1180591620717411303424"
															},
															"value": "1180591620717411303424"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_1180591620717411303424_by_1",
															"typeString": "int_const -1180591620717411303424"
														}
													},
													"src": "2695:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 135,
												"nodeType": "IfStatement",
												"src": "2691:58:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2744:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2747:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"id": 133,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2743:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_1_by_1_$",
															"typeString": "tuple(int_const 0,int_const 1)"
														}
													},
													"functionReturnParameters": 120,
													"id": 134,
													"nodeType": "Return",
													"src": "2736:13:0"
												}
											},
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"name": "shift",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "2924:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 136,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2924:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2924:9:0"
											},
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"name": "z",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "2943:5:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 139,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2943:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2943:5:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 142,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2967:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2962:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 186,
													"nodeType": "Block",
													"src": "3059:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 162,
																	"name": "shift",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "3073:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 163,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 114,
																						"src": "3082:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3084:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3082:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 166,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3081:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 168,
																					"name": "ONE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 8,
																					"src": "3093:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3089:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": "int"
																			},
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3089:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "3081:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3100:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3081:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3073:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "3073:28:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 175,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "3115:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 176,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "3119:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 178,
																							"name": "ONE",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 8,
																							"src": "3128:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3124:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						},
																						"typeName": "int"
																					},
																					"id": 179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3124:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 180,
																					"name": "shift",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 137,
																					"src": "3135:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "3124:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 182,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3123:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "3119:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3115:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 185,
															"nodeType": "ExpressionStatement",
															"src": "3115:26:0"
														}
													]
												},
												"id": 187,
												"nodeType": "IfStatement",
												"src": "2958:194:0",
												"trueBody": {
													"id": 161,
													"nodeType": "Block",
													"src": "2970:75:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 145,
																	"name": "shift",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "2984:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 146,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "2992:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 148,
																				"name": "ONE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "3000:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2996:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": "int"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2996:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2992:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2984:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 152,
															"nodeType": "ExpressionStatement",
															"src": "2984:20:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 153,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "3018:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 154,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "3022:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 156,
																				"name": "ONE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "3030:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3026:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": "int"
																		},
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3026:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "3022:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3018:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 160,
															"nodeType": "ExpressionStatement",
															"src": "3018:16:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 189,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "3168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3173:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3168:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "3161:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3161:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "3161:14:0"
											},
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "3643:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 194,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3643:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 197,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "3660:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3656:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": "int"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3656:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3634",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3668:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "3656:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3643:27:0"
											},
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"name": "zpow",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "3680:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 202,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3680:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"argumentTypes": null,
													"id": 204,
													"name": "z",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "3691:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3680:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 206,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3702:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "307862313732313766376431636637396162",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3712:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12786308645202655659_by_1",
																"typeString": "int_const 12786308645202655659"
															},
															"value": "0xb17217f7d1cf79ab"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 208,
															"name": "zpow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "3733:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3712:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3702:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "3702:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 212,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "3747:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 213,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3754:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 214,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "3761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3754:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 217,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "3769:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3765:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3765:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3754:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3747:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "3747:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 222,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3783:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307866356664656666633136326337353433",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3793:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_17725587574382949699_by_1",
																	"typeString": "int_const 17725587574382949699"
																},
																"value": "0xf5fdeffc162c7543"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 224,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3793:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3636",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3823:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_66_by_1",
																			"typeString": "int_const 66"
																		},
																		"value": "66"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3828:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "3823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																}
															],
															"id": 229,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3822:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														},
														"src": "3793:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3783:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3783:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 233,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "3841:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 234,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3848:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 235,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "3855:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3848:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 238,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "3863:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3859:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3859:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3848:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3841:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3841:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 243,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3877:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307865333538343662383235303566633539",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3887:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16381921401269255257_by_1",
																	"typeString": "int_const 16381921401269255257"
																},
																"value": "0xe35846b82505fc59"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 245,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3908:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3887:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3638",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3917:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_68_by_1",
																			"typeString": "int_const 68"
																		},
																		"value": "68"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3922:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "3917:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	}
																}
															],
															"id": 250,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3916:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															}
														},
														"src": "3887:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3877:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "3877:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 254,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "3935:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 255,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3942:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 256,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "3949:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3942:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 259,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "3957:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3953:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3953:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3942:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3935:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "3935:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 264,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3971:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307839643935356237646432373362393465",
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3981:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_11355082631444412750_by_1",
																	"typeString": "int_const 11355082631444412750"
																},
																"value": "0x9d955b7dd273b94e"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4002:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3981:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3730",
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4011:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_70_by_1",
																			"typeString": "int_const 70"
																		},
																		"value": "70"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4016:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4011:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	}
																}
															],
															"id": 271,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															}
														},
														"src": "3981:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3971:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "3971:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 275,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4029:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 276,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4036:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 277,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4036:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 280,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4051:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4047:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4047:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4036:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4029:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "4029:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 285,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4065:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307861656333666633633533333938383833",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4075:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12593189617617438851_by_1",
																	"typeString": "int_const 12593189617617438851"
																},
																"value": "0xaec3ff3c53398883"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 287,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4096:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4075:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_9_by_1",
																		"typeString": "int_const 9"
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3733",
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4105:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_73_by_1",
																			"typeString": "int_const 73"
																		},
																		"value": "73"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4110:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4105:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_9_by_1",
																		"typeString": "int_const 9"
																	}
																}
															],
															"id": 292,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4104:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															}
														},
														"src": "4075:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4065:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "4065:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 296,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4123:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 297,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4130:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 298,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4137:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4130:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 301,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4145:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4141:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4141:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4130:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4123:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "4123:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 306,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4159:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307861313834383937633336336333623761",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4169:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_11638578503611071354_by_1",
																	"typeString": "int_const 11638578503611071354"
																},
																"value": "0xa184897c363c3b7a"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 308,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4190:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4169:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_12_by_1",
																		"typeString": "int_const 12"
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3736",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4199:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_76_by_1",
																			"typeString": "int_const 76"
																		},
																		"value": "76"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4204:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_12_by_1",
																		"typeString": "int_const 12"
																	}
																}
															],
															"id": 313,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4198:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														},
														"src": "4169:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4159:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "4159:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4217:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4224:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 319,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4231:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4224:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 322,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4239:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4235:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4235:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4224:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4217:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "4217:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 327,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4253:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307866666535666532633435383633343335",
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4263:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18439423715436803125_by_1",
																	"typeString": "int_const 18439423715436803125"
																},
																"value": "0xffe5fe2c45863435"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 329,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4284:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4263:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3830",
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4293:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4298:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4293:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	}
																}
															],
															"id": 334,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4292:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															}
														},
														"src": "4263:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4253:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "4253:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 338,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4311:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4318:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 340,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4325:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 343,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4333:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4329:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4329:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4318:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4311:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "4311:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 348,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4347:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307862313630313131643265343131666563",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4357:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12781234559505211372_by_1",
																	"typeString": "int_const 12781234559505211372"
																},
																"value": "0xb160111d2e411fec"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 350,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4378:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4357:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_19_by_1",
																		"typeString": "int_const 19"
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3833",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4387:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_83_by_1",
																			"typeString": "int_const 83"
																		},
																		"value": "83"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4392:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4387:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_19_by_1",
																		"typeString": "int_const 19"
																	}
																}
															],
															"id": 355,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4386:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_19_by_1",
																"typeString": "int_const 19"
															}
														},
														"src": "4357:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4347:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "4347:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 359,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4405:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 360,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4412:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 361,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4419:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4412:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 364,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4427:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4423:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4423:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4412:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4405:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "4405:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 369,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4441:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307864613932396539636166336531656432",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4451:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15749825242660216530_by_1",
																	"typeString": "int_const 15749825242660216530"
																},
																"value": "0xda929e9caf3e1ed2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 371,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4472:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4451:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_23_by_1",
																		"typeString": "int_const 23"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3837",
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4481:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_87_by_1",
																			"typeString": "int_const 87"
																		},
																		"value": "87"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4486:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4481:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_23_by_1",
																		"typeString": "int_const 23"
																	}
																}
															],
															"id": 376,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4480:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_23_by_1",
																"typeString": "int_const 23"
															}
														},
														"src": "4451:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4441:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "4441:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 380,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4499:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 381,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4506:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 382,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4513:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4506:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 385,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4521:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4517:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4517:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4506:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4499:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "4499:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 390,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4535:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307866323637613861633563373634666237",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4545:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_17467115138018856887_by_1",
																	"typeString": "int_const 17467115138018856887"
																},
																"value": "0xf267a8ac5c764fb7"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 392,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4566:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4545:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3931",
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4575:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_91_by_1",
																			"typeString": "int_const 91"
																		},
																		"value": "91"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4580:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4575:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	}
																}
															],
															"id": 397,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4574:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															}
														},
														"src": "4545:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4535:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "4535:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 401,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 402,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4600:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 403,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4607:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4600:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 406,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4615:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4611:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4611:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4600:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4593:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "4593:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 411,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307866343635363339613864643932363037",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4639:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_17610591433358124551_by_1",
																	"typeString": "int_const 17610591433358124551"
																},
																"value": "0xf465639a8dd92607"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 413,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4660:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4639:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3935",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4669:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_95_by_1",
																			"typeString": "int_const 95"
																		},
																		"value": "95"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4674:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4669:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	}
																}
															],
															"id": 418,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4668:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31_by_1",
																"typeString": "int_const 31"
															}
														},
														"src": "4639:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4629:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "4629:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 422,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4687:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 423,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4694:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 424,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4701:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4694:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 427,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4709:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4705:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4705:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4694:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4687:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "4687:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 432,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4723:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307865316465623238376531346332663135",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4733:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16275642400033746709_by_1",
																	"typeString": "int_const 16275642400033746709"
																},
																"value": "0xe1deb287e14c2f15"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 434,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4754:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4733:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_35_by_1",
																		"typeString": "int_const 35"
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3939",
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4763:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_99_by_1",
																			"typeString": "int_const 99"
																		},
																		"value": "99"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4768:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4763:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_35_by_1",
																		"typeString": "int_const 35"
																	}
																}
															],
															"id": 439,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4762:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_35_by_1",
																"typeString": "int_const 35"
															}
														},
														"src": "4733:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4723:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "4723:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 443,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4781:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 444,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4788:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 445,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4788:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 448,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4803:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4799:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4799:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4788:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4781:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "4781:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 453,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4817:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307863306230633938623336383763623134",
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4827:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_13884819250935745300_by_1",
																	"typeString": "int_const 13884819250935745300"
																},
																"value": "0xc0b0c98b3687cb14"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 455,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4848:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4827:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_39_by_1",
																		"typeString": "int_const 39"
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "313033",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4857:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_103_by_1",
																			"typeString": "int_const 103"
																		},
																		"value": "103"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4863:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4857:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_39_by_1",
																		"typeString": "int_const 39"
																	}
																}
															],
															"id": 460,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4856:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_39_by_1",
																"typeString": "int_const 39"
															}
														},
														"src": "4827:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4817:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "4817:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 464,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4876:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 465,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4883:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 466,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4890:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4883:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 469,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4898:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4894:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4894:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4883:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4876:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "4876:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "4912:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307839386134623236616333633534623966",
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4922:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10999112361566358431_by_1",
																	"typeString": "int_const 10999112361566358431"
																},
																"value": "0x98a4b26ac3c54b9f"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 476,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4943:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4922:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_43_by_1",
																		"typeString": "int_const 43"
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "313037",
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4952:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_107_by_1",
																			"typeString": "int_const 107"
																		},
																		"value": "107"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4958:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "4952:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_43_by_1",
																		"typeString": "int_const 43"
																	}
																}
															],
															"id": 481,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4951:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_43_by_1",
																"typeString": "int_const 43"
															}
														},
														"src": "4922:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4912:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "4912:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 485,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4971:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "4978:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 487,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4985:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "4978:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 490,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "4993:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4989:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4989:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "4978:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4971:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "4971:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 495,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5007:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307865316237343231643832303130663333",
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5017:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16264541273774427955_by_1",
																	"typeString": "int_const 16264541273774427955"
																},
																"value": "0xe1b7421d82010f33"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 497,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5038:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5017:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_48_by_1",
																		"typeString": "int_const 48"
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "313132",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5047:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5053:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "5047:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_48_by_1",
																		"typeString": "int_const 48"
																	}
																}
															],
															"id": 502,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5046:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_48_by_1",
																"typeString": "int_const 48"
															}
														},
														"src": "5017:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5007:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "5007:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 506,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5066:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 507,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5073:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 508,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "5080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 511,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "5088:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5084:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5084:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5073:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5066:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "5066:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 516,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5102:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307839633734346437336366633539633931",
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5112:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_11273720927017606289_by_1",
																	"typeString": "int_const 11273720927017606289"
																},
																"value": "0x9c744d73cfc59c91"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 518,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5133:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5112:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_52_by_1",
																		"typeString": "int_const 52"
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "313136",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5142:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_116_by_1",
																			"typeString": "int_const 116"
																		},
																		"value": "116"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5148:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "5142:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_52_by_1",
																		"typeString": "int_const 52"
																	}
																}
															],
															"id": 523,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5141:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_52_by_1",
																"typeString": "int_const 52"
															}
														},
														"src": "5112:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5102:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "5102:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 527,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5161:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 528,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5168:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 529,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "5175:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5168:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 532,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "5183:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5179:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5179:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5168:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5161:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "5161:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 537,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5197:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307863633232323561306531326433656162",
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5207:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_14709360705848295083_by_1",
																	"typeString": "int_const 14709360705848295083"
																},
																"value": "0xcc2225a0e12d3eab"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 539,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5228:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5207:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_57_by_1",
																		"typeString": "int_const 57"
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "313231",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5237:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_121_by_1",
																			"typeString": "int_const 121"
																		},
																		"value": "121"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5243:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "5237:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_57_by_1",
																		"typeString": "int_const 57"
																	}
																}
															],
															"id": 544,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_57_by_1",
																"typeString": "int_const 57"
															}
														},
														"src": "5207:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5197:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "5197:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 548,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5256:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 549,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5263:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 550,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "5270:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 553,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "5278:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5274:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5274:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5263:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5256:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "5256:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 558,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5292:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "307866623862623565646131623461656239",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5299:18:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18125781157507542713_by_1",
																	"typeString": "int_const 18125781157507542713"
																},
																"value": "0xfb8bb5eda1b4aeb9"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 560,
																"name": "zpow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5320:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5299:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_62_by_1",
																		"typeString": "int_const 62"
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "313236",
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5329:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_126_by_1",
																			"typeString": "int_const 126"
																		},
																		"value": "126"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3634",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5335:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "5329:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_62_by_1",
																		"typeString": "int_const 62"
																	}
																}
															],
															"id": 565,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5328:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_62_by_1",
																"typeString": "int_const 62"
															}
														},
														"src": "5299:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5292:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "5292:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 569,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5348:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 570,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5358:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "5348:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 573,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5372:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "38",
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5383:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 576,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "5387:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5383:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5379:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": "int"
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5379:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5372:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "5372:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 581,
														"name": "shift",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "5402:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3634",
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5411:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5402:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "5402:11:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 585,
														"name": "shift",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "5427:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5436:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5427:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 651,
												"nodeType": "IfStatement",
												"src": "5423:446:0",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "5439:430:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 588,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "5457:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "323536",
																					"id": 589,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5468:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					},
																					"value": "256"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 590,
																					"name": "shift",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 137,
																					"src": "5472:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5468:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 592,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5467:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "5457:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5482:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5457:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...9935"
																			},
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																					"typeString": "int_const 1157...(70 digits omitted)...9936"
																				},
																				"id": 639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5839:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "323536",
																					"id": 638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5842:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					},
																					"value": "256"
																				},
																				"src": "5839:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																					"typeString": "int_const 1157...(70 digits omitted)...9936"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5846:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5839:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...9935"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...9935"
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																					"typeString": "int_const 1157...(70 digits omitted)...9936"
																				},
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5849:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "323536",
																					"id": 643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5852:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					},
																					"value": "256"
																				},
																				"src": "5849:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																					"typeString": "int_const 1157...(70 digits omitted)...9936"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5856:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5849:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...9935"
																			}
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5838:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1_$_t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1_$",
																		"typeString": "tuple(int_const 1157...(70 digits omitted)...9935,int_const 1157...(70 digits omitted)...9935)"
																	}
																},
																"functionReturnParameters": 120,
																"id": 648,
																"nodeType": "Return",
																"src": "5831:27:0"
															},
															"id": 649,
															"nodeType": "IfStatement",
															"src": "5453:405:0",
															"trueBody": {
																"id": 636,
																"nodeType": "Block",
																"src": "5485:312:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 596,
																				"name": "lower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 117,
																				"src": "5503:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 598,
																							"name": "result",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 195,
																							"src": "5516:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						],
																						"id": 597,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5511:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": "uint"
																					},
																					"id": 599,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5511:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 600,
																					"name": "shift",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 137,
																					"src": "5527:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "5511:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5503:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 603,
																		"nodeType": "ExpressionStatement",
																		"src": "5503:29:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 604,
																				"name": "zpow",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 203,
																				"src": "5550:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "<<=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 605,
																				"name": "shift",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "5559:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "5550:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 607,
																		"nodeType": "ExpressionStatement",
																		"src": "5550:14:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 608,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 117,
																					"src": "5609:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 610,
																							"name": "zpow",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 203,
																							"src": "5622:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						],
																						"id": 609,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5617:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": "uint"
																					},
																					"id": 611,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5617:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5609:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 613,
																				"name": "lower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 117,
																				"src": "5631:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5609:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 623,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 119,
																					"src": "5727:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																						"typeString": "int_const 1157...(70 digits omitted)...9935"
																					},
																					"id": 628,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																							"typeString": "int_const 1157...(70 digits omitted)...9936"
																						},
																						"id": 626,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 624,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5735:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "323536",
																							"id": 625,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5738:3:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"value": "256"
																						},
																						"src": "5735:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																							"typeString": "int_const 1157...(70 digits omitted)...9936"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 627,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5742:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5735:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																						"typeString": "int_const 1157...(70 digits omitted)...9935"
																					}
																				},
																				"src": "5727:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 630,
																			"nodeType": "ExpressionStatement",
																			"src": "5727:16:0"
																		},
																		"id": 631,
																		"nodeType": "IfStatement",
																		"src": "5605:138:0",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 615,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 119,
																					"src": "5658:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 616,
																						"name": "lower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 117,
																						"src": "5666:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 618,
																								"name": "zpow",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 203,
																								"src": "5679:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 617,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5674:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5674:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5666:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5658:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 622,
																			"nodeType": "ExpressionStatement",
																			"src": "5658:26:0"
																		}
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 632,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 117,
																					"src": "5769:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 633,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 119,
																					"src": "5776:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 634,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5768:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 120,
																		"id": 635,
																		"nodeType": "Return",
																		"src": "5761:21:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 652,
														"name": "zpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5878:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 653,
																		"name": "zpow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "5886:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "5895:6:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 654,
																					"name": "shift",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 137,
																					"src": "5896:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 656,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5894:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "5886:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 658,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5885:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5906:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5885:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5878:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "5878:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 663,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "5917:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 665,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "5930:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5925:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5925:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "5942:6:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 667,
																		"name": "shift",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "5943:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 669,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5941:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "5925:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5917:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "5917:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 673,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "5959:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 674,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 676,
																	"name": "zpow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "5980:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5975:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5975:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5967:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5959:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "5959:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 681,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "6003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 682,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "6010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 683,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6002:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 120,
												"id": 684,
												"nodeType": "Return",
												"src": "5995:21:0"
											}
										]
									},
									"documentation": "@dev Returns bounds for value of 2**x given x\n @param x exponent in fixed point\n @return {\n   \"lower\": \"lower bound of 2**x in fixed point\",\n   \"upper\": \"upper bound of 2**x in fixed point\"\n }",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pow2Bounds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2320:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 113,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2320:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2319:7:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "lower",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2372:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2384:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2371:24:0"
									},
									"scope": 999,
									"src": "2300:3723:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "6200:126:0",
										"statements": [
											{
												"assignments": [
													694,
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "6211:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 693,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "6211:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 696,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "6222:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 695,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "6222:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 700,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 698,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6246:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "log2Bounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "6235:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (uint256) pure returns (int256,int256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6235:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6210:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 703,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 701,
																						"name": "upper",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 696,
																						"src": "6267:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 702,
																						"name": "lower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 694,
																						"src": "6275:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "6267:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 704,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6266:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6284:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "6266:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 707,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 694,
																		"src": "6288:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "6266:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 709,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6265:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 711,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "6301:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6297:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6297:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "6265:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 715,
																"name": "LOG2_E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "6312:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6308:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": "int"
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6308:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6265:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 692,
												"id": 718,
												"nodeType": "Return",
												"src": "6258:61:0"
											}
										]
									},
									"documentation": "@dev Returns natural logarithm value of given x\n @param x x\n @return ln(x)",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ln",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6138:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6137:8:0"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6191:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 690,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "6191:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6190:5:0"
									},
									"scope": 999,
									"src": "6126:200:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "6695:375:0",
										"statements": [
											{
												"assignments": [
													730,
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "6706:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 729,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "6706:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 732,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "6717:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 731,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "6717:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 734,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "6741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "log2Bounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "6730:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (uint256) pure returns (int256,int256)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6730:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6705:38:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 737,
														"name": "estimationMode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "6756:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 738,
															"name": "EstimationMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "6774:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_EstimationMode_$5_$",
																"typeString": "type(enum Fixed192x64Math.EstimationMode)"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "LowerBound",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6774:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"src": "6756:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 744,
												"nodeType": "IfStatement",
												"src": "6753:85:0",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "6801:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 741,
																"name": "lower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "6822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 728,
															"id": 742,
															"nodeType": "Return",
															"src": "6815:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 745,
														"name": "estimationMode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "6850:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 746,
															"name": "EstimationMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "6868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_EstimationMode_$5_$",
																"typeString": "type(enum Fixed192x64Math.EstimationMode)"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "UpperBound",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6868:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"src": "6850:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 752,
												"nodeType": "IfStatement",
												"src": "6847:85:0",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "6895:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 749,
																"name": "upper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "6916:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 728,
															"id": 750,
															"nodeType": "Return",
															"src": "6909:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 753,
														"name": "estimationMode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "6944:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 754,
															"name": "EstimationMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "6962:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_EstimationMode_$5_$",
																"typeString": "type(enum Fixed192x64Math.EstimationMode)"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Midpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6962:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_EstimationMode_$5",
															"typeString": "enum Fixed192x64Math.EstimationMode"
														}
													},
													"src": "6944:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 767,
												"nodeType": "IfStatement",
												"src": "6941:105:0",
												"trueBody": {
													"id": 766,
													"nodeType": "Block",
													"src": "6987:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 757,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "7009:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 758,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 730,
																					"src": "7017:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "7009:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 760,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7008:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7026:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "7008:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 763,
																	"name": "lower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "7030:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7008:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 728,
															"id": 765,
															"nodeType": "Return",
															"src": "7001:34:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 768,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1019,
															1020
														],
														"referencedDeclaration": 1019,
														"src": "7055:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7055:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "7055:8:0"
											}
										]
									},
									"documentation": "@dev Returns estimate of binaryLog(x) given x\n @param x logarithm argument in fixed point\n @param estimationMode whether to return a lower bound, upper bound, or a midpoint\n @return estimate of binaryLog(x) in fixed point",
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "binaryLog",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6602:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6602:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"name": "estimationMode",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6610:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_EstimationMode_$5",
													"typeString": "enum Fixed192x64Math.EstimationMode"
												},
												"typeName": {
													"contractScope": null,
													"id": 723,
													"name": "EstimationMode",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 5,
													"src": "6610:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_EstimationMode_$5",
														"typeString": "enum Fixed192x64Math.EstimationMode"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6601:39:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6686:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 726,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "6686:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6685:5:0"
									},
									"scope": 999,
									"src": "6583:487:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "7445:645:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 782,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "7463:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7467:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7463:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1017,
															1018
														],
														"referencedDeclaration": 1017,
														"src": "7455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7455:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "7455:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 787,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "7512:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 789,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "7530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 788,
															"name": "floorLog2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "7520:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7512:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "7512:20:0"
											},
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"name": "y",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "7543:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 793,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7543:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7543:6:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 796,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "7563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7571:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7563:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"argumentTypes": null,
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 808,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "7634:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 809,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "7638:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 811,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "7648:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7643:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": "uint"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7643:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7638:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7634:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 815,
													"nodeType": "ExpressionStatement",
													"src": "7634:20:0"
												},
												"id": 816,
												"nodeType": "IfStatement",
												"src": "7559:95:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 799,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "7586:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 800,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "7590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "7600:6:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 802,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "7601:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7595:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": "uint"
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7595:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7590:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7586:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 807,
													"nodeType": "ExpressionStatement",
													"src": "7586:21:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 817,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "7665:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 819,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "7678:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7674:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": "int"
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7674:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7665:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "7665:17:0"
											},
											{
												"body": {
													"id": 866,
													"nodeType": "Block",
													"src": "7835:213:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 833,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "7852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 834,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "7857:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7852:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 838,
															"nodeType": "IfStatement",
															"src": "7849:51:0",
															"trueBody": {
																"id": 837,
																"nodeType": "Block",
																"src": "7862:38:0",
																"statements": [
																	{
																		"id": 836,
																		"nodeType": "Break",
																		"src": "7880:5:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 839,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "7913:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 840,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "7917:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 841,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "7921:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7917:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 843,
																		"name": "ONE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "7925:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7917:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7913:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 846,
															"nodeType": "ExpressionStatement",
															"src": "7913:15:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 847,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "7945:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7950:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 849,
																		"name": "ONE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "7954:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7950:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7945:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 865,
															"nodeType": "IfStatement",
															"src": "7942:96:0",
															"trueBody": {
																"id": 864,
																"nodeType": "Block",
																"src": "7959:79:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 852,
																				"name": "lower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "7977:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 856,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 854,
																							"name": "ONE",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 8,
																							"src": "7990:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 855,
																							"name": "m",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 824,
																							"src": "7997:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "7990:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 853,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7986:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": "int"
																				},
																				"id": 857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7986:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7977:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 859,
																		"nodeType": "ExpressionStatement",
																		"src": "7977:22:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 860,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 794,
																				"src": "8017:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "/=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8022:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "8017:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 863,
																		"nodeType": "ExpressionStatement",
																		"src": "8017:6:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 827,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "7821:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3634",
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7826:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "7821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"initializationExpression": {
													"assignments": [
														824
													],
													"declarations": [
														{
															"constant": false,
															"id": 824,
															"name": "m",
															"nodeType": "VariableDeclaration",
															"scope": 867,
															"src": "7810:5:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"typeName": {
																"id": 823,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "7810:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 826,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7818:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7810:9:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7830:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 830,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "7830:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 832,
													"nodeType": "ExpressionStatement",
													"src": "7830:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7805:243:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 868,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "8066:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 869,
																"name": "lower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "8073:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "34",
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8081:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"src": "8073:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"id": 872,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8065:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"functionReturnParameters": 780,
												"id": 873,
												"nodeType": "Return",
												"src": "8058:25:0"
											}
										]
									},
									"documentation": "@dev Returns bounds for value of binaryLog(x) given x\n @param x logarithm argument in fixed point\n @return {\n   \"lower\": \"lower bound of binaryLog(x) in fixed point\",\n   \"upper\": \"upper bound of binaryLog(x) in fixed point\"\n }",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2Bounds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "7366:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7366:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7365:8:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"name": "lower",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "7419:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 776,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "7419:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "7430:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 778,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "7430:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7418:22:0"
									},
									"scope": 999,
									"src": "7346:744:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "8288:404:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 882,
														"name": "lo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "8298:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "8303:3:0",
														"subExpression": {
															"argumentTypes": null,
															"hexValue": "3634",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8304:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_64_by_1",
															"typeString": "int_const -64"
														}
													},
													"src": "8298:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "8298:8:0"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"name": "hi",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "8316:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 887,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "8316:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "313933",
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8325:3:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_193_by_1",
														"typeString": "int_const 193"
													},
													"value": "193"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8316:12:0"
											},
											{
												"assignments": [
													892
												],
												"declarations": [
													{
														"constant": false,
														"id": 892,
														"name": "mid",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "8431:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 891,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "8431:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 893,
																	"name": "hi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "8442:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 894,
																	"name": "lo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "8447:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8442:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 896,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8441:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8454:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8441:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8431:24:0"
											},
											{
												"body": {
													"id": 948,
													"nodeType": "Block",
													"src": "8486:200:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 906,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 892,
																			"src": "8504:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8510:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8504:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 909,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "8515:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 912,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "-",
																						"prefix": true,
																						"src": "8525:4:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 911,
																							"name": "mid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 892,
																							"src": "8526:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8520:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8520:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8515:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 915,
																			"name": "ONE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "8533:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8515:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8504:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 918,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 892,
																			"src": "8540:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8547:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8540:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 921,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "8552:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 923,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 892,
																						"src": "8562:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 922,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8557:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint"
																				},
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8557:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8552:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 926,
																			"name": "ONE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "8569:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8552:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8540:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8504:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"argumentTypes": null,
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 934,
																		"name": "lo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "8633:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 935,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "8638:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "8633:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 937,
																"nodeType": "ExpressionStatement",
																"src": "8633:8:0"
															},
															"id": 938,
															"nodeType": "IfStatement",
															"src": "8500:141:0",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 930,
																		"name": "hi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "8590:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 931,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "8595:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "8590:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 933,
																"nodeType": "ExpressionStatement",
																"src": "8590:8:0"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 939,
																	"name": "mid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "8655:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 940,
																					"name": "hi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "8662:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 941,
																					"name": "lo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 880,
																					"src": "8667:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "8662:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 943,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8661:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8674:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8661:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8655:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 947,
															"nodeType": "ExpressionStatement",
															"src": "8655:20:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 900,
																	"name": "lo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "8472:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8477:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8472:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 903,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8471:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 904,
														"name": "hi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "8482:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8471:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "WhileStatement",
												"src": "8465:221:0"
											}
										]
									},
									"documentation": "@dev Returns base 2 logarithm value of given x\n @param x x\n @return logarithmic value",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "floorLog2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8223:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8223:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8222:8:0"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"name": "lo",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8276:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 879,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "8276:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8275:8:0"
									},
									"scope": 999,
									"src": "8204:488:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "8907:182:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 960,
																	"name": "nums",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "8925:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																		"typeString": "int256[] memory"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8925:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8939:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8925:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1017,
															1018
														],
														"referencedDeclaration": 1017,
														"src": "8917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8917:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "8917:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 966,
														"name": "maxNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "8951:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
															"typeString": "int_const -578...(70 digits omitted)...9968"
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "-",
															"prefix": true,
															"src": "8960:2:0",
															"subExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8961:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_rational_minus_2_by_1",
																"typeString": "int_const -2"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "323535",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8964:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_255_by_1",
																"typeString": "int_const 255"
															},
															"value": "255"
														},
														"src": "8960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
															"typeString": "int_const -578...(70 digits omitted)...9968"
														}
													},
													"src": "8951:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "8951:16:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 984,
																"name": "nums",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "9032:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																	"typeString": "int256[] memory"
																}
															},
															"id": 986,
															"indexExpression": {
																"argumentTypes": null,
																"id": 985,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "9037:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 987,
															"name": "maxNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "9042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "9032:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 995,
													"nodeType": "IfStatement",
													"src": "9028:54:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 989,
																"name": "maxNum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "9066:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 990,
																	"name": "nums",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "9075:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																		"typeString": "int256[] memory"
																	}
																},
																"id": 992,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 991,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "9080:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9075:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "9066:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 994,
														"nodeType": "ExpressionStatement",
														"src": "9066:16:0"
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 977,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "8994:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 978,
															"name": "nums",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "8998:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																"typeString": "int256[] memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8998:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8994:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"initializationExpression": {
													"assignments": [
														974
													],
													"declarations": [
														{
															"constant": false,
															"id": 974,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 996,
															"src": "8982:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 973,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8982:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 976,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8991:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8982:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9011:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 981,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "9011:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 983,
													"nodeType": "ExpressionStatement",
													"src": "9011:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8977:105:0"
											}
										]
									},
									"documentation": "@dev Returns maximum of an array\n @param nums Numbers to look through\n @return Maximum number",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"name": "nums",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "8827:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 952,
														"name": "int",
														"nodeType": "ElementaryTypeName",
														"src": "8827:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 953,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8826:19:0"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"name": "maxNum",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "8891:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 956,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "8891:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8890:12:0"
									},
									"scope": 999,
									"src": "8814:275:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1000,
							"src": "287:8804:0"
						}
					],
					"src": "66:9025:0"
				},
				"id": 0
			}
		}
	}
}