{
	"id": "423d504d83d884f25d58ef5935ebc1b5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.10",
	"solcLongVersion": "0.5.10+commit.5a6ea5b1",
	"input": {
		"language": "Solidity",
		"sources": {
			"input/AllowanceModule.sol": {
				"content": "pragma solidity >=0.5.0 <0.7.0;\n\n/// @title Enum - Collection of enums\n/// @author Richard Meissner - <richard@gnosis.pm>\ncontract Enum {\n    enum Operation {\n        Call,\n        DelegateCall\n    }\n}\n\n/// @title SignatureDecoder - Decodes signatures that a encoded as bytes\n/// @author Ricardo Guilherme Schmidt (Status Research & Development GmbH)\n/// @author Richard Meissner - <richard@gnosis.pm>\ncontract SignatureDecoder {\n    \n    /// @dev Recovers address who signed the message\n    /// @param messageHash operation ethereum signed message hash\n    /// @param messageSignature message `txHash` signature\n    /// @param pos which signature to read\n    function recoverKey (\n        bytes32 messageHash,\n        bytes memory messageSignature,\n        uint256 pos\n    )\n        internal\n        pure\n        returns (address)\n    {\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        (v, r, s) = signatureSplit(messageSignature, pos);\n        return ecrecover(messageHash, v, r, s);\n    }\n\n    /// @dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\n    /// @notice Make sure to peform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n    /// @param pos which signature to read. A prior bounds check of this parameter should be performed, to avoid out of bounds access\n    /// @param signatures concatenated rsv signatures\n    function signatureSplit(bytes memory signatures, uint256 pos)\n        internal\n        pure\n        returns (uint8 v, bytes32 r, bytes32 s)\n    {\n        // The signature format is a compact form of:\n        //   {bytes32 r}{bytes32 s}{uint8 v}\n        // Compact means, uint8 is not padded to 32 bytes.\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            let signaturePos := mul(0x41, pos)\n            r := mload(add(signatures, add(signaturePos, 0x20)))\n            s := mload(add(signatures, add(signaturePos, 0x40)))\n            // Here we are loading the last 32 bytes, including 31 bytes\n            // of 's'. There is no 'mload8' to do this.\n            //\n            // 'byte' is not working due to the Solidity parser, so lets\n            // use the second best option, 'and'\n            v := and(mload(add(signatures, add(signaturePos, 0x41))), 0xff)\n        }\n    }\n}\n\ncontract ISignatureValidatorConstants {\n    // bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n    bytes4 constant internal EIP1271_MAGIC_VALUE = 0x20c13b0b;\n}\n\ncontract ISignatureValidator is ISignatureValidatorConstants {\n\n    /**\n    * @dev Should return whether the signature provided is valid for the provided data\n    * @param _data Arbitrary length data signed on the behalf of address(this)\n    * @param _signature Signature byte array associated with _data\n    *\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\n    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\n    * MUST allow external calls\n    */\n    function isValidSignature(\n        bytes memory _data,\n        bytes memory _signature)\n        public\n        view\n        returns (bytes4);\n}\n\ninterface GnosisSafe {\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\n    /// @param to Destination address of module transaction.\n    /// @param value Ether value of module transaction.\n    /// @param data Data payload of module transaction.\n    /// @param operation Operation type of module transaction.\n    function execTransactionFromModule(address to, uint256 value, bytes calldata data, Enum.Operation operation)\n        external\n        returns (bool success);\n}\n\ncontract AllowanceModule is SignatureDecoder, ISignatureValidatorConstants {\n\n    string public constant NAME = \"Allowance Module\";\n    string public constant VERSION = \"0.1.0\";\n\n    //keccak256(\n    //    \"EIP712Domain(address verifyingContract)\"\n    //);\n    bytes32 public constant DOMAIN_SEPARATOR_TYPEHASH = 0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749;\n\n    // TODO: Fix hardcode hash\n    bytes32 public constant ALLOWANCE_TRANSFER_TYPEHASH = keccak256(\n        \"AllowanceTransfer(address safe,address token,uint96 amount,address paymentToken,uint96 payment,uint16 nonce)\"\n    );\n\n    // Safe -> Delegate -> Allowance\n    mapping(address => mapping (address => mapping(address => Allowance))) public allowances;\n    mapping(address => mapping (address => address[])) public tokens;\n    mapping(address => mapping (uint48 => Delegate)) public delegates;\n    mapping(address => uint48) public delegatesStart;\n    bytes32 public domainSeparator;\n\n    struct Delegate {\n        address delegate;\n        uint48 prev;\n        uint48 next;\n    }\n\n    struct Allowance {\n        uint96 amount;\n        uint96 spent;\n        uint16 resetTimeMin; // reset time span is 65k minutes\n        uint32 lastResetMin;\n        uint16 nonce;\n    }\n\n    event AddDelegate(address indexed safe, address delegate);\n    event RemoveDelegate(address indexed safe, address delegate);\n    event ExecuteAllowanceTransfer(address indexed safe, address delegate, address token, address to, uint96 value, uint16 nonce);\n    event SetAllowance(address indexed safe, address delegate, address token, uint96 allowanceAmount, uint16 resetTime);\n\n    constructor() public {\n        domainSeparator = keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, this));\n    }\n\n    /// @dev Allows to update the allowance for a specified token. This can only be done via a Safe transaction.\n    /// @param delegate Delegate whose allowance should be updated.\n    /// @param token Token contract address.\n    /// @param allowanceAmount allowance in smallest token unit.\n    /// @param resetTimeMin Time after which the allowance should reset\n    /// @param resetBaseMin Time based on which the reset time should be increased\n    function setAllowance(address delegate, address token, uint96 allowanceAmount, uint16 resetTimeMin, uint32 resetBaseMin)\n        public\n    {\n        require(delegates[msg.sender][uint48(delegate)].delegate == delegate, \"delegates[msg.sender][uint48(delegate)].delegate == delegate\");\n        Allowance memory allowance = getAllowance(msg.sender, delegate, token);\n        if (allowance.nonce == 0) { // New token\n            // Nonce should never be 0 once allowance has been activated\n            allowance.nonce = 1;\n            tokens[msg.sender][delegate].push(token);\n        }\n        // solium-disable-next-line security/no-block-members\n        uint32 currentMin = uint32(now / 60);\n        if (resetBaseMin > 0) {\n            require(resetBaseMin <= currentMin, \"resetBaseMin <= currentMin\");\n            allowance.lastResetMin = currentMin - ((currentMin - resetBaseMin) % resetTimeMin);\n        } else if (allowance.lastResetMin == 0) {\n            allowance.lastResetMin = currentMin;\n        }\n        allowance.resetTimeMin = resetTimeMin;\n        allowance.amount = allowanceAmount;\n        updateAllowance(msg.sender, delegate, token, allowance);\n        emit SetAllowance(msg.sender, delegate, token, allowanceAmount, resetTimeMin);\n    }\n\n    function getAllowance(address safe, address delegate, address token) private view returns (Allowance memory allowance) {\n        allowance = allowances[safe][delegate][token];\n        // solium-disable-next-line security/no-block-members\n        uint32 currentMin = uint32(now / 60);\n        if (allowance.resetTimeMin > 0 && allowance.lastResetMin <= currentMin - allowance.resetTimeMin) {\n            allowance.spent = 0;\n            allowance.lastResetMin = currentMin - ((currentMin - allowance.lastResetMin) % allowance.resetTimeMin);\n        }\n        return allowance;\n    }\n\n    function updateAllowance(address safe, address delegate, address token, Allowance memory allowance) private {\n        allowances[safe][delegate][token] = allowance;\n    }\n\n    function resetAllowance(address delegate, address token) public {\n        Allowance memory allowance = getAllowance(msg.sender, delegate, token);\n        allowance.spent = 0;\n        updateAllowance(msg.sender, delegate, token, allowance);\n    }\n\n    function executeAllowanceTransfer(\n        GnosisSafe safe,\n        address token,\n        address payable to,\n        uint96 amount,\n        address paymentToken,\n        uint96 payment,\n        address delegate,\n        bytes memory signature\n    ) public {\n        // Get current state\n        Allowance memory allowance = getAllowance(address(safe), delegate, token);\n        bytes memory transferHashData = generateTransferHashData(address(safe), token, to, amount, paymentToken, payment, allowance.nonce);\n        // Update state\n        allowance.nonce = allowance.nonce + 1;\n        uint96 newSpent = allowance.spent + amount;\n        // Check new spent amount and overflow\n        require(newSpent > allowance.spent && newSpent <= allowance.amount, \"newSpent > allowance.spent && newSpent <= allowance.amount\");\n        allowance.spent = newSpent;\n        if (payment > 0) {\n            // Use updated allowance if token and paymentToken are the same\n            Allowance memory paymentAllowance = paymentToken == token ? allowance : getAllowance(address(safe), delegate, paymentToken);\n            newSpent = paymentAllowance.spent + payment;\n            // Check new spent amount and overflowf\n            require(newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount, \"newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount\");\n            paymentAllowance.spent = newSpent;\n            // Update payment allowance if different from allowance\n            if (paymentToken != token) updateAllowance(address(safe), delegate, paymentToken, paymentAllowance);\n        }\n        updateAllowance(address(safe), delegate, token, allowance);\n        // Check signature (this contains a potential call -> EIP-1271)\n        checkSignature(delegate, signature, transferHashData, safe);\n        // Perform\n        if (payment > 0) {\n            // Transfer payment\n            // solium-disable-next-line security/no-tx-origin\n            transfer(safe, paymentToken, tx.origin, payment);\n        }\n        // Transfer token\n        transfer(safe, token, to, amount);\n        emit ExecuteAllowanceTransfer(address(safe), delegate, token, to, amount, allowance.nonce - 1);\n    }\n\n    function generateTransferHashData(\n        address safe,\n        address token,\n        address to,\n        uint96 amount,\n        address paymentToken,\n        uint96 payment,\n        uint16 nonce\n    ) private view returns (bytes memory) {\n        bytes32 transferHash = keccak256(\n            abi.encode(ALLOWANCE_TRANSFER_TYPEHASH, safe, token, to, amount, paymentToken, payment, nonce)\n        );\n        return abi.encodePacked(byte(0x19), byte(0x01), domainSeparator, transferHash);\n    }\n\n    function generateTransferHash(\n        address safe,\n        address token,\n        address to,\n        uint96 amount,\n        address paymentToken,\n        uint96 payment,\n        uint16 nonce\n    ) public view returns (bytes32) {\n        return keccak256(generateTransferHashData(\n            safe, token, to, amount, paymentToken, payment, nonce\n        ));\n    }\n\n    function checkSignature(address expectedDelegate, bytes memory signature, bytes memory transferHashData, GnosisSafe safe) private {\n        address signer = recoverSignature(signature, transferHashData);\n        require(\n            expectedDelegate == signer && delegates[address(safe)][uint48(signer)].delegate == signer,\n            \"expectedDelegate == signer && delegates[address(safe)][uint48(signer)].delegate == signer\"\n        );\n    }\n\n    function recoverSignature(bytes memory signature, bytes memory transferHashData) private view returns (address owner) {\n        // If there is no signature data msg.sender should be used\n        if (signature.length == 0) return msg.sender;\n        // Check that the provided signature data is not too short\n        require(signature.length >= 65, \"signatures.length >= 65\");\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        (v, r, s) = signatureSplit(signature, 0);\n        // If v is 0 then it is a contract signature\n        if (v == 0) {\n            // When handling contract signatures the address of the contract is encoded into r\n            owner = address(uint256(r));\n            bytes memory contractSignature;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                // The signature data for contract signatures is appended to the concatenated signatures and the offset is stored in s\n                contractSignature := add(add(signature, s), 0x20)\n            }\n            require(\n                ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) == EIP1271_MAGIC_VALUE,\n                \"Could not validate EIP-1271 signature\"\n            );\n        } else if (v > 30) {\n            // To support eth_sign and similar we adjust v and hash the transferHashData with the Ethereum message prefix before applying ecrecover\n            owner = ecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData))), v - 4, r, s);\n        } else {\n            // Use ecrecover with the messageHash for EOA signatures\n            owner = ecrecover(keccak256(transferHashData), v, r, s);\n        }\n    }\n\n    function transfer(GnosisSafe safe, address token, address payable to, uint96 amount) private {\n        if (token == address(0)) {\n            // solium-disable-next-line security/no-send\n            require(safe.execTransactionFromModule(to, amount, \"\", Enum.Operation.Call), \"Could not execute ether transfer\");\n        } else {\n            bytes memory data = abi.encodeWithSignature(\"transfer(address,uint256)\", to, amount);\n            require(safe.execTransactionFromModule(token, 0, data, Enum.Operation.Call), \"Could not execute token transfer\");\n        }\n    }\n\n    function getTokens(address safe, address delegate) public view returns (address[] memory) {\n        return tokens[safe][delegate];\n    }\n\n    function getTokenAllowance(address safe, address delegate, address token) public view returns (uint256[5] memory) {\n        Allowance memory allowance = getAllowance(safe, delegate, token);\n        return [\n            uint256(allowance.amount),\n            uint256(allowance.spent),\n            uint256(allowance.resetTimeMin),\n            uint256(allowance.lastResetMin),\n            uint256(allowance.nonce)\n        ];\n    }\n\n    function addDelegate(address delegate) public {\n        require(delegate != address(0), \"Invalid delegate address\");\n        uint48 index = uint48(delegate);\n        // Delegate already exists, nothing to do\n        if(delegates[msg.sender][index].delegate != address(0)) return;\n        uint48 startIndex = delegatesStart[msg.sender];\n        delegates[msg.sender][index] = Delegate(delegate, 0, startIndex);\n        delegates[msg.sender][startIndex].prev = index;\n        delegatesStart[msg.sender] = index;\n        emit AddDelegate(msg.sender, delegate);\n    }\n\n    function removeDelegate(address delegate) public {\n        Delegate memory current = delegates[msg.sender][uint48(delegate)];\n        // Delegate doesn't exists, nothing to do\n        if(current.delegate == address(0)) return;\n        address[] storage delegateTokens = tokens[msg.sender][delegate];\n        for (uint256 i = 0; i < delegateTokens.length; i++) {\n            address token = delegateTokens[i];\n            // Set all allowance params except the nonce to 0\n            Allowance memory allowance = getAllowance(msg.sender, delegate, token);\n            allowance.amount = 0;\n            allowance.spent = 0;\n            allowance.resetTimeMin = 0;\n            allowance.lastResetMin = 0;\n            updateAllowance(msg.sender, delegate, token, allowance);\n        }\n        delegates[msg.sender][current.prev].next = current.next;\n        delegates[msg.sender][current.next].prev = current.prev;\n        emit RemoveDelegate(msg.sender, delegate);\n    }\n\n    function getDelegates(address safe, uint48 start, uint8 pageSize) public view returns (address[] memory results, uint48 next) {\n        results = new address[](pageSize);\n        uint8 i = 0;\n        uint48 initialIndex = (start != 0) ? start : delegatesStart[safe];\n        Delegate memory current = delegates[safe][initialIndex];\n        while(current.delegate != address(0) && i < pageSize) {\n            results[i] = current.delegate;\n            i++;\n            current = delegates[safe][current.next];\n        }\n        next = uint48(current.delegate);\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            mstore(results, i)\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"input/AllowanceModule.sol": {
				"AllowanceModule": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR_TYPEHASH",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "delegatesStart",
							"outputs": [
								{
									"name": "",
									"type": "uint48"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "ALLOWANCE_TRANSFER_TYPEHASH",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "safe",
									"type": "address"
								},
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint96"
								},
								{
									"name": "paymentToken",
									"type": "address"
								},
								{
									"name": "payment",
									"type": "uint96"
								},
								{
									"name": "delegate",
									"type": "address"
								},
								{
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "executeAllowanceTransfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "removeDelegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "safe",
									"type": "address"
								},
								{
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "getTokens",
							"outputs": [
								{
									"name": "",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "safe",
									"type": "address"
								},
								{
									"name": "delegate",
									"type": "address"
								},
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "getTokenAllowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256[5]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "NAME",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowances",
							"outputs": [
								{
									"name": "amount",
									"type": "uint96"
								},
								{
									"name": "spent",
									"type": "uint96"
								},
								{
									"name": "resetTimeMin",
									"type": "uint16"
								},
								{
									"name": "lastResetMin",
									"type": "uint32"
								},
								{
									"name": "nonce",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "delegate",
									"type": "address"
								},
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "allowanceAmount",
									"type": "uint96"
								},
								{
									"name": "resetTimeMin",
									"type": "uint16"
								},
								{
									"name": "resetBaseMin",
									"type": "uint32"
								}
							],
							"name": "setAllowance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "delegate",
									"type": "address"
								},
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "resetAllowance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "uint48"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"name": "delegate",
									"type": "address"
								},
								{
									"name": "prev",
									"type": "uint48"
								},
								{
									"name": "next",
									"type": "uint48"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "safe",
									"type": "address"
								},
								{
									"name": "token",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint96"
								},
								{
									"name": "paymentToken",
									"type": "address"
								},
								{
									"name": "payment",
									"type": "uint96"
								},
								{
									"name": "nonce",
									"type": "uint16"
								}
							],
							"name": "generateTransferHash",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "addDelegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "safe",
									"type": "address"
								},
								{
									"name": "start",
									"type": "uint48"
								},
								{
									"name": "pageSize",
									"type": "uint8"
								}
							],
							"name": "getDelegates",
							"outputs": [
								{
									"name": "results",
									"type": "address[]"
								},
								{
									"name": "next",
									"type": "uint48"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokens",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "domainSeparator",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "VERSION",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "safe",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "AddDelegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "safe",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "RemoveDelegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "safe",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint96"
								},
								{
									"indexed": false,
									"name": "nonce",
									"type": "uint16"
								}
							],
							"name": "ExecuteAllowanceTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "safe",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "allowanceAmount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"name": "resetTime",
									"type": "uint16"
								}
							],
							"name": "SetAllowance",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"setAllowance(address,address,uint96,uint16,uint32)": {
								"details": "Allows to update the allowance for a specified token. This can only be done via a Safe transaction.",
								"params": {
									"allowanceAmount": "allowance in smallest token unit.",
									"delegate": "Delegate whose allowance should be updated.",
									"resetBaseMin": "Time based on which the reset time should be increased",
									"resetTimeMin": "Time after which the allowance should reset",
									"token": "Token contract address."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"input/AllowanceModule.sol\":3663:16817  contract AllowanceModule is SignatureDecoder, ISignatureValidatorConstants {... */\n  mstore(0x40, 0x80)\n    /* \"input/AllowanceModule.sol\":5307:5417  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"input/AllowanceModule.sol\":5307:5417  constructor() public {... */\n  pop\n    /* \"input/AllowanceModule.sol\":3976:4042  0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749 */\n  0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749\n    /* \"input/AllowanceModule.sol\":5377:5402  DOMAIN_SEPARATOR_TYPEHASH */\n  0x00\n  shl\n    /* \"input/AllowanceModule.sol\":5404:5408  this */\n  address\n    /* \"input/AllowanceModule.sol\":5366:5409  abi.encode(DOMAIN_SEPARATOR_TYPEHASH, this) */\n  add(0x20, mload(0x40))\n  dup1\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"input/AllowanceModule.sol\":5366:5409  abi.encode(DOMAIN_SEPARATOR_TYPEHASH, this) */\n  swap1\n  0x40\n  mstore\n    /* \"input/AllowanceModule.sol\":5356:5410  keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, this)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"input/AllowanceModule.sol\":5338:5353  domainSeparator */\n  0x04\n    /* \"input/AllowanceModule.sol\":5338:5410  domainSeparator = keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, this)) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"input/AllowanceModule.sol\":3663:16817  contract AllowanceModule is SignatureDecoder, ISignatureValidatorConstants {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/AllowanceModule.sol\":3663:16817  contract AllowanceModule is SignatureDecoder, ISignatureValidatorConstants {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"input/AllowanceModule.sol\":3663:16817  contract AllowanceModule is SignatureDecoder, ISignatureValidatorConstants {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbeaeb388\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xe71bdf41\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xe71bdf41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xeb37abe0\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf56e81fa\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf698da25\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xffa1ad74\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0xbeaeb388\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc19bf50e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xce60c692\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd626e043\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x67e7646f\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x67e7646f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8d0e8e1d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x94b31fbd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa3f4df7e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb713c9d4\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x1db61b54\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x310a3bb1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x43abf5fe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4515641a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"input/AllowanceModule.sol\":3924:4042  bytes32 public constant DOMAIN_SEPARATOR_TYPEHASH = 0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749 */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":4548:4596  mapping(address => uint48) public delegatesStart */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"input/AllowanceModule.sol\":4548:4596  mapping(address => uint48) public delegatesStart */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":4080:4269  bytes32 public constant ALLOWANCE_TRANSFER_TYPEHASH = keccak256(... */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x0100\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_35:\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_31:\n      stop\n        /* \"input/AllowanceModule.sol\":15153:16120  function removeDelegate(address delegate) public {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"input/AllowanceModule.sol\":15153:16120  function removeDelegate(address delegate) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"input/AllowanceModule.sol\":14009:14145  function getTokens(address safe, address delegate) public view returns (address[] memory) {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n        /* \"input/AllowanceModule.sol\":14009:14145  function getTokens(address safe, address delegate) public view returns (address[] memory) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_43:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_43)\n    tag_45:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":14009:14145  function getTokens(address safe, address delegate) public view returns (address[] memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":14151:14578  function getTokenAllowance(address safe, address delegate, address token) public view returns (uint256[5] memory) {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"input/AllowanceModule.sol\":14151:14578  function getTokenAllowance(address safe, address delegate, address token) public view returns (uint256[5] memory) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      mul(0x20, 0x05)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_49:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_49)\n    tag_51:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":14151:14578  function getTokenAllowance(address safe, address delegate, address token) public view returns (uint256[5] memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":3745:3793  string public constant NAME = \"Allowance Module\" */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_54:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_54)\n    tag_56:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":3745:3793  string public constant NAME = \"Allowance Module\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_57:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":4313:4401  mapping(address => mapping (address => mapping(address => Allowance))) public allowances */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n        /* \"input/AllowanceModule.sol\":4313:4401  mapping(address => mapping (address => mapping(address => Allowance))) public allowances */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":5869:7125  function setAllowance(address delegate, address token, uint96 allowanceAmount, uint16 resetTimeMin, uint32 resetBaseMin)... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n        /* \"input/AllowanceModule.sol\":5869:7125  function setAllowance(address delegate, address token, uint96 allowanceAmount, uint16 resetTimeMin, uint32 resetBaseMin)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"input/AllowanceModule.sol\":7894:8139  function resetAllowance(address delegate, address token) public {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"input/AllowanceModule.sol\":7894:8139  function resetAllowance(address delegate, address token) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"input/AllowanceModule.sol\":4477:4542  mapping(address => mapping (uint48 => Delegate)) public delegates */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n        /* \"input/AllowanceModule.sol\":4477:4542  mapping(address => mapping (uint48 => Delegate)) public delegates */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":10866:11232  function generateTransferHash(... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_71:\n        /* \"input/AllowanceModule.sol\":10866:11232  function generateTransferHash(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":14584:15147  function addDelegate(address delegate) public {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"input/AllowanceModule.sol\":14584:15147  function addDelegate(address delegate) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"input/AllowanceModule.sol\":16126:16815  function getDelegates(address safe, uint48 start, uint8 pageSize) public view returns (address[] memory results, uint48 next) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"input/AllowanceModule.sol\":16126:16815  function getDelegates(address safe, uint48 start, uint8 pageSize) public view returns (address[] memory results, uint48 next) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup4\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_79:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_79)\n    tag_81:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":16126:16815  function getDelegates(address safe, uint48 start, uint8 pageSize) public view returns (address[] memory results, uint48 next) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":4407:4471  mapping(address => mapping (address => address[])) public tokens */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n        /* \"input/AllowanceModule.sol\":4407:4471  mapping(address => mapping (address => address[])) public tokens */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":4602:4632  bytes32 public domainSeparator */\n    tag_19:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":3799:3839  string public constant VERSION = \"0.1.0\" */\n    tag_20:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_89:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_89)\n    tag_91:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":3799:3839  string public constant VERSION = \"0.1.0\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_92:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"input/AllowanceModule.sol\":3924:4042  bytes32 public constant DOMAIN_SEPARATOR_TYPEHASH = 0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749 */\n    tag_25:\n        /* \"input/AllowanceModule.sol\":3976:4042  0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749 */\n      0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749\n        /* \"input/AllowanceModule.sol\":3924:4042  bytes32 public constant DOMAIN_SEPARATOR_TYPEHASH = 0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":4548:4596  mapping(address => uint48) public delegatesStart */\n    tag_28:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":4080:4269  bytes32 public constant ALLOWANCE_TRANSFER_TYPEHASH = keccak256(... */\n    tag_30:\n        /* \"input/AllowanceModule.sol\":4134:4269  keccak256(... */\n      mload(0x40)\n      dup1\n      dup1\n      data_80b006280932094e7cc965863eb5118dc07e5d272c6670c4a7c87299e04fceeb\n      0x6c\n      swap2\n      codecopy\n      0x6c\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"input/AllowanceModule.sol\":4080:4269  bytes32 public constant ALLOWANCE_TRANSFER_TYPEHASH = keccak256(... */\n      dup2\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n    tag_36:\n        /* \"input/AllowanceModule.sol\":8442:8468  Allowance memory allowance */\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"input/AllowanceModule.sol\":8471:8515  getAllowance(address(safe), delegate, token) */\n      tag_96\n        /* \"input/AllowanceModule.sol\":8492:8496  safe */\n      dup10\n        /* \"input/AllowanceModule.sol\":8499:8507  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":8509:8514  token */\n      dup11\n        /* \"input/AllowanceModule.sol\":8471:8483  getAllowance */\n      tag_97\n        /* \"input/AllowanceModule.sol\":8471:8515  getAllowance(address(safe), delegate, token) */\n      jump\t// in\n    tag_96:\n        /* \"input/AllowanceModule.sol\":8442:8515  Allowance memory allowance = getAllowance(address(safe), delegate, token) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":8525:8554  bytes memory transferHashData */\n      0x60\n        /* \"input/AllowanceModule.sol\":8557:8655  generateTransferHashData(address(safe), token, to, amount, paymentToken, payment, allowance.nonce) */\n      tag_98\n        /* \"input/AllowanceModule.sol\":8590:8594  safe */\n      dup11\n        /* \"input/AllowanceModule.sol\":8597:8602  token */\n      dup11\n        /* \"input/AllowanceModule.sol\":8604:8606  to */\n      dup11\n        /* \"input/AllowanceModule.sol\":8608:8614  amount */\n      dup11\n        /* \"input/AllowanceModule.sol\":8616:8628  paymentToken */\n      dup11\n        /* \"input/AllowanceModule.sol\":8630:8637  payment */\n      dup11\n        /* \"input/AllowanceModule.sol\":8639:8648  allowance */\n      dup9\n        /* \"input/AllowanceModule.sol\":8639:8654  allowance.nonce */\n      0x80\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":8557:8581  generateTransferHashData */\n      tag_99\n        /* \"input/AllowanceModule.sol\":8557:8655  generateTransferHashData(address(safe), token, to, amount, paymentToken, payment, allowance.nonce) */\n      jump\t// in\n    tag_98:\n        /* \"input/AllowanceModule.sol\":8525:8655  bytes memory transferHashData = generateTransferHashData(address(safe), token, to, amount, paymentToken, payment, allowance.nonce) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":8725:8726  1 */\n      0x01\n        /* \"input/AllowanceModule.sol\":8707:8716  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":8707:8722  allowance.nonce */\n      0x80\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":8707:8726  allowance.nonce + 1 */\n      add\n        /* \"input/AllowanceModule.sol\":8689:8698  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":8689:8704  allowance.nonce */\n      0x80\n      add\n        /* \"input/AllowanceModule.sol\":8689:8726  allowance.nonce = allowance.nonce + 1 */\n      swap1\n      0xffff\n      and\n      swap1\n      dup2\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":8736:8751  uint96 newSpent */\n      0x00\n        /* \"input/AllowanceModule.sol\":8772:8778  amount */\n      dup8\n        /* \"input/AllowanceModule.sol\":8754:8763  allowance */\n      dup4\n        /* \"input/AllowanceModule.sol\":8754:8769  allowance.spent */\n      0x20\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":8754:8778  allowance.spent + amount */\n      add\n        /* \"input/AllowanceModule.sol\":8736:8778  uint96 newSpent = allowance.spent + amount */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":8854:8863  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":8854:8869  allowance.spent */\n      0x20\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":8843:8869  newSpent > allowance.spent */\n      0xffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":8843:8851  newSpent */\n      dup2\n        /* \"input/AllowanceModule.sol\":8843:8869  newSpent > allowance.spent */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"input/AllowanceModule.sol\":8843:8901  newSpent > allowance.spent && newSpent <= allowance.amount */\n      dup1\n      iszero\n      tag_100\n      jumpi\n      pop\n        /* \"input/AllowanceModule.sol\":8885:8894  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":8885:8901  allowance.amount */\n      0x00\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":8873:8901  newSpent <= allowance.amount */\n      0xffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":8873:8881  newSpent */\n      dup2\n        /* \"input/AllowanceModule.sol\":8873:8901  newSpent <= allowance.amount */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"input/AllowanceModule.sol\":8843:8901  newSpent > allowance.spent && newSpent <= allowance.amount */\n    tag_100:\n        /* \"input/AllowanceModule.sol\":8835:8964  require(newSpent > allowance.spent && newSpent <= allowance.amount, \"newSpent > allowance.spent && newSpent <= allowance.amount\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a7359a8519961096cf8fb65715f77dbc4de2755aabf21e3445e245a34ee622da\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"input/AllowanceModule.sol\":8992:9000  newSpent */\n      dup1\n        /* \"input/AllowanceModule.sol\":8974:8983  allowance */\n      dup4\n        /* \"input/AllowanceModule.sol\":8974:8989  allowance.spent */\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":8974:9000  allowance.spent = newSpent */\n      swap1\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":9024:9025  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":9014:9021  payment */\n      dup7\n        /* \"input/AllowanceModule.sol\":9014:9025  payment > 0 */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"input/AllowanceModule.sol\":9010:9759  if (payment > 0) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"input/AllowanceModule.sol\":9117:9150  Allowance memory paymentAllowance */\n      tag_103\n      tag_95\n      jump\t// in\n    tag_103:\n        /* \"input/AllowanceModule.sol\":9169:9174  token */\n      dup11\n        /* \"input/AllowanceModule.sol\":9153:9174  paymentToken == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":9153:9165  paymentToken */\n      dup9\n        /* \"input/AllowanceModule.sol\":9153:9174  paymentToken == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":9153:9240  paymentToken == token ? allowance : getAllowance(address(safe), delegate, paymentToken) */\n      tag_104\n      jumpi\n        /* \"input/AllowanceModule.sol\":9189:9240  getAllowance(address(safe), delegate, paymentToken) */\n      tag_105\n        /* \"input/AllowanceModule.sol\":9210:9214  safe */\n      dup13\n        /* \"input/AllowanceModule.sol\":9217:9225  delegate */\n      dup8\n        /* \"input/AllowanceModule.sol\":9227:9239  paymentToken */\n      dup11\n        /* \"input/AllowanceModule.sol\":9189:9201  getAllowance */\n      tag_97\n        /* \"input/AllowanceModule.sol\":9189:9240  getAllowance(address(safe), delegate, paymentToken) */\n      jump\t// in\n    tag_105:\n        /* \"input/AllowanceModule.sol\":9153:9240  paymentToken == token ? allowance : getAllowance(address(safe), delegate, paymentToken) */\n      jump(tag_106)\n    tag_104:\n        /* \"input/AllowanceModule.sol\":9177:9186  allowance */\n      dup4\n        /* \"input/AllowanceModule.sol\":9153:9240  paymentToken == token ? allowance : getAllowance(address(safe), delegate, paymentToken) */\n    tag_106:\n        /* \"input/AllowanceModule.sol\":9117:9240  Allowance memory paymentAllowance = paymentToken == token ? allowance : getAllowance(address(safe), delegate, paymentToken) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":9290:9297  payment */\n      dup7\n        /* \"input/AllowanceModule.sol\":9265:9281  paymentAllowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":9265:9287  paymentAllowance.spent */\n      0x20\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":9265:9297  paymentAllowance.spent + payment */\n      add\n        /* \"input/AllowanceModule.sol\":9254:9297  newSpent = paymentAllowance.spent + payment */\n      swap2\n      pop\n        /* \"input/AllowanceModule.sol\":9382:9398  paymentAllowance */\n      dup1\n        /* \"input/AllowanceModule.sol\":9382:9404  paymentAllowance.spent */\n      0x20\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":9371:9404  newSpent > paymentAllowance.spent */\n      0xffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":9371:9379  newSpent */\n      dup3\n        /* \"input/AllowanceModule.sol\":9371:9404  newSpent > paymentAllowance.spent */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"input/AllowanceModule.sol\":9371:9443  newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount */\n      dup1\n      iszero\n      tag_107\n      jumpi\n      pop\n        /* \"input/AllowanceModule.sol\":9420:9436  paymentAllowance */\n      dup1\n        /* \"input/AllowanceModule.sol\":9420:9443  paymentAllowance.amount */\n      0x00\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":9408:9443  newSpent <= paymentAllowance.amount */\n      0xffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":9408:9416  newSpent */\n      dup3\n        /* \"input/AllowanceModule.sol\":9408:9443  newSpent <= paymentAllowance.amount */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"input/AllowanceModule.sol\":9371:9443  newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount */\n    tag_107:\n        /* \"input/AllowanceModule.sol\":9363:9520  require(newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount, \"newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x48\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b549d52c5706645679000944ae1bcaec935d0b8c387f4240a09789be7dc8c0d4\n      0x48\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"input/AllowanceModule.sol\":9559:9567  newSpent */\n      dup2\n        /* \"input/AllowanceModule.sol\":9534:9550  paymentAllowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":9534:9556  paymentAllowance.spent */\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":9534:9567  paymentAllowance.spent = newSpent */\n      swap1\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":9669:9674  token */\n      dup11\n        /* \"input/AllowanceModule.sol\":9653:9674  paymentToken != token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":9653:9665  paymentToken */\n      dup9\n        /* \"input/AllowanceModule.sol\":9653:9674  paymentToken != token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":9649:9748  if (paymentToken != token) updateAllowance(address(safe), delegate, paymentToken, paymentAllowance) */\n      tag_109\n      jumpi\n        /* \"input/AllowanceModule.sol\":9676:9748  updateAllowance(address(safe), delegate, paymentToken, paymentAllowance) */\n      tag_110\n        /* \"input/AllowanceModule.sol\":9700:9704  safe */\n      dup13\n        /* \"input/AllowanceModule.sol\":9707:9715  delegate */\n      dup8\n        /* \"input/AllowanceModule.sol\":9717:9729  paymentToken */\n      dup11\n        /* \"input/AllowanceModule.sol\":9731:9747  paymentAllowance */\n      dup5\n        /* \"input/AllowanceModule.sol\":9676:9691  updateAllowance */\n      tag_111\n        /* \"input/AllowanceModule.sol\":9676:9748  updateAllowance(address(safe), delegate, paymentToken, paymentAllowance) */\n      jump\t// in\n    tag_110:\n        /* \"input/AllowanceModule.sol\":9649:9748  if (paymentToken != token) updateAllowance(address(safe), delegate, paymentToken, paymentAllowance) */\n    tag_109:\n        /* \"input/AllowanceModule.sol\":9010:9759  if (payment > 0) {... */\n      pop\n    tag_102:\n        /* \"input/AllowanceModule.sol\":9768:9826  updateAllowance(address(safe), delegate, token, allowance) */\n      tag_112\n        /* \"input/AllowanceModule.sol\":9792:9796  safe */\n      dup12\n        /* \"input/AllowanceModule.sol\":9799:9807  delegate */\n      dup7\n        /* \"input/AllowanceModule.sol\":9809:9814  token */\n      dup13\n        /* \"input/AllowanceModule.sol\":9816:9825  allowance */\n      dup7\n        /* \"input/AllowanceModule.sol\":9768:9783  updateAllowance */\n      tag_111\n        /* \"input/AllowanceModule.sol\":9768:9826  updateAllowance(address(safe), delegate, token, allowance) */\n      jump\t// in\n    tag_112:\n        /* \"input/AllowanceModule.sol\":9908:9967  checkSignature(delegate, signature, transferHashData, safe) */\n      tag_113\n        /* \"input/AllowanceModule.sol\":9923:9931  delegate */\n      dup6\n        /* \"input/AllowanceModule.sol\":9933:9942  signature */\n      dup6\n        /* \"input/AllowanceModule.sol\":9944:9960  transferHashData */\n      dup5\n        /* \"input/AllowanceModule.sol\":9962:9966  safe */\n      dup15\n        /* \"input/AllowanceModule.sol\":9908:9922  checkSignature */\n      tag_114\n        /* \"input/AllowanceModule.sol\":9908:9967  checkSignature(delegate, signature, transferHashData, safe) */\n      jump\t// in\n    tag_113:\n        /* \"input/AllowanceModule.sol\":10010:10011  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":10000:10007  payment */\n      dup7\n        /* \"input/AllowanceModule.sol\":10000:10011  payment > 0 */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"input/AllowanceModule.sol\":9996:10180  if (payment > 0) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"input/AllowanceModule.sol\":10121:10169  transfer(safe, paymentToken, tx.origin, payment) */\n      tag_116\n        /* \"input/AllowanceModule.sol\":10130:10134  safe */\n      dup12\n        /* \"input/AllowanceModule.sol\":10136:10148  paymentToken */\n      dup9\n        /* \"input/AllowanceModule.sol\":10150:10159  tx.origin */\n      origin\n        /* \"input/AllowanceModule.sol\":10161:10168  payment */\n      dup10\n        /* \"input/AllowanceModule.sol\":10121:10129  transfer */\n      tag_117\n        /* \"input/AllowanceModule.sol\":10121:10169  transfer(safe, paymentToken, tx.origin, payment) */\n      jump\t// in\n    tag_116:\n        /* \"input/AllowanceModule.sol\":9996:10180  if (payment > 0) {... */\n    tag_115:\n        /* \"input/AllowanceModule.sol\":10215:10248  transfer(safe, token, to, amount) */\n      tag_118\n        /* \"input/AllowanceModule.sol\":10224:10228  safe */\n      dup12\n        /* \"input/AllowanceModule.sol\":10230:10235  token */\n      dup12\n        /* \"input/AllowanceModule.sol\":10237:10239  to */\n      dup12\n        /* \"input/AllowanceModule.sol\":10241:10247  amount */\n      dup12\n        /* \"input/AllowanceModule.sol\":10215:10223  transfer */\n      tag_117\n        /* \"input/AllowanceModule.sol\":10215:10248  transfer(safe, token, to, amount) */\n      jump\t// in\n    tag_118:\n        /* \"input/AllowanceModule.sol\":10296:10300  safe */\n      dup11\n        /* \"input/AllowanceModule.sol\":10263:10352  ExecuteAllowanceTransfer(address(safe), delegate, token, to, amount, allowance.nonce - 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa11cca2c2027e28ab0046aab4d4040f59d8b06e819ccd974c1e53e86aa814c19\n        /* \"input/AllowanceModule.sol\":10303:10311  delegate */\n      dup7\n        /* \"input/AllowanceModule.sol\":10313:10318  token */\n      dup13\n        /* \"input/AllowanceModule.sol\":10320:10322  to */\n      dup13\n        /* \"input/AllowanceModule.sol\":10324:10330  amount */\n      dup13\n        /* \"input/AllowanceModule.sol\":10350:10351  1 */\n      0x01\n        /* \"input/AllowanceModule.sol\":10332:10341  allowance */\n      dup10\n        /* \"input/AllowanceModule.sol\":10332:10347  allowance.nonce */\n      0x80\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":10332:10351  allowance.nonce - 1 */\n      sub\n        /* \"input/AllowanceModule.sol\":10263:10352  ExecuteAllowanceTransfer(address(safe), delegate, token, to, amount, allowance.nonce - 1) */\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/AllowanceModule.sol\":8145:10359  function executeAllowanceTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":15153:16120  function removeDelegate(address delegate) public {... */\n    tag_39:\n        /* \"input/AllowanceModule.sol\":15212:15235  Delegate memory current */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"input/AllowanceModule.sol\":15238:15247  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":15238:15259  delegates[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15248:15258  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15238:15259  delegates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15238:15277  delegates[msg.sender][uint48(delegate)] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15267:15275  delegate */\n      dup4\n        /* \"input/AllowanceModule.sol\":15238:15277  delegates[msg.sender][uint48(delegate)] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15212:15277  Delegate memory current = delegates[msg.sender][uint48(delegate)] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":15368:15369  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":15340:15370  current.delegate == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":15340:15347  current */\n      dup2\n        /* \"input/AllowanceModule.sol\":15340:15356  current.delegate */\n      0x00\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":15340:15370  current.delegate == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":15337:15379  if(current.delegate == address(0)) return; */\n      iszero\n      tag_122\n      jumpi\n        /* \"input/AllowanceModule.sol\":15372:15379  return; */\n      pop\n      jump(tag_119)\n        /* \"input/AllowanceModule.sol\":15337:15379  if(current.delegate == address(0)) return; */\n    tag_122:\n        /* \"input/AllowanceModule.sol\":15388:15420  address[] storage delegateTokens */\n      0x00\n        /* \"input/AllowanceModule.sol\":15423:15429  tokens */\n      0x01\n        /* \"input/AllowanceModule.sol\":15423:15441  tokens[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15430:15440  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15423:15441  tokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15423:15451  tokens[msg.sender][delegate] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15442:15450  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":15423:15451  tokens[msg.sender][delegate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15388:15451  address[] storage delegateTokens = tokens[msg.sender][delegate] */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":15466:15475  uint256 i */\n      0x00\n        /* \"input/AllowanceModule.sol\":15478:15479  0 */\n      dup1\n        /* \"input/AllowanceModule.sol\":15466:15479  uint256 i = 0 */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":15461:15933  for (uint256 i = 0; i < delegateTokens.length; i++) {... */\n    tag_123:\n        /* \"input/AllowanceModule.sol\":15485:15499  delegateTokens */\n      dup2\n        /* \"input/AllowanceModule.sol\":15485:15506  delegateTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":15481:15482  i */\n      dup2\n        /* \"input/AllowanceModule.sol\":15481:15506  i < delegateTokens.length */\n      lt\n        /* \"input/AllowanceModule.sol\":15461:15933  for (uint256 i = 0; i < delegateTokens.length; i++) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"input/AllowanceModule.sol\":15527:15540  address token */\n      0x00\n        /* \"input/AllowanceModule.sol\":15543:15557  delegateTokens */\n      dup3\n        /* \"input/AllowanceModule.sol\":15558:15559  i */\n      dup3\n        /* \"input/AllowanceModule.sol\":15543:15560  delegateTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_126\n      jumpi\n      invalid\n    tag_126:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":15527:15560  address token = delegateTokens[i] */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":15636:15662  Allowance memory allowance */\n      tag_128\n      tag_95\n      jump\t// in\n    tag_128:\n        /* \"input/AllowanceModule.sol\":15665:15706  getAllowance(msg.sender, delegate, token) */\n      tag_129\n        /* \"input/AllowanceModule.sol\":15678:15688  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15690:15698  delegate */\n      dup8\n        /* \"input/AllowanceModule.sol\":15700:15705  token */\n      dup5\n        /* \"input/AllowanceModule.sol\":15665:15677  getAllowance */\n      tag_97\n        /* \"input/AllowanceModule.sol\":15665:15706  getAllowance(msg.sender, delegate, token) */\n      jump\t// in\n    tag_129:\n        /* \"input/AllowanceModule.sol\":15636:15706  Allowance memory allowance = getAllowance(msg.sender, delegate, token) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":15739:15740  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":15720:15729  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":15720:15736  allowance.amount */\n      0x00\n      add\n        /* \"input/AllowanceModule.sol\":15720:15740  allowance.amount = 0 */\n      swap1\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":15772:15773  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":15754:15763  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":15754:15769  allowance.spent */\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":15754:15773  allowance.spent = 0 */\n      swap1\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":15812:15813  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":15787:15796  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":15787:15809  allowance.resetTimeMin */\n      0x40\n      add\n        /* \"input/AllowanceModule.sol\":15787:15813  allowance.resetTimeMin = 0 */\n      swap1\n      0xffff\n      and\n      swap1\n      dup2\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":15852:15853  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":15827:15836  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":15827:15849  allowance.lastResetMin */\n      0x60\n      add\n        /* \"input/AllowanceModule.sol\":15827:15853  allowance.lastResetMin = 0 */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":15867:15922  updateAllowance(msg.sender, delegate, token, allowance) */\n      tag_130\n        /* \"input/AllowanceModule.sol\":15883:15893  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15895:15903  delegate */\n      dup8\n        /* \"input/AllowanceModule.sol\":15905:15910  token */\n      dup5\n        /* \"input/AllowanceModule.sol\":15912:15921  allowance */\n      dup5\n        /* \"input/AllowanceModule.sol\":15867:15882  updateAllowance */\n      tag_111\n        /* \"input/AllowanceModule.sol\":15867:15922  updateAllowance(msg.sender, delegate, token, allowance) */\n      jump\t// in\n    tag_130:\n        /* \"input/AllowanceModule.sol\":15461:15933  for (uint256 i = 0; i < delegateTokens.length; i++) {... */\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":15508:15511  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":15461:15933  for (uint256 i = 0; i < delegateTokens.length; i++) {... */\n      jump(tag_123)\n    tag_124:\n      pop\n        /* \"input/AllowanceModule.sol\":15985:15992  current */\n      dup2\n        /* \"input/AllowanceModule.sol\":15985:15997  current.next */\n      0x40\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":15942:15951  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":15942:15963  delegates[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15952:15962  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15942:15963  delegates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15942:15977  delegates[msg.sender][current.prev] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15964:15971  current */\n      dup5\n        /* \"input/AllowanceModule.sol\":15964:15976  current.prev */\n      0x20\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":15942:15977  delegates[msg.sender][current.prev] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15942:15982  delegates[msg.sender][current.prev].next */\n      0x00\n      add\n      0x1a\n        /* \"input/AllowanceModule.sol\":15942:15997  delegates[msg.sender][current.prev].next = current.next */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/AllowanceModule.sol\":16050:16057  current */\n      dup2\n        /* \"input/AllowanceModule.sol\":16050:16062  current.prev */\n      0x20\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":16007:16016  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":16007:16028  delegates[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":16017:16027  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":16007:16028  delegates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":16007:16042  delegates[msg.sender][current.next] */\n      0x00\n        /* \"input/AllowanceModule.sol\":16029:16036  current */\n      dup5\n        /* \"input/AllowanceModule.sol\":16029:16041  current.next */\n      0x40\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":16007:16042  delegates[msg.sender][current.next] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":16007:16047  delegates[msg.sender][current.next].prev */\n      0x00\n      add\n      0x14\n        /* \"input/AllowanceModule.sol\":16007:16062  delegates[msg.sender][current.next].prev = current.prev */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/AllowanceModule.sol\":16092:16102  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":16077:16113  RemoveDelegate(msg.sender, delegate) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdccc2d936ded24d2153d2760581a7f0dcb23ec71190c9726b3584cdd700214d4\n        /* \"input/AllowanceModule.sol\":16104:16112  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":16077:16113  RemoveDelegate(msg.sender, delegate) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/AllowanceModule.sol\":15153:16120  function removeDelegate(address delegate) public {... */\n      pop\n      pop\n    tag_119:\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":14009:14145  function getTokens(address safe, address delegate) public view returns (address[] memory) {... */\n    tag_42:\n        /* \"input/AllowanceModule.sol\":14081:14097  address[] memory */\n      0x60\n        /* \"input/AllowanceModule.sol\":14116:14122  tokens */\n      0x01\n        /* \"input/AllowanceModule.sol\":14116:14128  tokens[safe] */\n      0x00\n        /* \"input/AllowanceModule.sol\":14123:14127  safe */\n      dup5\n        /* \"input/AllowanceModule.sol\":14116:14128  tokens[safe] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":14116:14138  tokens[safe][delegate] */\n      0x00\n        /* \"input/AllowanceModule.sol\":14129:14137  delegate */\n      dup4\n        /* \"input/AllowanceModule.sol\":14116:14138  tokens[safe][delegate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":14109:14138  return tokens[safe][delegate] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":14009:14145  function getTokens(address safe, address delegate) public view returns (address[] memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":14151:14578  function getTokenAllowance(address safe, address delegate, address token) public view returns (uint256[5] memory) {... */\n    tag_48:\n        /* \"input/AllowanceModule.sol\":14246:14263  uint256[5] memory */\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"input/AllowanceModule.sol\":14275:14301  Allowance memory allowance */\n      tag_137\n      tag_95\n      jump\t// in\n    tag_137:\n        /* \"input/AllowanceModule.sol\":14304:14339  getAllowance(safe, delegate, token) */\n      tag_138\n        /* \"input/AllowanceModule.sol\":14317:14321  safe */\n      dup6\n        /* \"input/AllowanceModule.sol\":14323:14331  delegate */\n      dup6\n        /* \"input/AllowanceModule.sol\":14333:14338  token */\n      dup6\n        /* \"input/AllowanceModule.sol\":14304:14316  getAllowance */\n      tag_97\n        /* \"input/AllowanceModule.sol\":14304:14339  getAllowance(safe, delegate, token) */\n      jump\t// in\n    tag_138:\n        /* \"input/AllowanceModule.sol\":14275:14339  Allowance memory allowance = getAllowance(safe, delegate, token) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":14349:14571  return [... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"input/AllowanceModule.sol\":14378:14387  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":14378:14394  allowance.amount */\n      0x00\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":14370:14395  uint256(allowance.amount) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":14349:14571  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":14417:14426  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":14417:14432  allowance.spent */\n      0x20\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":14409:14433  uint256(allowance.spent) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":14349:14571  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":14455:14464  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":14455:14477  allowance.resetTimeMin */\n      0x40\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":14447:14478  uint256(allowance.resetTimeMin) */\n      0xffff\n      and\n        /* \"input/AllowanceModule.sol\":14349:14571  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":14500:14509  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":14500:14522  allowance.lastResetMin */\n      0x60\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":14492:14523  uint256(allowance.lastResetMin) */\n      0xffffffff\n      and\n        /* \"input/AllowanceModule.sol\":14349:14571  return [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":14545:14554  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":14545:14560  allowance.nonce */\n      0x80\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":14537:14561  uint256(allowance.nonce) */\n      0xffff\n      and\n        /* \"input/AllowanceModule.sol\":14349:14571  return [... */\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":14151:14578  function getTokenAllowance(address safe, address delegate, address token) public view returns (uint256[5] memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":3745:3793  string public constant NAME = \"Allowance Module\" */\n    tag_53:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x416c6c6f77616e6365204d6f64756c6500000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":4313:4401  mapping(address => mapping (address => mapping(address => Allowance))) public allowances */\n    tag_60:\n      mstore(0x20, 0x00)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":5869:7125  function setAllowance(address delegate, address token, uint96 allowanceAmount, uint16 resetTimeMin, uint32 resetBaseMin)... */\n    tag_63:\n        /* \"input/AllowanceModule.sol\":6079:6087  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":6027:6087  delegates[msg.sender][uint48(delegate)].delegate == delegate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":6027:6036  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":6027:6048  delegates[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":6037:6047  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":6027:6048  delegates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":6027:6066  delegates[msg.sender][uint48(delegate)] */\n      0x00\n        /* \"input/AllowanceModule.sol\":6056:6064  delegate */\n      dup8\n        /* \"input/AllowanceModule.sol\":6027:6066  delegates[msg.sender][uint48(delegate)] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":6027:6075  delegates[msg.sender][uint48(delegate)].delegate */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":6027:6087  delegates[msg.sender][uint48(delegate)].delegate == delegate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":6019:6152  require(delegates[msg.sender][uint48(delegate)].delegate == delegate, \"delegates[msg.sender][uint48(delegate)].delegate == delegate\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_58537fa1960fbebccc117b6218b0af08a9f148039299593ea287e665dd534bb1\n      0x3c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"input/AllowanceModule.sol\":6162:6188  Allowance memory allowance */\n      tag_141\n      tag_95\n      jump\t// in\n    tag_141:\n        /* \"input/AllowanceModule.sol\":6191:6232  getAllowance(msg.sender, delegate, token) */\n      tag_142\n        /* \"input/AllowanceModule.sol\":6204:6214  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":6216:6224  delegate */\n      dup8\n        /* \"input/AllowanceModule.sol\":6226:6231  token */\n      dup8\n        /* \"input/AllowanceModule.sol\":6191:6203  getAllowance */\n      tag_97\n        /* \"input/AllowanceModule.sol\":6191:6232  getAllowance(msg.sender, delegate, token) */\n      jump\t// in\n    tag_142:\n        /* \"input/AllowanceModule.sol\":6162:6232  Allowance memory allowance = getAllowance(msg.sender, delegate, token) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":6265:6266  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":6246:6255  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":6246:6261  allowance.nonce */\n      0x80\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":6246:6266  allowance.nonce == 0 */\n      0xffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":6242:6452  if (allowance.nonce == 0) { // New token... */\n      iszero\n      tag_143\n      jumpi\n        /* \"input/AllowanceModule.sol\":6386:6387  1 */\n      0x01\n        /* \"input/AllowanceModule.sol\":6368:6377  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":6368:6383  allowance.nonce */\n      0x80\n      add\n        /* \"input/AllowanceModule.sol\":6368:6387  allowance.nonce = 1 */\n      swap1\n      0xffff\n      and\n      swap1\n      dup2\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":6401:6407  tokens */\n      0x01\n        /* \"input/AllowanceModule.sol\":6401:6419  tokens[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":6408:6418  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":6401:6419  tokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":6401:6429  tokens[msg.sender][delegate] */\n      0x00\n        /* \"input/AllowanceModule.sol\":6420:6428  delegate */\n      dup8\n        /* \"input/AllowanceModule.sol\":6401:6429  tokens[msg.sender][delegate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":6435:6440  token */\n      dup6\n        /* \"input/AllowanceModule.sol\":6401:6441  tokens[msg.sender][delegate].push(token) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"input/AllowanceModule.sol\":6401:6441  tokens[msg.sender][delegate].push(token) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":6242:6452  if (allowance.nonce == 0) { // New token... */\n    tag_143:\n        /* \"input/AllowanceModule.sol\":6523:6540  uint32 currentMin */\n      0x00\n        /* \"input/AllowanceModule.sol\":6556:6558  60 */\n      0x3c\n        /* \"input/AllowanceModule.sol\":6550:6553  now */\n      timestamp\n        /* \"input/AllowanceModule.sol\":6550:6558  now / 60 */\n      dup2\n      tag_145\n      jumpi\n      invalid\n    tag_145:\n      div\n        /* \"input/AllowanceModule.sol\":6523:6559  uint32 currentMin = uint32(now / 60) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":6588:6589  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":6573:6585  resetBaseMin */\n      dup4\n        /* \"input/AllowanceModule.sol\":6573:6589  resetBaseMin > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"input/AllowanceModule.sol\":6569:6876  if (resetBaseMin > 0) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"input/AllowanceModule.sol\":6629:6639  currentMin */\n      dup1\n        /* \"input/AllowanceModule.sol\":6613:6639  resetBaseMin <= currentMin */\n      0xffffffff\n      and\n        /* \"input/AllowanceModule.sol\":6613:6625  resetBaseMin */\n      dup4\n        /* \"input/AllowanceModule.sol\":6613:6639  resetBaseMin <= currentMin */\n      0xffffffff\n      and\n      gt\n      iszero\n        /* \"input/AllowanceModule.sol\":6605:6670  require(resetBaseMin <= currentMin, \"resetBaseMin <= currentMin\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7265736574426173654d696e203c3d2063757272656e744d696e000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"input/AllowanceModule.sol\":6753:6765  resetTimeMin */\n      dup4\n        /* \"input/AllowanceModule.sol\":6723:6765  (currentMin - resetBaseMin) % resetTimeMin */\n      0xffff\n      and\n        /* \"input/AllowanceModule.sol\":6737:6749  resetBaseMin */\n      dup4\n        /* \"input/AllowanceModule.sol\":6724:6734  currentMin */\n      dup3\n        /* \"input/AllowanceModule.sol\":6724:6749  currentMin - resetBaseMin */\n      sub\n        /* \"input/AllowanceModule.sol\":6723:6765  (currentMin - resetBaseMin) % resetTimeMin */\n      0xffffffff\n      and\n      dup2\n      tag_148\n      jumpi\n      invalid\n    tag_148:\n      mod\n        /* \"input/AllowanceModule.sol\":6709:6719  currentMin */\n      dup2\n        /* \"input/AllowanceModule.sol\":6709:6766  currentMin - ((currentMin - resetBaseMin) % resetTimeMin) */\n      sub\n        /* \"input/AllowanceModule.sol\":6684:6693  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":6684:6706  allowance.lastResetMin */\n      0x60\n      add\n        /* \"input/AllowanceModule.sol\":6684:6766  allowance.lastResetMin = currentMin - ((currentMin - resetBaseMin) % resetTimeMin) */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":6569:6876  if (resetBaseMin > 0) {... */\n      jump(tag_149)\n    tag_146:\n        /* \"input/AllowanceModule.sol\":6813:6814  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":6787:6796  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":6787:6809  allowance.lastResetMin */\n      0x60\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":6787:6814  allowance.lastResetMin == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":6783:6876  if (allowance.lastResetMin == 0) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"input/AllowanceModule.sol\":6855:6865  currentMin */\n      dup1\n        /* \"input/AllowanceModule.sol\":6830:6839  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":6830:6852  allowance.lastResetMin */\n      0x60\n      add\n        /* \"input/AllowanceModule.sol\":6830:6865  allowance.lastResetMin = currentMin */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":6783:6876  if (allowance.lastResetMin == 0) {... */\n    tag_150:\n        /* \"input/AllowanceModule.sol\":6569:6876  if (resetBaseMin > 0) {... */\n    tag_149:\n        /* \"input/AllowanceModule.sol\":6910:6922  resetTimeMin */\n      dup4\n        /* \"input/AllowanceModule.sol\":6885:6894  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":6885:6907  allowance.resetTimeMin */\n      0x40\n      add\n        /* \"input/AllowanceModule.sol\":6885:6922  allowance.resetTimeMin = resetTimeMin */\n      swap1\n      0xffff\n      and\n      swap1\n      dup2\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":6951:6966  allowanceAmount */\n      dup5\n        /* \"input/AllowanceModule.sol\":6932:6941  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":6932:6948  allowance.amount */\n      0x00\n      add\n        /* \"input/AllowanceModule.sol\":6932:6966  allowance.amount = allowanceAmount */\n      swap1\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":6976:7031  updateAllowance(msg.sender, delegate, token, allowance) */\n      tag_151\n        /* \"input/AllowanceModule.sol\":6992:7002  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":7004:7012  delegate */\n      dup9\n        /* \"input/AllowanceModule.sol\":7014:7019  token */\n      dup9\n        /* \"input/AllowanceModule.sol\":7021:7030  allowance */\n      dup6\n        /* \"input/AllowanceModule.sol\":6976:6991  updateAllowance */\n      tag_111\n        /* \"input/AllowanceModule.sol\":6976:7031  updateAllowance(msg.sender, delegate, token, allowance) */\n      jump\t// in\n    tag_151:\n        /* \"input/AllowanceModule.sol\":7059:7069  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":7046:7118  SetAllowance(msg.sender, delegate, token, allowanceAmount, resetTimeMin) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x49caa04c5e1e168069c09df7f88c07ca87be980b0bf4570ab77fe9aae3ca7eba\n        /* \"input/AllowanceModule.sol\":7071:7079  delegate */\n      dup9\n        /* \"input/AllowanceModule.sol\":7081:7086  token */\n      dup9\n        /* \"input/AllowanceModule.sol\":7088:7103  allowanceAmount */\n      dup9\n        /* \"input/AllowanceModule.sol\":7105:7117  resetTimeMin */\n      dup9\n        /* \"input/AllowanceModule.sol\":7046:7118  SetAllowance(msg.sender, delegate, token, allowanceAmount, resetTimeMin) */\n      mload(0x40)\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/AllowanceModule.sol\":5869:7125  function setAllowance(address delegate, address token, uint96 allowanceAmount, uint16 resetTimeMin, uint32 resetBaseMin)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":7894:8139  function resetAllowance(address delegate, address token) public {... */\n    tag_66:\n        /* \"input/AllowanceModule.sol\":7968:7994  Allowance memory allowance */\n      tag_153\n      tag_95\n      jump\t// in\n    tag_153:\n        /* \"input/AllowanceModule.sol\":7997:8038  getAllowance(msg.sender, delegate, token) */\n      tag_154\n        /* \"input/AllowanceModule.sol\":8010:8020  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":8022:8030  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":8032:8037  token */\n      dup5\n        /* \"input/AllowanceModule.sol\":7997:8009  getAllowance */\n      tag_97\n        /* \"input/AllowanceModule.sol\":7997:8038  getAllowance(msg.sender, delegate, token) */\n      jump\t// in\n    tag_154:\n        /* \"input/AllowanceModule.sol\":7968:8038  Allowance memory allowance = getAllowance(msg.sender, delegate, token) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":8066:8067  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":8048:8057  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":8048:8063  allowance.spent */\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":8048:8067  allowance.spent = 0 */\n      swap1\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":8077:8132  updateAllowance(msg.sender, delegate, token, allowance) */\n      tag_155\n        /* \"input/AllowanceModule.sol\":8093:8103  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":8105:8113  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":8115:8120  token */\n      dup5\n        /* \"input/AllowanceModule.sol\":8122:8131  allowance */\n      dup5\n        /* \"input/AllowanceModule.sol\":8077:8092  updateAllowance */\n      tag_111\n        /* \"input/AllowanceModule.sol\":8077:8132  updateAllowance(msg.sender, delegate, token, allowance) */\n      jump\t// in\n    tag_155:\n        /* \"input/AllowanceModule.sol\":7894:8139  function resetAllowance(address delegate, address token) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":4477:4542  mapping(address => mapping (uint48 => Delegate)) public delegates */\n    tag_69:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":10866:11232  function generateTransferHash(... */\n    tag_72:\n        /* \"input/AllowanceModule.sol\":11087:11094  bytes32 */\n      0x00\n        /* \"input/AllowanceModule.sol\":11123:11224  generateTransferHashData(... */\n      tag_157\n        /* \"input/AllowanceModule.sol\":11161:11165  safe */\n      dup9\n        /* \"input/AllowanceModule.sol\":11167:11172  token */\n      dup9\n        /* \"input/AllowanceModule.sol\":11174:11176  to */\n      dup9\n        /* \"input/AllowanceModule.sol\":11178:11184  amount */\n      dup9\n        /* \"input/AllowanceModule.sol\":11186:11198  paymentToken */\n      dup9\n        /* \"input/AllowanceModule.sol\":11200:11207  payment */\n      dup9\n        /* \"input/AllowanceModule.sol\":11209:11214  nonce */\n      dup9\n        /* \"input/AllowanceModule.sol\":11123:11147  generateTransferHashData */\n      tag_99\n        /* \"input/AllowanceModule.sol\":11123:11224  generateTransferHashData(... */\n      jump\t// in\n    tag_157:\n        /* \"input/AllowanceModule.sol\":11113:11225  keccak256(generateTransferHashData(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/AllowanceModule.sol\":11106:11225  return keccak256(generateTransferHashData(... */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":10866:11232  function generateTransferHash(... */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":14584:15147  function addDelegate(address delegate) public {... */\n    tag_75:\n        /* \"input/AllowanceModule.sol\":14668:14669  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":14648:14670  delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":14648:14656  delegate */\n      dup2\n        /* \"input/AllowanceModule.sol\":14648:14670  delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/AllowanceModule.sol\":14640:14699  require(delegate != address(0), \"Invalid delegate address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c69642064656c656761746520616464726573730000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"input/AllowanceModule.sol\":14709:14721  uint48 index */\n      0x00\n        /* \"input/AllowanceModule.sol\":14731:14739  delegate */\n      dup2\n        /* \"input/AllowanceModule.sol\":14709:14740  uint48 index = uint48(delegate) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":14852:14853  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":14803:14854  delegates[msg.sender][index].delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":14803:14812  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":14803:14824  delegates[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":14813:14823  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":14803:14824  delegates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":14803:14831  delegates[msg.sender][index] */\n      0x00\n        /* \"input/AllowanceModule.sol\":14825:14830  index */\n      dup4\n        /* \"input/AllowanceModule.sol\":14803:14831  delegates[msg.sender][index] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":14803:14840  delegates[msg.sender][index].delegate */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":14803:14854  delegates[msg.sender][index].delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":14800:14863  if(delegates[msg.sender][index].delegate != address(0)) return; */\n      tag_160\n      jumpi\n        /* \"input/AllowanceModule.sol\":14856:14863  return; */\n      pop\n      jump(tag_158)\n        /* \"input/AllowanceModule.sol\":14800:14863  if(delegates[msg.sender][index].delegate != address(0)) return; */\n    tag_160:\n        /* \"input/AllowanceModule.sol\":14872:14889  uint48 startIndex */\n      0x00\n        /* \"input/AllowanceModule.sol\":14892:14906  delegatesStart */\n      0x03\n        /* \"input/AllowanceModule.sol\":14892:14918  delegatesStart[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":14907:14917  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":14892:14918  delegatesStart[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":14872:14918  uint48 startIndex = delegatesStart[msg.sender] */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":14959:14992  Delegate(delegate, 0, startIndex) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"input/AllowanceModule.sol\":14968:14976  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":14959:14992  Delegate(delegate, 0, startIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":14978:14979  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":14959:14992  Delegate(delegate, 0, startIndex) */\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":14981:14991  startIndex */\n      dup3\n        /* \"input/AllowanceModule.sol\":14959:14992  Delegate(delegate, 0, startIndex) */\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"input/AllowanceModule.sol\":14928:14937  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":14928:14949  delegates[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":14938:14948  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":14928:14949  delegates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":14928:14956  delegates[msg.sender][index] */\n      0x00\n        /* \"input/AllowanceModule.sol\":14950:14955  index */\n      dup5\n        /* \"input/AllowanceModule.sol\":14928:14956  delegates[msg.sender][index] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":14928:14992  delegates[msg.sender][index] = Delegate(delegate, 0, startIndex) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x1a)\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":15043:15048  index */\n      dup2\n        /* \"input/AllowanceModule.sol\":15002:15011  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":15002:15023  delegates[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15012:15022  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15002:15023  delegates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15002:15035  delegates[msg.sender][startIndex] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15024:15034  startIndex */\n      dup4\n        /* \"input/AllowanceModule.sol\":15002:15035  delegates[msg.sender][startIndex] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":15002:15040  delegates[msg.sender][startIndex].prev */\n      0x00\n      add\n      0x14\n        /* \"input/AllowanceModule.sol\":15002:15048  delegates[msg.sender][startIndex].prev = index */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/AllowanceModule.sol\":15087:15092  index */\n      dup2\n        /* \"input/AllowanceModule.sol\":15058:15072  delegatesStart */\n      0x03\n        /* \"input/AllowanceModule.sol\":15058:15084  delegatesStart[msg.sender] */\n      0x00\n        /* \"input/AllowanceModule.sol\":15073:15083  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15058:15084  delegatesStart[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"input/AllowanceModule.sol\":15058:15092  delegatesStart[msg.sender] = index */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"input/AllowanceModule.sol\":15119:15129  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":15107:15140  AddDelegate(msg.sender, delegate) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2fd5b26f00131bd8ca0fc556207292b85a6bec241341df82724333227458e630\n        /* \"input/AllowanceModule.sol\":15131:15139  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":15107:15140  AddDelegate(msg.sender, delegate) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"input/AllowanceModule.sol\":14584:15147  function addDelegate(address delegate) public {... */\n      pop\n      pop\n    tag_158:\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":16126:16815  function getDelegates(address safe, uint48 start, uint8 pageSize) public view returns (address[] memory results, uint48 next) {... */\n    tag_78:\n        /* \"input/AllowanceModule.sol\":16213:16237  address[] memory results */\n      0x60\n        /* \"input/AllowanceModule.sol\":16239:16250  uint48 next */\n      0x00\n        /* \"input/AllowanceModule.sol\":16286:16294  pageSize */\n      dup3\n        /* \"input/AllowanceModule.sol\":16272:16295  new address[](pageSize) */\n      0xff\n      and\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"input/AllowanceModule.sol\":16272:16295  new address[](pageSize) */\n      swap1\n      pop\n    tag_162:\n      pop\n        /* \"input/AllowanceModule.sol\":16262:16295  results = new address[](pageSize) */\n      swap2\n      pop\n        /* \"input/AllowanceModule.sol\":16305:16312  uint8 i */\n      0x00\n        /* \"input/AllowanceModule.sol\":16315:16316  0 */\n      dup1\n        /* \"input/AllowanceModule.sol\":16305:16316  uint8 i = 0 */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":16326:16345  uint48 initialIndex */\n      0x00\n        /* \"input/AllowanceModule.sol\":16358:16359  0 */\n      dup1\n        /* \"input/AllowanceModule.sol\":16349:16354  start */\n      dup7\n        /* \"input/AllowanceModule.sol\":16349:16359  start != 0 */\n      0xffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/AllowanceModule.sol\":16348:16391  (start != 0) ? start : delegatesStart[safe] */\n      tag_163\n      jumpi\n        /* \"input/AllowanceModule.sol\":16371:16385  delegatesStart */\n      0x03\n        /* \"input/AllowanceModule.sol\":16371:16391  delegatesStart[safe] */\n      0x00\n        /* \"input/AllowanceModule.sol\":16386:16390  safe */\n      dup9\n        /* \"input/AllowanceModule.sol\":16371:16391  delegatesStart[safe] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":16348:16391  (start != 0) ? start : delegatesStart[safe] */\n      jump(tag_164)\n    tag_163:\n        /* \"input/AllowanceModule.sol\":16363:16368  start */\n      dup6\n        /* \"input/AllowanceModule.sol\":16348:16391  (start != 0) ? start : delegatesStart[safe] */\n    tag_164:\n        /* \"input/AllowanceModule.sol\":16326:16391  uint48 initialIndex = (start != 0) ? start : delegatesStart[safe] */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":16401:16424  Delegate memory current */\n      tag_165\n      tag_121\n      jump\t// in\n    tag_165:\n        /* \"input/AllowanceModule.sol\":16427:16436  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":16427:16442  delegates[safe] */\n      0x00\n        /* \"input/AllowanceModule.sol\":16437:16441  safe */\n      dup10\n        /* \"input/AllowanceModule.sol\":16427:16442  delegates[safe] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":16427:16456  delegates[safe][initialIndex] */\n      0x00\n        /* \"input/AllowanceModule.sol\":16443:16455  initialIndex */\n      dup4\n        /* \"input/AllowanceModule.sol\":16427:16456  delegates[safe][initialIndex] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":16401:16456  Delegate memory current = delegates[safe][initialIndex] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":16466:16644  while(current.delegate != address(0) && i < pageSize) {... */\n    tag_166:\n        /* \"input/AllowanceModule.sol\":16500:16501  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":16472:16502  current.delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":16472:16479  current */\n      dup2\n        /* \"input/AllowanceModule.sol\":16472:16488  current.delegate */\n      0x00\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":16472:16502  current.delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"input/AllowanceModule.sol\":16472:16518  current.delegate != address(0) && i < pageSize */\n      dup1\n      iszero\n      tag_168\n      jumpi\n      pop\n        /* \"input/AllowanceModule.sol\":16510:16518  pageSize */\n      dup6\n        /* \"input/AllowanceModule.sol\":16506:16518  i < pageSize */\n      0xff\n      and\n        /* \"input/AllowanceModule.sol\":16506:16507  i */\n      dup4\n        /* \"input/AllowanceModule.sol\":16506:16518  i < pageSize */\n      0xff\n      and\n      lt\n        /* \"input/AllowanceModule.sol\":16472:16518  current.delegate != address(0) && i < pageSize */\n    tag_168:\n        /* \"input/AllowanceModule.sol\":16466:16644  while(current.delegate != address(0) && i < pageSize) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"input/AllowanceModule.sol\":16547:16554  current */\n      dup1\n        /* \"input/AllowanceModule.sol\":16547:16563  current.delegate */\n      0x00\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":16534:16541  results */\n      dup6\n        /* \"input/AllowanceModule.sol\":16542:16543  i */\n      dup5\n        /* \"input/AllowanceModule.sol\":16534:16544  results[i] */\n      0xff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_169\n      jumpi\n      invalid\n    tag_169:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"input/AllowanceModule.sol\":16534:16563  results[i] = current.delegate */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":16577:16580  i++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":16604:16613  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":16604:16619  delegates[safe] */\n      0x00\n        /* \"input/AllowanceModule.sol\":16614:16618  safe */\n      dup10\n        /* \"input/AllowanceModule.sol\":16604:16619  delegates[safe] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":16604:16633  delegates[safe][current.next] */\n      0x00\n        /* \"input/AllowanceModule.sol\":16620:16627  current */\n      dup3\n        /* \"input/AllowanceModule.sol\":16620:16632  current.next */\n      0x40\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":16604:16633  delegates[safe][current.next] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":16594:16633  current = delegates[safe][current.next] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":16466:16644  while(current.delegate != address(0) && i < pageSize) {... */\n      jump(tag_166)\n    tag_167:\n        /* \"input/AllowanceModule.sol\":16667:16674  current */\n      dup1\n        /* \"input/AllowanceModule.sol\":16667:16683  current.delegate */\n      0x00\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":16653:16684  next = uint48(current.delegate) */\n      swap4\n      pop\n        /* \"input/AllowanceModule.sol\":16797:16798  i */\n      dup3\n        /* \"input/AllowanceModule.sol\":16788:16795  results */\n      dup6\n        /* \"input/AllowanceModule.sol\":16781:16799  mstore(results, i) */\n      mstore\n        /* \"input/AllowanceModule.sol\":16767:16809  {... */\n      pop\n      pop\n      pop\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":4407:4471  mapping(address => mapping (address => address[])) public tokens */\n    tag_84:\n      mstore(0x20, 0x01)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":4602:4632  bytes32 public domainSeparator */\n    tag_86:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":3799:3839  string public constant VERSION = \"0.1.0\" */\n    tag_88:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x302e312e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":7131:7712  function getAllowance(address safe, address delegate, address token) private view returns (Allowance memory allowance) {... */\n    tag_97:\n        /* \"input/AllowanceModule.sol\":7222:7248  Allowance memory allowance */\n      tag_172\n      tag_95\n      jump\t// in\n    tag_172:\n        /* \"input/AllowanceModule.sol\":7272:7282  allowances */\n      0x00\n        /* \"input/AllowanceModule.sol\":7272:7288  allowances[safe] */\n      dup1\n        /* \"input/AllowanceModule.sol\":7283:7287  safe */\n      dup6\n        /* \"input/AllowanceModule.sol\":7272:7288  allowances[safe] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":7272:7298  allowances[safe][delegate] */\n      0x00\n        /* \"input/AllowanceModule.sol\":7289:7297  delegate */\n      dup5\n        /* \"input/AllowanceModule.sol\":7272:7298  allowances[safe][delegate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":7272:7305  allowances[safe][delegate][token] */\n      0x00\n        /* \"input/AllowanceModule.sol\":7299:7304  token */\n      dup4\n        /* \"input/AllowanceModule.sol\":7272:7305  allowances[safe][delegate][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":7260:7305  allowance = allowances[safe][delegate][token] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":7377:7394  uint32 currentMin */\n      0x00\n        /* \"input/AllowanceModule.sol\":7410:7412  60 */\n      0x3c\n        /* \"input/AllowanceModule.sol\":7404:7407  now */\n      timestamp\n        /* \"input/AllowanceModule.sol\":7404:7412  now / 60 */\n      dup2\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      div\n        /* \"input/AllowanceModule.sol\":7377:7413  uint32 currentMin = uint32(now / 60) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":7452:7453  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":7427:7436  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":7427:7449  allowance.resetTimeMin */\n      0x40\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":7427:7453  allowance.resetTimeMin > 0 */\n      0xffff\n      and\n      gt\n        /* \"input/AllowanceModule.sol\":7427:7518  allowance.resetTimeMin > 0 && allowance.lastResetMin <= currentMin - allowance.resetTimeMin */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"input/AllowanceModule.sol\":7496:7505  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":7496:7518  allowance.resetTimeMin */\n      0x40\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":7483:7518  currentMin - allowance.resetTimeMin */\n      0xffff\n      and\n        /* \"input/AllowanceModule.sol\":7483:7493  currentMin */\n      dup2\n        /* \"input/AllowanceModule.sol\":7483:7518  currentMin - allowance.resetTimeMin */\n      sub\n        /* \"input/AllowanceModule.sol\":7457:7518  allowance.lastResetMin <= currentMin - allowance.resetTimeMin */\n      0xffffffff\n      and\n        /* \"input/AllowanceModule.sol\":7457:7466  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":7457:7479  allowance.lastResetMin */\n      0x60\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":7457:7518  allowance.lastResetMin <= currentMin - allowance.resetTimeMin */\n      0xffffffff\n      and\n      gt\n      iszero\n        /* \"input/AllowanceModule.sol\":7427:7518  allowance.resetTimeMin > 0 && allowance.lastResetMin <= currentMin - allowance.resetTimeMin */\n    tag_175:\n        /* \"input/AllowanceModule.sol\":7423:7680  if (allowance.resetTimeMin > 0 && allowance.lastResetMin <= currentMin - allowance.resetTimeMin) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"input/AllowanceModule.sol\":7552:7553  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":7534:7543  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":7534:7549  allowance.spent */\n      0x20\n      add\n        /* \"input/AllowanceModule.sol\":7534:7553  allowance.spent = 0 */\n      swap1\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":7646:7655  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":7646:7668  allowance.resetTimeMin */\n      0x40\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":7606:7668  (currentMin - allowance.lastResetMin) % allowance.resetTimeMin */\n      0xffff\n      and\n        /* \"input/AllowanceModule.sol\":7620:7629  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":7620:7642  allowance.lastResetMin */\n      0x60\n      add\n      mload\n        /* \"input/AllowanceModule.sol\":7607:7617  currentMin */\n      dup3\n        /* \"input/AllowanceModule.sol\":7607:7642  currentMin - allowance.lastResetMin */\n      sub\n        /* \"input/AllowanceModule.sol\":7606:7668  (currentMin - allowance.lastResetMin) % allowance.resetTimeMin */\n      0xffffffff\n      and\n      dup2\n      tag_177\n      jumpi\n      invalid\n    tag_177:\n      mod\n        /* \"input/AllowanceModule.sol\":7592:7602  currentMin */\n      dup2\n        /* \"input/AllowanceModule.sol\":7592:7669  currentMin - ((currentMin - allowance.lastResetMin) % allowance.resetTimeMin) */\n      sub\n        /* \"input/AllowanceModule.sol\":7567:7576  allowance */\n      dup3\n        /* \"input/AllowanceModule.sol\":7567:7589  allowance.lastResetMin */\n      0x60\n      add\n        /* \"input/AllowanceModule.sol\":7567:7669  allowance.lastResetMin = currentMin - ((currentMin - allowance.lastResetMin) % allowance.resetTimeMin) */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":7423:7680  if (allowance.resetTimeMin > 0 && allowance.lastResetMin <= currentMin - allowance.resetTimeMin) {... */\n    tag_176:\n        /* \"input/AllowanceModule.sol\":7696:7705  allowance */\n      dup2\n        /* \"input/AllowanceModule.sol\":7689:7705  return allowance */\n      swap2\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":7131:7712  function getAllowance(address safe, address delegate, address token) private view returns (Allowance memory allowance) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":10365:10860  function generateTransferHashData(... */\n    tag_99:\n        /* \"input/AllowanceModule.sol\":10591:10603  bytes memory */\n      0x60\n        /* \"input/AllowanceModule.sol\":10615:10635  bytes32 transferHash */\n      0x00\n        /* \"input/AllowanceModule.sol\":4134:4269  keccak256(... */\n      mload(0x40)\n      dup1\n      dup1\n      data_80b006280932094e7cc965863eb5118dc07e5d272c6670c4a7c87299e04fceeb\n      0x6c\n      swap2\n      codecopy\n      0x6c\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"input/AllowanceModule.sol\":10701:10705  safe */\n      dup10\n        /* \"input/AllowanceModule.sol\":10707:10712  token */\n      dup10\n        /* \"input/AllowanceModule.sol\":10714:10716  to */\n      dup10\n        /* \"input/AllowanceModule.sol\":10718:10724  amount */\n      dup10\n        /* \"input/AllowanceModule.sol\":10726:10738  paymentToken */\n      dup10\n        /* \"input/AllowanceModule.sol\":10740:10747  payment */\n      dup10\n        /* \"input/AllowanceModule.sol\":10749:10754  nonce */\n      dup10\n        /* \"input/AllowanceModule.sol\":10661:10755  abi.encode(ALLOWANCE_TRANSFER_TYPEHASH, safe, token, to, amount, paymentToken, payment, nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup10\n      dup2\n      mstore\n      0x20\n      add\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/AllowanceModule.sol\":10661:10755  abi.encode(ALLOWANCE_TRANSFER_TYPEHASH, safe, token, to, amount, paymentToken, payment, nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"input/AllowanceModule.sol\":10638:10765  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/AllowanceModule.sol\":10615:10765  bytes32 transferHash = keccak256(... */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":10804:10808  0x19 */\n      0x19\n        /* \"input/AllowanceModule.sol\":10799:10809  byte(0x19) */\n      0xf8\n      shl\n        /* \"input/AllowanceModule.sol\":10816:10820  0x01 */\n      0x01\n        /* \"input/AllowanceModule.sol\":10811:10821  byte(0x01) */\n      0xf8\n      shl\n        /* \"input/AllowanceModule.sol\":10823:10838  domainSeparator */\n      sload(0x04)\n        /* \"input/AllowanceModule.sol\":10840:10852  transferHash */\n      dup4\n        /* \"input/AllowanceModule.sol\":10782:10853  abi.encodePacked(byte(0x19), byte(0x01), domainSeparator, transferHash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x01\n      add\n      dup5\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x01\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/AllowanceModule.sol\":10782:10853  abi.encodePacked(byte(0x19), byte(0x01), domainSeparator, transferHash) */\n      swap1\n      0x40\n      mstore\n        /* \"input/AllowanceModule.sol\":10775:10853  return abi.encodePacked(byte(0x19), byte(0x01), domainSeparator, transferHash) */\n      swap2\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":10365:10860  function generateTransferHashData(... */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":7718:7888  function updateAllowance(address safe, address delegate, address token, Allowance memory allowance) private {... */\n    tag_111:\n        /* \"input/AllowanceModule.sol\":7872:7881  allowance */\n      dup1\n        /* \"input/AllowanceModule.sol\":7836:7846  allowances */\n      0x00\n        /* \"input/AllowanceModule.sol\":7836:7852  allowances[safe] */\n      dup1\n        /* \"input/AllowanceModule.sol\":7847:7851  safe */\n      dup7\n        /* \"input/AllowanceModule.sol\":7836:7852  allowances[safe] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":7836:7862  allowances[safe][delegate] */\n      0x00\n        /* \"input/AllowanceModule.sol\":7853:7861  delegate */\n      dup6\n        /* \"input/AllowanceModule.sol\":7836:7862  allowances[safe][delegate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":7836:7869  allowances[safe][delegate][token] */\n      0x00\n        /* \"input/AllowanceModule.sol\":7863:7868  token */\n      dup5\n        /* \"input/AllowanceModule.sol\":7836:7869  allowances[safe][delegate][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":7836:7881  allowances[safe][delegate][token] = allowance */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x0c)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x18)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x1a)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x1e)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":7718:7888  function updateAllowance(address safe, address delegate, address token, Allowance memory allowance) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":11238:11682  function checkSignature(address expectedDelegate, bytes memory signature, bytes memory transferHashData, GnosisSafe safe) private {... */\n    tag_114:\n        /* \"input/AllowanceModule.sol\":11378:11392  address signer */\n      0x00\n        /* \"input/AllowanceModule.sol\":11395:11440  recoverSignature(signature, transferHashData) */\n      tag_181\n        /* \"input/AllowanceModule.sol\":11412:11421  signature */\n      dup5\n        /* \"input/AllowanceModule.sol\":11423:11439  transferHashData */\n      dup5\n        /* \"input/AllowanceModule.sol\":11395:11411  recoverSignature */\n      tag_182\n        /* \"input/AllowanceModule.sol\":11395:11440  recoverSignature(signature, transferHashData) */\n      jump\t// in\n    tag_181:\n        /* \"input/AllowanceModule.sol\":11378:11440  address signer = recoverSignature(signature, transferHashData) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":11491:11497  signer */\n      dup1\n        /* \"input/AllowanceModule.sol\":11471:11497  expectedDelegate == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":11471:11487  expectedDelegate */\n      dup6\n        /* \"input/AllowanceModule.sol\":11471:11497  expectedDelegate == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":11471:11560  expectedDelegate == signer && delegates[address(safe)][uint48(signer)].delegate == signer */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"input/AllowanceModule.sol\":11554:11560  signer */\n      dup1\n        /* \"input/AllowanceModule.sol\":11501:11560  delegates[address(safe)][uint48(signer)].delegate == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":11501:11510  delegates */\n      0x02\n        /* \"input/AllowanceModule.sol\":11501:11525  delegates[address(safe)] */\n      0x00\n        /* \"input/AllowanceModule.sol\":11519:11523  safe */\n      dup5\n        /* \"input/AllowanceModule.sol\":11501:11525  delegates[address(safe)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":11501:11541  delegates[address(safe)][uint48(signer)] */\n      0x00\n        /* \"input/AllowanceModule.sol\":11533:11539  signer */\n      dup4\n        /* \"input/AllowanceModule.sol\":11501:11541  delegates[address(safe)][uint48(signer)] */\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"input/AllowanceModule.sol\":11501:11550  delegates[address(safe)][uint48(signer)].delegate */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":11501:11560  delegates[address(safe)][uint48(signer)].delegate == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":11471:11560  expectedDelegate == signer && delegates[address(safe)][uint48(signer)].delegate == signer */\n    tag_183:\n        /* \"input/AllowanceModule.sol\":11450:11675  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x59\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_967a409fd152609403ac7b3349d7ced54d05d2ee8664844edf017668d343240b\n      0x59\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"input/AllowanceModule.sol\":11238:11682  function checkSignature(address expectedDelegate, bytes memory signature, bytes memory transferHashData, GnosisSafe safe) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":13434:14003  function transfer(GnosisSafe safe, address token, address payable to, uint96 amount) private {... */\n    tag_117:\n        /* \"input/AllowanceModule.sol\":13558:13559  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":13541:13560  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"input/AllowanceModule.sol\":13541:13546  token */\n      dup4\n        /* \"input/AllowanceModule.sol\":13541:13560  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":13537:13997  if (token == address(0)) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"input/AllowanceModule.sol\":13641:13645  safe */\n      dup4\n        /* \"input/AllowanceModule.sol\":13641:13671  safe.execTransactionFromModule */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x468721a7\n        /* \"input/AllowanceModule.sol\":13672:13674  to */\n      dup4\n        /* \"input/AllowanceModule.sol\":13676:13682  amount */\n      dup4\n        /* \"input/AllowanceModule.sol\":13688:13707  Enum.Operation.Call */\n      0x00\n        /* \"input/AllowanceModule.sol\":13641:13708  safe.execTransactionFromModule(to, amount, \"\", Enum.Operation.Call) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_188\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_188:\n        /* \"input/AllowanceModule.sol\":13641:13708  safe.execTransactionFromModule(to, amount, \"\", Enum.Operation.Call) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_189\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_189:\n        /* \"input/AllowanceModule.sol\":13641:13708  safe.execTransactionFromModule(to, amount, \"\", Enum.Operation.Call) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_190\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_190:\n        /* \"input/AllowanceModule.sol\":13641:13708  safe.execTransactionFromModule(to, amount, \"\", Enum.Operation.Call) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":13633:13745  require(safe.execTransactionFromModule(to, amount, \"\", Enum.Operation.Call), \"Could not execute ether transfer\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f756c64206e6f742065786563757465206574686572207472616e73666572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"input/AllowanceModule.sol\":13537:13997  if (token == address(0)) {... */\n      jump(tag_192)\n    tag_186:\n        /* \"input/AllowanceModule.sol\":13776:13793  bytes memory data */\n      0x60\n        /* \"input/AllowanceModule.sol\":13849:13851  to */\n      dup3\n        /* \"input/AllowanceModule.sol\":13853:13859  amount */\n      dup3\n        /* \"input/AllowanceModule.sol\":13796:13860  abi.encodeWithSignature(\"transfer(address,uint256)\", to, amount) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/AllowanceModule.sol\":13796:13860  abi.encodeWithSignature(\"transfer(address,uint256)\", to, amount) */\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xa9059cbb00000000000000000000000000000000000000000000000000000000)\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":13796:13860  abi.encodeWithSignature(\"transfer(address,uint256)\", to, amount) */\n      pop\n        /* \"input/AllowanceModule.sol\":13776:13860  bytes memory data = abi.encodeWithSignature(\"transfer(address,uint256)\", to, amount) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":13882:13886  safe */\n      dup5\n        /* \"input/AllowanceModule.sol\":13882:13912  safe.execTransactionFromModule */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x468721a7\n        /* \"input/AllowanceModule.sol\":13913:13918  token */\n      dup6\n        /* \"input/AllowanceModule.sol\":13920:13921  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":13923:13927  data */\n      dup5\n        /* \"input/AllowanceModule.sol\":13929:13948  Enum.Operation.Call */\n      0x00\n        /* \"input/AllowanceModule.sol\":13882:13949  safe.execTransactionFromModule(token, 0, data, Enum.Operation.Call) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_193\n      jumpi\n      invalid\n    tag_193:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_194:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_196\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_194)\n    tag_196:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":13882:13949  safe.execTransactionFromModule(token, 0, data, Enum.Operation.Call) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_197\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_197:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_198\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_198:\n        /* \"input/AllowanceModule.sol\":13882:13949  safe.execTransactionFromModule(token, 0, data, Enum.Operation.Call) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_199:\n        /* \"input/AllowanceModule.sol\":13882:13949  safe.execTransactionFromModule(token, 0, data, Enum.Operation.Call) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_200:\n        /* \"input/AllowanceModule.sol\":13882:13949  safe.execTransactionFromModule(token, 0, data, Enum.Operation.Call) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":13874:13986  require(safe.execTransactionFromModule(token, 0, data, Enum.Operation.Call), \"Could not execute token transfer\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f756c64206e6f74206578656375746520746f6b656e207472616e73666572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"input/AllowanceModule.sol\":13537:13997  if (token == address(0)) {... */\n      pop\n    tag_192:\n        /* \"input/AllowanceModule.sol\":13434:14003  function transfer(GnosisSafe safe, address token, address payable to, uint96 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":11688:13428  function recoverSignature(bytes memory signature, bytes memory transferHashData) private view returns (address owner) {... */\n    tag_182:\n        /* \"input/AllowanceModule.sol\":11791:11804  address owner */\n      0x00\n        /* \"input/AllowanceModule.sol\":11907:11908  0 */\n      dup1\n        /* \"input/AllowanceModule.sol\":11887:11896  signature */\n      dup4\n        /* \"input/AllowanceModule.sol\":11887:11903  signature.length */\n      mload\n        /* \"input/AllowanceModule.sol\":11887:11908  signature.length == 0 */\n      eq\n        /* \"input/AllowanceModule.sol\":11883:11927  if (signature.length == 0) return msg.sender */\n      iszero\n      tag_203\n      jumpi\n        /* \"input/AllowanceModule.sol\":11917:11927  msg.sender */\n      caller\n        /* \"input/AllowanceModule.sol\":11910:11927  return msg.sender */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"input/AllowanceModule.sol\":11883:11927  if (signature.length == 0) return msg.sender */\n    tag_203:\n        /* \"input/AllowanceModule.sol\":12032:12034  65 */\n      0x41\n        /* \"input/AllowanceModule.sol\":12012:12021  signature */\n      dup4\n        /* \"input/AllowanceModule.sol\":12012:12028  signature.length */\n      mload\n        /* \"input/AllowanceModule.sol\":12012:12034  signature.length >= 65 */\n      lt\n      iszero\n        /* \"input/AllowanceModule.sol\":12004:12062  require(signature.length >= 65, \"signatures.length >= 65\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7369676e6174757265732e6c656e677468203e3d203635000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"input/AllowanceModule.sol\":12072:12079  uint8 v */\n      0x00\n        /* \"input/AllowanceModule.sol\":12089:12098  bytes32 r */\n      dup1\n        /* \"input/AllowanceModule.sol\":12108:12117  bytes32 s */\n      0x00\n        /* \"input/AllowanceModule.sol\":12139:12167  signatureSplit(signature, 0) */\n      tag_205\n        /* \"input/AllowanceModule.sol\":12154:12163  signature */\n      dup7\n        /* \"input/AllowanceModule.sol\":12165:12166  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":12139:12153  signatureSplit */\n      tag_206\n        /* \"input/AllowanceModule.sol\":12139:12167  signatureSplit(signature, 0) */\n      jump\t// in\n    tag_205:\n        /* \"input/AllowanceModule.sol\":12127:12167  (v, r, s) = signatureSplit(signature, 0) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      dup3\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":12239:12240  0 */\n      0x00\n        /* \"input/AllowanceModule.sol\":12234:12235  v */\n      dup4\n        /* \"input/AllowanceModule.sol\":12234:12240  v == 0 */\n      0xff\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":12230:13422  if (v == 0) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"input/AllowanceModule.sol\":12375:12376  r */\n      dup2\n        /* \"input/AllowanceModule.sol\":12367:12377  uint256(r) */\n      0x00\n      shr\n        /* \"input/AllowanceModule.sol\":12351:12378  owner = address(uint256(r)) */\n      swap4\n      pop\n        /* \"input/AllowanceModule.sol\":12392:12422  bytes memory contractSignature */\n      0x60\n        /* \"input/AllowanceModule.sol\":12710:12714  0x20 */\n      0x20\n        /* \"input/AllowanceModule.sol\":12706:12707  s */\n      dup3\n        /* \"input/AllowanceModule.sol\":12695:12704  signature */\n      dup9\n        /* \"input/AllowanceModule.sol\":12691:12708  add(signature, s) */\n      add\n        /* \"input/AllowanceModule.sol\":12687:12715  add(add(signature, s), 0x20) */\n      add\n        /* \"input/AllowanceModule.sol\":12666:12715  contractSignature := add(add(signature, s), 0x20) */\n      swap1\n      pop\n        /* \"input/AllowanceModule.sol\":2465:2475  0x20c13b0b */\n      0x20c13b0b\n        /* \"input/AllowanceModule.sol\":12851:12870  EIP1271_MAGIC_VALUE */\n      0xe0\n      shl\n        /* \"input/AllowanceModule.sol\":12767:12870  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) == EIP1271_MAGIC_VALUE */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"input/AllowanceModule.sol\":12787:12792  owner */\n      dup6\n        /* \"input/AllowanceModule.sol\":12767:12810  ISignatureValidator(owner).isValidSignature */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x20c13b0b\n        /* \"input/AllowanceModule.sol\":12811:12827  transferHashData */\n      dup9\n        /* \"input/AllowanceModule.sol\":12829:12846  contractSignature */\n      dup5\n        /* \"input/AllowanceModule.sol\":12767:12847  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_208:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_208)\n    tag_210:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":12767:12847  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_211:\n      pop\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_212:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_214\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_212)\n    tag_214:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"input/AllowanceModule.sol\":12767:12847  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_215:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_216\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_216:\n        /* \"input/AllowanceModule.sol\":12767:12847  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_217\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_217:\n        /* \"input/AllowanceModule.sol\":12767:12847  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_218:\n        /* \"input/AllowanceModule.sol\":12767:12847  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"input/AllowanceModule.sol\":12767:12870  ISignatureValidator(owner).isValidSignature(transferHashData, contractSignature) == EIP1271_MAGIC_VALUE */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"input/AllowanceModule.sol\":12742:12941  require(... */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_28b765f195c3cd598e06ecb11ef8b4894757ebf4babad4a035bcaf2f5d0e18e5\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"input/AllowanceModule.sol\":12230:13422  if (v == 0) {... */\n      pop\n      jump(tag_220)\n    tag_207:\n        /* \"input/AllowanceModule.sol\":12966:12968  30 */\n      0x1e\n        /* \"input/AllowanceModule.sol\":12962:12963  v */\n      dup4\n        /* \"input/AllowanceModule.sol\":12962:12968  v > 30 */\n      0xff\n      and\n      gt\n        /* \"input/AllowanceModule.sol\":12958:13422  if (v > 30) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"input/AllowanceModule.sol\":13140:13256  ecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData))), v - 4, r, s) */\n      0x01\n        /* \"input/AllowanceModule.sol\":13223:13239  transferHashData */\n      dup6\n        /* \"input/AllowanceModule.sol\":13213:13240  keccak256(transferHashData) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/AllowanceModule.sol\":13160:13241  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n      dup2\n      mstore\n      pop\n      0x1c\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"input/AllowanceModule.sol\":13160:13241  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData)) */\n      swap1\n      0x40\n      mstore\n        /* \"input/AllowanceModule.sol\":13150:13242  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/AllowanceModule.sol\":13248:13249  4 */\n      0x04\n        /* \"input/AllowanceModule.sol\":13244:13245  v */\n      dup6\n        /* \"input/AllowanceModule.sol\":13244:13249  v - 4 */\n      sub\n        /* \"input/AllowanceModule.sol\":13251:13252  r */\n      dup5\n        /* \"input/AllowanceModule.sol\":13254:13255  s */\n      dup5\n        /* \"input/AllowanceModule.sol\":13140:13256  ecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData))), v - 4, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_222\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_222:\n        /* \"input/AllowanceModule.sol\":13140:13256  ecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData))), v - 4, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"input/AllowanceModule.sol\":13132:13256  owner = ecrecover(keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(transferHashData))), v - 4, r, s) */\n      swap4\n      pop\n        /* \"input/AllowanceModule.sol\":12958:13422  if (v > 30) {... */\n      jump(tag_223)\n    tag_221:\n        /* \"input/AllowanceModule.sol\":13364:13411  ecrecover(keccak256(transferHashData), v, r, s) */\n      0x01\n        /* \"input/AllowanceModule.sol\":13384:13400  transferHashData */\n      dup6\n        /* \"input/AllowanceModule.sol\":13374:13401  keccak256(transferHashData) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"input/AllowanceModule.sol\":13403:13404  v */\n      dup5\n        /* \"input/AllowanceModule.sol\":13406:13407  r */\n      dup5\n        /* \"input/AllowanceModule.sol\":13409:13410  s */\n      dup5\n        /* \"input/AllowanceModule.sol\":13364:13411  ecrecover(keccak256(transferHashData), v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_224\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_224:\n        /* \"input/AllowanceModule.sol\":13364:13411  ecrecover(keccak256(transferHashData), v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"input/AllowanceModule.sol\":13356:13411  owner = ecrecover(keccak256(transferHashData), v, r, s) */\n      swap4\n      pop\n        /* \"input/AllowanceModule.sol\":12958:13422  if (v > 30) {... */\n    tag_223:\n        /* \"input/AllowanceModule.sol\":12230:13422  if (v == 0) {... */\n    tag_220:\n        /* \"input/AllowanceModule.sol\":11688:13428  function recoverSignature(bytes memory signature, bytes memory transferHashData) private view returns (address owner) {... */\n      pop\n      pop\n      pop\n    tag_202:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":1392:2313  function signatureSplit(bytes memory signatures, uint256 pos)... */\n    tag_206:\n        /* \"input/AllowanceModule.sol\":1501:1508  uint8 v */\n      0x00\n        /* \"input/AllowanceModule.sol\":1510:1519  bytes32 r */\n      dup1\n        /* \"input/AllowanceModule.sol\":1521:1530  bytes32 s */\n      0x00\n        /* \"input/AllowanceModule.sol\":1821:1824  pos */\n      dup4\n        /* \"input/AllowanceModule.sol\":1815:1819  0x41 */\n      0x41\n        /* \"input/AllowanceModule.sol\":1811:1825  mul(0x41, pos) */\n      mul\n        /* \"input/AllowanceModule.sol\":1883:1887  0x20 */\n      0x20\n        /* \"input/AllowanceModule.sol\":1869:1881  signaturePos */\n      dup2\n        /* \"input/AllowanceModule.sol\":1865:1888  add(signaturePos, 0x20) */\n      add\n        /* \"input/AllowanceModule.sol\":1853:1863  signatures */\n      dup7\n        /* \"input/AllowanceModule.sol\":1849:1889  add(signatures, add(signaturePos, 0x20)) */\n      add\n        /* \"input/AllowanceModule.sol\":1843:1890  mload(add(signatures, add(signaturePos, 0x20))) */\n      mload\n        /* \"input/AllowanceModule.sol\":1838:1890  r := mload(add(signatures, add(signaturePos, 0x20))) */\n      swap3\n      pop\n        /* \"input/AllowanceModule.sol\":1948:1952  0x40 */\n      0x40\n        /* \"input/AllowanceModule.sol\":1934:1946  signaturePos */\n      dup2\n        /* \"input/AllowanceModule.sol\":1930:1953  add(signaturePos, 0x40) */\n      add\n        /* \"input/AllowanceModule.sol\":1918:1928  signatures */\n      dup7\n        /* \"input/AllowanceModule.sol\":1914:1954  add(signatures, add(signaturePos, 0x40)) */\n      add\n        /* \"input/AllowanceModule.sol\":1908:1955  mload(add(signatures, add(signaturePos, 0x40))) */\n      mload\n        /* \"input/AllowanceModule.sol\":1903:1955  s := mload(add(signatures, add(signaturePos, 0x40))) */\n      swap2\n      pop\n        /* \"input/AllowanceModule.sol\":2292:2296  0xff */\n      0xff\n        /* \"input/AllowanceModule.sol\":2283:2287  0x41 */\n      0x41\n        /* \"input/AllowanceModule.sol\":2269:2281  signaturePos */\n      dup3\n        /* \"input/AllowanceModule.sol\":2265:2288  add(signaturePos, 0x41) */\n      add\n        /* \"input/AllowanceModule.sol\":2253:2263  signatures */\n      dup8\n        /* \"input/AllowanceModule.sol\":2249:2289  add(signatures, add(signaturePos, 0x41)) */\n      add\n        /* \"input/AllowanceModule.sol\":2243:2290  mload(add(signatures, add(signaturePos, 0x41))) */\n      mload\n        /* \"input/AllowanceModule.sol\":2239:2297  and(mload(add(signatures, add(signaturePos, 0x41))), 0xff) */\n      and\n        /* \"input/AllowanceModule.sol\":2234:2297  v := and(mload(add(signatures, add(signaturePos, 0x41))), 0xff) */\n      swap4\n      pop\n        /* \"input/AllowanceModule.sol\":1777:2307  {... */\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"input/AllowanceModule.sol\":3663:16817  contract AllowanceModule is SignatureDecoder, ISignatureValidatorConstants {... */\n    tag_95:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_121:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_135:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"input/AllowanceModule.sol\":3663:16817  contract AllowanceModule is SignatureDecoder, ISignatureValidatorConstants {... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_28b765f195c3cd598e06ecb11ef8b4894757ebf4babad4a035bcaf2f5d0e18e5 436f756c64206e6f742076616c6964617465204549502d31323731207369676e6174757265\n    data_58537fa1960fbebccc117b6218b0af08a9f148039299593ea287e665dd534bb1 64656c6567617465735b6d73672e73656e6465725d5b75696e7434382864656c6567617465295d2e64656c6567617465203d3d2064656c6567617465\n    data_80b006280932094e7cc965863eb5118dc07e5d272c6670c4a7c87299e04fceeb 416c6c6f77616e63655472616e73666572286164647265737320736166652c6164647265737320746f6b656e2c75696e74393620616d6f756e742c61646472657373207061796d656e74546f6b656e2c75696e743936207061796d656e742c75696e743136206e6f6e636529\n    data_967a409fd152609403ac7b3349d7ced54d05d2ee8664844edf017668d343240b 657870656374656444656c6567617465203d3d207369676e65722026262064656c6567617465735b616464726573732873616665295d5b75696e743438287369676e6572295d2e64656c6567617465203d3d207369676e6572\n    data_a7359a8519961096cf8fb65715f77dbc4de2755aabf21e3445e245a34ee622da 6e65775370656e74203e20616c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d20616c6c6f77616e63652e616d6f756e74\n    data_b549d52c5706645679000944ae1bcaec935d0b8c387f4240a09789be7dc8c0d4 6e65775370656e74203e207061796d656e74416c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d207061796d656e74416c6c6f77616e63652e616d6f756e74\n\n    auxdata: 0xa265627a7a7230582089e6c81bdfa4bb80a5f6bd6cb073fdcb4fb64d564b02765f1e5db7703dda824564736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x35AFF83D86937D35B32E04F0DDC6FF469290EEF2F1B692D8A815C89404D4749 PUSH1 0x0 SHL ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x37C4 DUP1 PUSH2 0xA4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEAEB388 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE71BDF41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE71BDF41 EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0xEB37ABE0 EQ PUSH2 0x98F JUMPI DUP1 PUSH4 0xF56E81FA EQ PUSH2 0xA5E JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0xB0C JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0xB2A JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xBEAEB388 EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xC19BF50E EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0xCE60C692 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xD626E043 EQ PUSH2 0x855 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x67E7646F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x67E7646F EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8D0E8E1D EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x94B31FBD EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xB713C9D4 EQ PUSH2 0x58B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1DB61B54 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x310A3BB1 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x43ABF5FE EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4515641A EQ PUSH2 0x1BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xC15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1022 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x434 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x419 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4DA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x510 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x550 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x535 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x171A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B71 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x935 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA2E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xACA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x246E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB14 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB32 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB72 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB57 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB9F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x35AFF83D86937D35B32E04F0DDC6FF469290EEF2F1B692D8A815C89404D4749 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x3649 PUSH1 0x6C SWAP2 CODECOPY PUSH1 0x6C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0xC1D PUSH2 0x3525 JUMP JUMPDEST PUSH2 0xC28 DUP10 DUP5 DUP11 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0xC3F DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x2766 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0x80 ADD MLOAD ADD DUP3 PUSH1 0x80 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP8 DUP4 PUSH1 0x20 ADD MLOAD ADD SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xCB6 JUMPI POP DUP3 PUSH1 0x0 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x370E PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xD52 PUSH2 0x3525 JUMP JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD95 JUMPI PUSH2 0xD90 DUP13 DUP8 DUP11 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP DUP7 DUP2 PUSH1 0x20 ADD MLOAD ADD SWAP2 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xDF1 JUMPI POP DUP1 PUSH1 0x0 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3748 PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAE JUMPI PUSH2 0xEAD DUP13 DUP8 DUP11 DUP5 PUSH2 0x29AB JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH2 0xEBC DUP12 DUP7 DUP13 DUP7 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xEC8 DUP6 DUP6 DUP5 DUP15 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xEEC JUMPI PUSH2 0xEEB DUP12 DUP9 ORIGIN DUP10 PUSH2 0x2C9B JUMP JUMPDEST JUMPDEST PUSH2 0xEF8 DUP12 DUP12 DUP12 DUP12 PUSH2 0x2C9B JUMP JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA11CCA2C2027E28AB0046AAB4D4040F59D8B06E819CCD974C1E53E86AA814C19 DUP7 DUP13 DUP13 DUP13 PUSH1 0x1 DUP10 PUSH1 0x80 ADD MLOAD SUB PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x102A PUSH2 0x357E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1184 JUMPI POP PUSH2 0x149B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1301 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1224 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x1259 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x1264 CALLER DUP8 DUP5 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x12F2 CALLER DUP8 DUP5 DUP5 PUSH2 0x29AB JUMP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x120A JUMP JUMPDEST POP DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCC2D936DED24D2153D2760581A7F0DCB23EC71190C9726B3584CDD700214D4 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x159C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1552 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B1 PUSH2 0x35C5 JUMP JUMPDEST PUSH2 0x15B9 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x15C4 DUP6 DUP6 DUP6 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416C6C6F77616E6365204D6F64756C6500000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x360D PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1829 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x1834 CALLER DUP8 DUP8 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO PUSH2 0x193D JUMPI PUSH1 0x1 DUP2 PUSH1 0x80 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3C TIMESTAMP DUP2 PUSH2 0x1949 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1A11 JUMPI DUP1 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x19DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7265736574426173654D696E203C3D2063757272656E744D696E000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0xFFFF AND DUP4 DUP3 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x19F2 JUMPI INVALID JUMPDEST MOD DUP2 SUB DUP3 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1A3D JUMPI DUP1 DUP3 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST JUMPDEST DUP4 DUP3 PUSH1 0x40 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP DUP5 DUP3 PUSH1 0x0 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1A86 CALLER DUP9 DUP9 DUP6 PUSH2 0x29AB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49CAA04C5E1E168069C09DF7F88C07CA87BE980B0BF4570AB77FE9AAE3CA7EBA DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B79 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x1B84 CALLER DUP5 DUP5 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1BBB CALLER DUP5 DUP5 DUP5 PUSH2 0x29AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2766 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C69642064656C656761746520616464726573730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DC5 JUMPI POP PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2FD5B26F00131BD8CA0FC556207292B85A6BEC241341DF82724333227458E630 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 DUP7 PUSH6 0xFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x216C JUMPI PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x216E JUMP JUMPDEST DUP6 JUMPDEST SWAP1 POP PUSH2 0x2178 PUSH2 0x357E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x22DA JUMPI POP DUP6 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x2459 JUMPI DUP1 PUSH1 0x0 ADD MLOAD DUP6 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x22F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x2294 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP3 DUP6 MSTORE POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2493 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x302E312E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x250D PUSH2 0x3525 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x3C TIMESTAMP DUP2 PUSH2 0x26C0 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x26F5 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND DUP2 SUB PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x275B JUMPI PUSH1 0x0 DUP3 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND DUP3 PUSH1 0x60 ADD MLOAD DUP3 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x2740 JUMPI INVALID JUMPDEST MOD DUP2 SUB DUP3 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST DUP2 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x3649 PUSH1 0x6C SWAP2 CODECOPY PUSH1 0x6C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0x4 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP5 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B54 DUP5 DUP5 PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2C3F JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2C94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x59 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x36B5 PUSH1 0x59 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E42 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D59 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F742065786563757465206574686572207472616E73666572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP6 PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FA1 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FE1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FC6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x300E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3044 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x305A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x30DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F74206578656375746520746F6B656E207472616E73666572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD EQ ISZERO PUSH2 0x30F8 JUMPI CALLER SWAP1 POP PUSH2 0x34F0 JUMP JUMPDEST PUSH1 0x41 DUP4 MLOAD LT ISZERO PUSH2 0x3170 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7369676E6174757265732E6C656E677468203E3D203635000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3180 DUP7 PUSH1 0x0 PUSH2 0x34F6 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x0 DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x33A8 JUMPI DUP2 PUSH1 0x0 SHR SWAP4 POP PUSH1 0x60 PUSH1 0x20 DUP3 DUP9 ADD ADD SWAP1 POP PUSH4 0x20C13B0B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x20C13B0B DUP9 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3240 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3225 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x326D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x328B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x32D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3306 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x331C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x33A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35E8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x34EC JUMP JUMPDEST PUSH1 0x1E DUP4 PUSH1 0xFF AND GT ISZERO PUSH2 0x347A JUMPI PUSH1 0x1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP6 SUB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP JUMPDEST JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x41 MUL PUSH1 0x20 DUP2 ADD DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP2 ADD DUP7 ADD MLOAD SWAP2 POP PUSH1 0xFF PUSH1 0x41 DUP3 ADD DUP8 ADD MLOAD AND SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID NUMBER PUSH16 0x756C64206E6F742076616C6964617465 KECCAK256 GASLIMIT 0x49 POP 0x2d BALANCE ORIGIN CALLDATACOPY BALANCE KECCAK256 PUSH20 0x69676E617475726564656C6567617465735B6D73 PUSH8 0x2E73656E6465725D JUMPDEST PUSH22 0x696E7434382864656C6567617465295D2E64656C6567 PUSH2 0x7465 KECCAK256 RETURNDATASIZE RETURNDATASIZE KECCAK256 PUSH5 0x656C656761 PUSH21 0x65416C6C6F77616E63655472616E73666572286164 PUSH5 0x7265737320 PUSH20 0x6166652C6164647265737320746F6B656E2C7569 PUSH15 0x74393620616D6F756E742C61646472 PUSH6 0x737320706179 PUSH14 0x656E74546F6B656E2C75696E7439 CALLDATASIZE KECCAK256 PUSH17 0x61796D656E742C75696E743136206E6F6E PUSH4 0x65296578 PUSH17 0x656374656444656C6567617465203D3D20 PUSH20 0x69676E65722026262064656C6567617465735B61 PUSH5 0x6472657373 0x28 PUSH20 0x616665295D5B75696E743438287369676E657229 0x5d 0x2e PUSH5 0x656C656761 PUSH21 0x65203D3D207369676E65726E65775370656E74203E KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E63652E7370656E74202626206E PUSH6 0x775370656E74 KECCAK256 EXTCODECOPY RETURNDATASIZE KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E63652E616D6F756E746E657753 PUSH17 0x656E74203E207061796D656E74416C6C6F PUSH24 0x616E63652E7370656E74202626206E65775370656E74203C RETURNDATASIZE KECCAK256 PUSH17 0x61796D656E74416C6C6F77616E63652E61 PUSH14 0x6F756E74A265627A7A7230582089 0xe6 0xc8 SHL 0xdf LOG4 0xbb DUP1 0xa5 0xf6 0xbd PUSH13 0xB073FDCB4FB64D564B02765F1E 0x5d 0xb7 PUSH17 0x3DDA824564736F6C634300050A00320000 ",
							"sourceMap": "3663:13154:0:-;;;5307:110;8:9:-1;5:2;;;30:1;27;20:12;5:2;5307:110:0;3976:66;5377:25;;5404:4;5366:43;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5366:43:0;;;5356:54;;;;;;5338:15;:72;;;;3663:13154;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063beaeb388116100a2578063e71bdf4111610071578063e71bdf411461094b578063eb37abe01461098f578063f56e81fa14610a5e578063f698da2514610b0c578063ffa1ad7414610b2a57610116565b8063beaeb38814610693578063c19bf50e1461072d578063ce60c69214610791578063d626e0431461085557610116565b806367e7646f116100e957806367e7646f1461034b5780638d0e8e1d1461038f57806394b31fbd14610448578063a3f4df7e14610508578063b713c9d41461058b57610116565b80631db61b541461011b578063310a3bb11461013957806343abf5fe146101a15780634515641a146101bf575b600080fd5b610123610bad565b6040518082815260200191505060405180910390f35b61017b6004803603602081101561014f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bd4565b604051808265ffffffffffff1665ffffffffffff16815260200191505060405180910390f35b6101a9610bf9565b6040518082815260200191505060405180910390f35b61034960048036036101008110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356bffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356bffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102c357600080fd5b8201836020820111156102d557600080fd5b803590602001918460018302840111640100000000831117156102f757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c15565b005b61038d6004803603602081101561036157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611022565b005b6103f1600480360360408110156103a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061149e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610434578082015181840152602081019050610419565b505050509050019250505060405180910390f35b6104ca6004803603606081101561045e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115a9565b6040518082600560200280838360005b838110156104f55780820151818401526020810190506104da565b5050505090500191505060405180910390f35b610510611635565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610550578082015181840152602081019050610535565b50505050905090810190601f16801561057d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61060d600480360360608110156105a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061166e565b60405180866bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001856bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020018461ffff1661ffff1681526020018363ffffffff1663ffffffff1681526020018261ffff1661ffff1681526020019550505050505060405180910390f35b61072b600480360360a08110156106a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356bffffffffffffffffffffffff169060200190929190803561ffff169060200190929190803563ffffffff16906020019092919050505061171a565b005b61078f6004803603604081101561074357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b71565b005b6107e5600480360360408110156107a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803565ffffffffffff169060200190929190505050611bc0565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018365ffffffffffff1665ffffffffffff1681526020018265ffffffffffff1665ffffffffffff168152602001935050505060405180910390f35b610935600480360360e081101561086b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356bffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356bffffffffffffffffffffffff169060200190929190803561ffff169060200190929190505050611c3b565b6040518082815260200191505060405180910390f35b61098d6004803603602081101561096157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c60565b005b6109f0600480360360608110156109a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803565ffffffffffff169060200190929190803560ff1690602001909291905050506120c5565b60405180806020018365ffffffffffff1665ffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015610a49578082015181840152602081019050610a2e565b50505050905001935050505060405180910390f35b610aca60048036036060811015610a7457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061246e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b146124c6565b6040518082815260200191505060405180910390f35b610b326124cc565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b72578082015181840152602081019050610b57565b50505050905090810190601f168015610b9f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b7f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b81565b60036020528060005260406000206000915054906101000a900465ffffffffffff1681565b6040518080613649606c9139606c019050604051809103902081565b610c1d613525565b610c2889848a612505565b90506060610c3f8a8a8a8a8a8a8860800151612766565b90506001826080015101826080019061ffff16908161ffff1681525050600087836020015101905082602001516bffffffffffffffffffffffff16816bffffffffffffffffffffffff16118015610cb6575082600001516bffffffffffffffffffffffff16816bffffffffffffffffffffffff1611155b610d0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061370e603a913960400191505060405180910390fd5b8083602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff16815250506000866bffffffffffffffffffffffff161115610eb057610d52613525565b8a73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610d9557610d908c878a612505565b610d97565b835b905086816020015101915080602001516bffffffffffffffffffffffff16826bffffffffffffffffffffffff16118015610df1575080600001516bffffffffffffffffffffffff16826bffffffffffffffffffffffff1611155b610e46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260488152602001806137486048913960600191505060405180910390fd5b8181602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff16815250508a73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610eae57610ead8c878a846129ab565b5b505b610ebc8b868c866129ab565b610ec88585848e612b48565b6000866bffffffffffffffffffffffff161115610eec57610eeb8b883289612c9b565b5b610ef88b8b8b8b612c9b565b8a73ffffffffffffffffffffffffffffffffffffffff167fa11cca2c2027e28ab0046aab4d4040f59d8b06e819ccd974c1e53e86aa814c19868c8c8c6001896080015103604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020018261ffff1661ffff1681526020019550505050505060405180910390a25050505050505050505050565b61102a61357e565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008365ffffffffffff1665ffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161415611184575061149b565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008090505b818054905081101561130157600082828154811061122457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611259613525565b611264338784612505565b9050600081600001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff1681525050600081602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff16815250506000816040019061ffff16908161ffff16815250506000816060019063ffffffff16908163ffffffff16815250506112f2338784846129ab565b5050808060010191505061120a565b508160400151600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015165ffffffffffff1665ffffffffffff168152602001908152602001600020600001601a6101000a81548165ffffffffffff021916908365ffffffffffff1602179055508160200151600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846040015165ffffffffffff1665ffffffffffff16815260200190815260200160002060000160146101000a81548165ffffffffffff021916908365ffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fdccc2d936ded24d2153d2760581a7f0dcb23ec71190c9726b3584cdd700214d484604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a250505b50565b6060600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561159c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611552575b5050505050905092915050565b6115b16135c5565b6115b9613525565b6115c4858585612505565b90506040518060a0016040528082600001516bffffffffffffffffffffffff16815260200182602001516bffffffffffffffffffffffff168152602001826040015161ffff168152602001826060015163ffffffff168152602001826080015161ffff168152509150509392505050565b6040518060400160405280601081526020017f416c6c6f77616e6365204d6f64756c650000000000000000000000000000000081525081565b600060205282600052604060002060205281600052604060002060205280600052604060002060009250925050508060000160009054906101000a90046bffffffffffffffffffffffff169080600001600c9054906101000a90046bffffffffffffffffffffffff16908060000160189054906101000a900461ffff169080600001601a9054906101000a900463ffffffff169080600001601e9054906101000a900461ffff16905085565b8473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008765ffffffffffff1665ffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018061360d603c913960400191505060405180910390fd5b611829613525565b611834338787612505565b90506000816080015161ffff16141561193d576001816080019061ffff16908161ffff1681525050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208590806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6000603c428161194957fe5b04905060008363ffffffff161115611a11578063ffffffff168363ffffffff1611156119dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7265736574426173654d696e203c3d2063757272656e744d696e00000000000081525060200191505060405180910390fd5b8361ffff1683820363ffffffff16816119f257fe5b068103826060019063ffffffff16908163ffffffff1681525050611a3e565b6000826060015163ffffffff161415611a3d5780826060019063ffffffff16908163ffffffff16815250505b5b83826040019061ffff16908161ffff16815250508482600001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff1681525050611a86338888856129ab565b3373ffffffffffffffffffffffffffffffffffffffff167f49caa04c5e1e168069c09df7f88c07ca87be980b0bf4570ab77fe9aae3ca7eba88888888604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020018261ffff1661ffff16815260200194505050505060405180910390a250505050505050565b611b79613525565b611b84338484612505565b9050600081602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff1681525050611bbb338484846129ab565b505050565b6002602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900465ffffffffffff169080600001601a9054906101000a900465ffffffffffff16905083565b6000611c4c88888888888888612766565b805190602001209050979650505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c69642064656c65676174652061646472657373000000000000000081525060200191505060405180910390fd5b6000819050600073ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008365ffffffffffff1665ffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611dc557506120c2565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900465ffffffffffff16905060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001600065ffffffffffff1681526020018265ffffffffffff16815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008465ffffffffffff1665ffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548165ffffffffffff021916908365ffffffffffff160217905550604082015181600001601a6101000a81548165ffffffffffff021916908365ffffffffffff16021790555090505081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008365ffffffffffff1665ffffffffffff16815260200190815260200160002060000160146101000a81548165ffffffffffff021916908365ffffffffffff16021790555081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548165ffffffffffff021916908365ffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f2fd5b26f00131bd8ca0fc556207292b85a6bec241341df82724333227458e63084604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a250505b50565b606060008260ff166040519080825280602002602001820160405280156120fb5781602001602082028038833980820191505090505b50915060008090506000808665ffffffffffff16141561216c57600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900465ffffffffffff1661216e565b855b905061217861357e565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008365ffffffffffff1665ffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff168152505090505b600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16141580156122da57508560ff168360ff16105b15612459578060000151858460ff16815181106122f357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280600101935050600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000826040015165ffffffffffff1665ffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160008201601a9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815250509050612294565b80600001519350828552505050935093915050565b6001602052826000526040600020602052816000526040600020818154811061249357fe5b90600052602060002001600092509250509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b61250d613525565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff16815260200160008201600c9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016000820160189054906101000a900461ffff1661ffff1661ffff16815260200160008201601a9054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201601e9054906101000a900461ffff1661ffff1661ffff168152505090506000603c42816126c057fe5b0490506000826040015161ffff161180156126f55750816040015161ffff16810363ffffffff16826060015163ffffffff1611155b1561275b57600082602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff1681525050816040015161ffff168260600151820363ffffffff168161274057fe5b068103826060019063ffffffff16908163ffffffff16815250505b819150509392505050565b606060006040518080613649606c9139606c019050604051809103902089898989898989604051602001808981526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001856bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020018261ffff1661ffff16815260200198505050505050505050604051602081830303815290604052805190602001209050601960f81b600160f81b6004548360405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101838152602001828152602001945050505050604051602081830303815290604052915050979650505050505050565b806000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060408201518160000160186101000a81548161ffff021916908361ffff160217905550606082015181600001601a6101000a81548163ffffffff021916908363ffffffff160217905550608082015181600001601e6101000a81548161ffff021916908361ffff16021790555090505050505050565b6000612b5484846130e5565b90508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015612c3f57508073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008365ffffffffffff1665ffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b612c94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260598152602001806136b56059913960600191505060405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612e42578373ffffffffffffffffffffffffffffffffffffffff1663468721a7838360006040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff16815260200180602001836001811115612d5957fe5b60ff168152602001828103825260008152602001602001945050505050602060405180830381600087803b158015612d9057600080fd5b505af1158015612da4573d6000803e3d6000fd5b505050506040513d6020811015612dba57600080fd5b8101908080519060200190929190505050612e3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f756c64206e6f742065786563757465206574686572207472616e7366657281525060200191505060405180910390fd5b6130df565b60608282604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001925050506040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508473ffffffffffffffffffffffffffffffffffffffff1663468721a78560008460006040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001836001811115612fa157fe5b60ff168152602001828103825284818151815260200191508051906020019080838360005b83811015612fe1578082015181840152602081019050612fc6565b50505050905090810190601f16801561300e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561303057600080fd5b505af1158015613044573d6000803e3d6000fd5b505050506040513d602081101561305a57600080fd5b81019080805190602001909291905050506130dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f756c64206e6f74206578656375746520746f6b656e207472616e7366657281525060200191505060405180910390fd5b505b50505050565b600080835114156130f8573390506134f0565b604183511015613170576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f7369676e6174757265732e6c656e677468203e3d20363500000000000000000081525060200191505060405180910390fd5b60008060006131808660006134f6565b80935081945082955050505060008360ff1614156133a8578160001c9350606060208288010190506320c13b0b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168573ffffffffffffffffffffffffffffffffffffffff166320c13b0b88846040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b83811015613240578082015181840152602081019050613225565b50505050905090810190601f16801561326d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156132a657808201518184015260208101905061328b565b50505050905090810190601f1680156132d35780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b1580156132f257600080fd5b505afa158015613306573d6000803e3d6000fd5b505050506040513d602081101561331c57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146133a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806135e86025913960400191505060405180910390fd5b506134ec565b601e8360ff16111561347a576001858051906020012060405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018281526020019150506040516020818303038152906040528051906020012060048503848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613469573d6000803e3d6000fd5b5050506020604051035193506134eb565b6001858051906020012084848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156134de573d6000803e3d6000fd5b5050506020604051035193505b5b5050505b92915050565b60008060008360410260208101860151925060408101860151915060ff60418201870151169350509250925092565b6040518060a0016040528060006bffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600061ffff168152602001600063ffffffff168152602001600061ffff1681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600065ffffffffffff168152602001600065ffffffffffff1681525090565b6040518060a0016040528060059060208202803883398082019150509050509056fe436f756c64206e6f742076616c6964617465204549502d31323731207369676e617475726564656c6567617465735b6d73672e73656e6465725d5b75696e7434382864656c6567617465295d2e64656c6567617465203d3d2064656c6567617465416c6c6f77616e63655472616e73666572286164647265737320736166652c6164647265737320746f6b656e2c75696e74393620616d6f756e742c61646472657373207061796d656e74546f6b656e2c75696e743936207061796d656e742c75696e743136206e6f6e636529657870656374656444656c6567617465203d3d207369676e65722026262064656c6567617465735b616464726573732873616665295d5b75696e743438287369676e6572295d2e64656c6567617465203d3d207369676e65726e65775370656e74203e20616c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d20616c6c6f77616e63652e616d6f756e746e65775370656e74203e207061796d656e74416c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d207061796d656e74416c6c6f77616e63652e616d6f756e74a265627a7a7230582089e6c81bdfa4bb80a5f6bd6cb073fdcb4fb64d564b02765f1e5db7703dda824564736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEAEB388 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE71BDF41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE71BDF41 EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0xEB37ABE0 EQ PUSH2 0x98F JUMPI DUP1 PUSH4 0xF56E81FA EQ PUSH2 0xA5E JUMPI DUP1 PUSH4 0xF698DA25 EQ PUSH2 0xB0C JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0xB2A JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xBEAEB388 EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xC19BF50E EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0xCE60C692 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xD626E043 EQ PUSH2 0x855 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x67E7646F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x67E7646F EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8D0E8E1D EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x94B31FBD EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xB713C9D4 EQ PUSH2 0x58B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1DB61B54 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x310A3BB1 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x43ABF5FE EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4515641A EQ PUSH2 0x1BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xC15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1022 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x434 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x419 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4DA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x510 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x550 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x535 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x171A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B71 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x935 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA2E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xACA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x246E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB14 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB32 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB72 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB57 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB9F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x35AFF83D86937D35B32E04F0DDC6FF469290EEF2F1B692D8A815C89404D4749 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x3649 PUSH1 0x6C SWAP2 CODECOPY PUSH1 0x6C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0xC1D PUSH2 0x3525 JUMP JUMPDEST PUSH2 0xC28 DUP10 DUP5 DUP11 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0xC3F DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x2766 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0x80 ADD MLOAD ADD DUP3 PUSH1 0x80 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP8 DUP4 PUSH1 0x20 ADD MLOAD ADD SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xCB6 JUMPI POP DUP3 PUSH1 0x0 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x370E PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xD52 PUSH2 0x3525 JUMP JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD95 JUMPI PUSH2 0xD90 DUP13 DUP8 DUP11 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP DUP7 DUP2 PUSH1 0x20 ADD MLOAD ADD SWAP2 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xDF1 JUMPI POP DUP1 PUSH1 0x0 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3748 PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAE JUMPI PUSH2 0xEAD DUP13 DUP8 DUP11 DUP5 PUSH2 0x29AB JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH2 0xEBC DUP12 DUP7 DUP13 DUP7 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xEC8 DUP6 DUP6 DUP5 DUP15 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xEEC JUMPI PUSH2 0xEEB DUP12 DUP9 ORIGIN DUP10 PUSH2 0x2C9B JUMP JUMPDEST JUMPDEST PUSH2 0xEF8 DUP12 DUP12 DUP12 DUP12 PUSH2 0x2C9B JUMP JUMPDEST DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA11CCA2C2027E28AB0046AAB4D4040F59D8B06E819CCD974C1E53E86AA814C19 DUP7 DUP13 DUP13 DUP13 PUSH1 0x1 DUP10 PUSH1 0x80 ADD MLOAD SUB PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x102A PUSH2 0x357E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1184 JUMPI POP PUSH2 0x149B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1301 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1224 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x1259 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x1264 CALLER DUP8 DUP5 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x12F2 CALLER DUP8 DUP5 DUP5 PUSH2 0x29AB JUMP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x120A JUMP JUMPDEST POP DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCC2D936DED24D2153D2760581A7F0DCB23EC71190C9726B3584CDD700214D4 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x159C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1552 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B1 PUSH2 0x35C5 JUMP JUMPDEST PUSH2 0x15B9 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x15C4 DUP6 DUP6 DUP6 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416C6C6F77616E6365204D6F64756C6500000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x360D PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1829 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x1834 CALLER DUP8 DUP8 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO PUSH2 0x193D JUMPI PUSH1 0x1 DUP2 PUSH1 0x80 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3C TIMESTAMP DUP2 PUSH2 0x1949 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1A11 JUMPI DUP1 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x19DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7265736574426173654D696E203C3D2063757272656E744D696E000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0xFFFF AND DUP4 DUP3 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x19F2 JUMPI INVALID JUMPDEST MOD DUP2 SUB DUP3 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1A3D JUMPI DUP1 DUP3 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST JUMPDEST DUP4 DUP3 PUSH1 0x40 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP DUP5 DUP3 PUSH1 0x0 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1A86 CALLER DUP9 DUP9 DUP6 PUSH2 0x29AB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49CAA04C5E1E168069C09DF7F88C07CA87BE980B0BF4570AB77FE9AAE3CA7EBA DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B79 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x1B84 CALLER DUP5 DUP5 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1BBB CALLER DUP5 DUP5 DUP5 PUSH2 0x29AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2766 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C69642064656C656761746520616464726573730000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DC5 JUMPI POP PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2FD5B26F00131BD8CA0FC556207292B85A6BEC241341DF82724333227458E630 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 DUP7 PUSH6 0xFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x216C JUMPI PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x216E JUMP JUMPDEST DUP6 JUMPDEST SWAP1 POP PUSH2 0x2178 PUSH2 0x357E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x22DA JUMPI POP DUP6 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x2459 JUMPI DUP1 PUSH1 0x0 ADD MLOAD DUP6 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x22F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x2294 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP3 DUP6 MSTORE POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2493 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x302E312E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x250D PUSH2 0x3525 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1E SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x3C TIMESTAMP DUP2 PUSH2 0x26C0 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x26F5 JUMPI POP DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND DUP2 SUB PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x275B JUMPI PUSH1 0x0 DUP3 PUSH1 0x20 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND DUP3 PUSH1 0x60 ADD MLOAD DUP3 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x2740 JUMPI INVALID JUMPDEST MOD DUP2 SUB DUP3 PUSH1 0x60 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST DUP2 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x3649 PUSH1 0x6C SWAP2 CODECOPY PUSH1 0x6C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0x4 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP5 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1E PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B54 DUP5 DUP5 PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2C3F JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2C94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x59 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x36B5 PUSH1 0x59 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E42 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D59 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F742065786563757465206574686572207472616E73666572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x468721A7 DUP6 PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FA1 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FE1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FC6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x300E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3044 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x305A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x30DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F74206578656375746520746F6B656E207472616E73666572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD EQ ISZERO PUSH2 0x30F8 JUMPI CALLER SWAP1 POP PUSH2 0x34F0 JUMP JUMPDEST PUSH1 0x41 DUP4 MLOAD LT ISZERO PUSH2 0x3170 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7369676E6174757265732E6C656E677468203E3D203635000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3180 DUP7 PUSH1 0x0 PUSH2 0x34F6 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x0 DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x33A8 JUMPI DUP2 PUSH1 0x0 SHR SWAP4 POP PUSH1 0x60 PUSH1 0x20 DUP3 DUP9 ADD ADD SWAP1 POP PUSH4 0x20C13B0B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x20C13B0B DUP9 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3240 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3225 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x326D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x328B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x32D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3306 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x331C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x33A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35E8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x34EC JUMP JUMPDEST PUSH1 0x1E DUP4 PUSH1 0xFF AND GT ISZERO PUSH2 0x347A JUMPI PUSH1 0x1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP6 SUB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP JUMPDEST JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x41 MUL PUSH1 0x20 DUP2 ADD DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP2 ADD DUP7 ADD MLOAD SWAP2 POP PUSH1 0xFF PUSH1 0x41 DUP3 ADD DUP8 ADD MLOAD AND SWAP4 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID NUMBER PUSH16 0x756C64206E6F742076616C6964617465 KECCAK256 GASLIMIT 0x49 POP 0x2d BALANCE ORIGIN CALLDATACOPY BALANCE KECCAK256 PUSH20 0x69676E617475726564656C6567617465735B6D73 PUSH8 0x2E73656E6465725D JUMPDEST PUSH22 0x696E7434382864656C6567617465295D2E64656C6567 PUSH2 0x7465 KECCAK256 RETURNDATASIZE RETURNDATASIZE KECCAK256 PUSH5 0x656C656761 PUSH21 0x65416C6C6F77616E63655472616E73666572286164 PUSH5 0x7265737320 PUSH20 0x6166652C6164647265737320746F6B656E2C7569 PUSH15 0x74393620616D6F756E742C61646472 PUSH6 0x737320706179 PUSH14 0x656E74546F6B656E2C75696E7439 CALLDATASIZE KECCAK256 PUSH17 0x61796D656E742C75696E743136206E6F6E PUSH4 0x65296578 PUSH17 0x656374656444656C6567617465203D3D20 PUSH20 0x69676E65722026262064656C6567617465735B61 PUSH5 0x6472657373 0x28 PUSH20 0x616665295D5B75696E743438287369676E657229 0x5d 0x2e PUSH5 0x656C656761 PUSH21 0x65203D3D207369676E65726E65775370656E74203E KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E63652E7370656E74202626206E PUSH6 0x775370656E74 KECCAK256 EXTCODECOPY RETURNDATASIZE KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E63652E616D6F756E746E657753 PUSH17 0x656E74203E207061796D656E74416C6C6F PUSH24 0x616E63652E7370656E74202626206E65775370656E74203C RETURNDATASIZE KECCAK256 PUSH17 0x61796D656E74416C6C6F77616E63652E61 PUSH14 0x6F756E74A265627A7A7230582089 0xe6 0xc8 SHL 0xdf LOG4 0xbb DUP1 0xa5 0xf6 0xbd PUSH13 0xB073FDCB4FB64D564B02765F1E 0x5d 0xb7 PUSH17 0x3DDA824564736F6C634300050A00320000 ",
							"sourceMap": "3663:13154:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3663:13154:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3924:118;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4548:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4548:48:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4080:189;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8145:2214;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8145:2214:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8145:2214:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8145:2214:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8145:2214:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8145:2214:0;;;;;;;;;;;;;;;:::i;:::-;;15153:967;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15153:967:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;14009:136;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14009:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14009:136:0;;;;;;;;;;;;;;;;;14151:427;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14151:427:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14151:427:0;;;;;;;;;;;;;;;;3745:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3745:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4313:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4313:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5869:1256;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5869:1256:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7894:245;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7894:245:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4477:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4477:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10866:366;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10866:366:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14584:563;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14584:563:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;16126:689;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16126:689:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16126:689:0;;;;;;;;;;;;;;;;;;4407:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4407:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4602:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3799:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3799:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3924:118;3976:66;3924:118;;;:::o;4548:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;4080:189::-;4134:135;;;;;;;;;;;;;;;;;;;4080:189;:::o;8145:2214::-;8442:26;;:::i;:::-;8471:44;8492:4;8499:8;8509:5;8471:12;:44::i;:::-;8442:73;;8525:29;8557:98;8590:4;8597:5;8604:2;8608:6;8616:12;8630:7;8639:9;:15;;;8557:24;:98::i;:::-;8525:130;;8725:1;8707:9;:15;;;:19;8689:9;:15;;:37;;;;;;;;;;;8736:15;8772:6;8754:9;:15;;;:24;8736:42;;8854:9;:15;;;8843:26;;:8;:26;;;:58;;;;;8885:9;:16;;;8873:28;;:8;:28;;;;8843:58;8835:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8992:8;8974:9;:15;;:26;;;;;;;;;;;9024:1;9014:7;:11;;;9010:749;;;9117:33;;:::i;:::-;9169:5;9153:21;;:12;:21;;;:87;;9189:51;9210:4;9217:8;9227:12;9189;:51::i;:::-;9153:87;;;9177:9;9153:87;9117:123;;9290:7;9265:16;:22;;;:32;9254:43;;9382:16;:22;;;9371:33;;:8;:33;;;:72;;;;;9420:16;:23;;;9408:35;;:8;:35;;;;9371:72;9363:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9559:8;9534:16;:22;;:33;;;;;;;;;;;9669:5;9653:21;;:12;:21;;;9649:99;;9676:72;9700:4;9707:8;9717:12;9731:16;9676:15;:72::i;:::-;9649:99;9010:749;;9768:58;9792:4;9799:8;9809:5;9816:9;9768:15;:58::i;:::-;9908:59;9923:8;9933:9;9944:16;9962:4;9908:14;:59::i;:::-;10010:1;10000:7;:11;;;9996:184;;;10121:48;10130:4;10136:12;10150:9;10161:7;10121:8;:48::i;:::-;9996:184;10215:33;10224:4;10230:5;10237:2;10241:6;10215:8;:33::i;:::-;10296:4;10263:89;;;10303:8;10313:5;10320:2;10324:6;10350:1;10332:9;:15;;;:19;10263:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8145:2214;;;;;;;;;;;:::o;15153:967::-;15212:23;;:::i;:::-;15238:9;:21;15248:10;15238:21;;;;;;;;;;;;;;;:39;15267:8;15238:39;;;;;;;;;;;;;;;15212:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15368:1;15340:30;;:7;:16;;;:30;;;15337:42;;;15372:7;;;15337:42;15388:32;15423:6;:18;15430:10;15423:18;;;;;;;;;;;;;;;:28;15442:8;15423:28;;;;;;;;;;;;;;;15388:63;;15466:9;15478:1;15466:13;;15461:472;15485:14;:21;;;;15481:1;:25;15461:472;;;15527:13;15543:14;15558:1;15543:17;;;;;;;;;;;;;;;;;;;;;;;;;15527:33;;15636:26;;:::i;:::-;15665:41;15678:10;15690:8;15700:5;15665:12;:41::i;:::-;15636:70;;15739:1;15720:9;:16;;:20;;;;;;;;;;;15772:1;15754:9;:15;;:19;;;;;;;;;;;15812:1;15787:9;:22;;:26;;;;;;;;;;;15852:1;15827:9;:22;;:26;;;;;;;;;;;15867:55;15883:10;15895:8;15905:5;15912:9;15867:15;:55::i;:::-;15461:472;;15508:3;;;;;;;15461:472;;;;15985:7;:12;;;15942:9;:21;15952:10;15942:21;;;;;;;;;;;;;;;:35;15964:7;:12;;;15942:35;;;;;;;;;;;;;;;:40;;;:55;;;;;;;;;;;;;;;;;;16050:7;:12;;;16007:9;:21;16017:10;16007:21;;;;;;;;;;;;;;;:35;16029:7;:12;;;16007:35;;;;;;;;;;;;;;;:40;;;:55;;;;;;;;;;;;;;;;;;16092:10;16077:36;;;16104:8;16077:36;;;;;;;;;;;;;;;;;;;;;;15153:967;;;;:::o;14009:136::-;14081:16;14116:6;:12;14123:4;14116:12;;;;;;;;;;;;;;;:22;14129:8;14116:22;;;;;;;;;;;;;;;14109:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14009:136;;;;:::o;14151:427::-;14246:17;;:::i;:::-;14275:26;;:::i;:::-;14304:35;14317:4;14323:8;14333:5;14304:12;:35::i;:::-;14275:64;;14349:222;;;;;;;;14378:9;:16;;;14370:25;;14349:222;;;;14417:9;:15;;;14409:24;;14349:222;;;;14455:9;:22;;;14447:31;;14349:222;;;;14500:9;:22;;;14492:31;;14349:222;;;;14545:9;:15;;;14537:24;;14349:222;;;;;;14151:427;;;;;:::o;3745:48::-;;;;;;;;;;;;;;;;;;;:::o;4313:88::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5869:1256::-;6079:8;6027:60;;:9;:21;6037:10;6027:21;;;;;;;;;;;;;;;:39;6056:8;6027:39;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:60;;;6019:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6162:26;;:::i;:::-;6191:41;6204:10;6216:8;6226:5;6191:12;:41::i;:::-;6162:70;;6265:1;6246:9;:15;;;:20;;;6242:210;;;6386:1;6368:9;:15;;:19;;;;;;;;;;;6401:6;:18;6408:10;6401:18;;;;;;;;;;;;;;;:28;6420:8;6401:28;;;;;;;;;;;;;;;6435:5;6401:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6401:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6242:210;6523:17;6556:2;6550:3;:8;;;;;;6523:36;;6588:1;6573:12;:16;;;6569:307;;;6629:10;6613:26;;:12;:26;;;;6605:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6753:12;6723:42;;6737:12;6724:10;:25;6723:42;;;;;;;;6709:10;:57;6684:9;:22;;:82;;;;;;;;;;;6569:307;;;6813:1;6787:9;:22;;;:27;;;6783:93;;;6855:10;6830:9;:22;;:35;;;;;;;;;;;6783:93;6569:307;6910:12;6885:9;:22;;:37;;;;;;;;;;;6951:15;6932:9;:16;;:34;;;;;;;;;;;6976:55;6992:10;7004:8;7014:5;7021:9;6976:15;:55::i;:::-;7059:10;7046:72;;;7071:8;7081:5;7088:15;7105:12;7046:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5869:1256;;;;;;;:::o;7894:245::-;7968:26;;:::i;:::-;7997:41;8010:10;8022:8;8032:5;7997:12;:41::i;:::-;7968:70;;8066:1;8048:9;:15;;:19;;;;;;;;;;;8077:55;8093:10;8105:8;8115:5;8122:9;8077:15;:55::i;:::-;7894:245;;;:::o;4477:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10866:366::-;11087:7;11123:101;11161:4;11167:5;11174:2;11178:6;11186:12;11200:7;11209:5;11123:24;:101::i;:::-;11113:112;;;;;;11106:119;;10866:366;;;;;;;;;:::o;14584:563::-;14668:1;14648:22;;:8;:22;;;;14640:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14709:12;14731:8;14709:31;;14852:1;14803:51;;:9;:21;14813:10;14803:21;;;;;;;;;;;;;;;:28;14825:5;14803:28;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:51;;;14800:63;;14856:7;;;14800:63;14872:17;14892:14;:26;14907:10;14892:26;;;;;;;;;;;;;;;;;;;;;;;;;14872:46;;14959:33;;;;;;;;14968:8;14959:33;;;;;;14978:1;14959:33;;;;;;14981:10;14959:33;;;;;14928:9;:21;14938:10;14928:21;;;;;;;;;;;;;;;:28;14950:5;14928:28;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15043:5;15002:9;:21;15012:10;15002:21;;;;;;;;;;;;;;;:33;15024:10;15002:33;;;;;;;;;;;;;;;:38;;;:46;;;;;;;;;;;;;;;;;;15087:5;15058:14;:26;15073:10;15058:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;15119:10;15107:33;;;15131:8;15107:33;;;;;;;;;;;;;;;;;;;;;;14584:563;;;;:::o;16126:689::-;16213:24;16239:11;16286:8;16272:23;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16272:23:0;;;;16262:33;;16305:7;16315:1;16305:11;;16326:19;16358:1;16349:5;:10;;;;16348:43;;16371:14;:20;16386:4;16371:20;;;;;;;;;;;;;;;;;;;;;;;;;16348:43;;;16363:5;16348:43;16326:65;;16401:23;;:::i;:::-;16427:9;:15;16437:4;16427:15;;;;;;;;;;;;;;;:29;16443:12;16427:29;;;;;;;;;;;;;;;16401:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16466:178;16500:1;16472:30;;:7;:16;;;:30;;;;:46;;;;;16510:8;16506:12;;:1;:12;;;16472:46;16466:178;;;16547:7;:16;;;16534:7;16542:1;16534:10;;;;;;;;;;;;;;;:29;;;;;;;;;;;16577:3;;;;;;;16604:9;:15;16614:4;16604:15;;;;;;;;;;;;;;;:29;16620:7;:12;;;16604:29;;;;;;;;;;;;;;;16594:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16466:178;;;16667:7;:16;;;16653:31;;16797:1;16788:7;16781:18;16767:42;;;;;;;;;:::o;4407:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4602:30::-;;;;:::o;3799:40::-;;;;;;;;;;;;;;;;;;;:::o;7131:581::-;7222:26;;:::i;:::-;7272:10;:16;7283:4;7272:16;;;;;;;;;;;;;;;:26;7289:8;7272:26;;;;;;;;;;;;;;;:33;7299:5;7272:33;;;;;;;;;;;;;;;7260:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7377:17;7410:2;7404:3;:8;;;;;;7377:36;;7452:1;7427:9;:22;;;:26;;;:91;;;;;7496:9;:22;;;7483:35;;:10;:35;7457:61;;:9;:22;;;:61;;;;7427:91;7423:257;;;7552:1;7534:9;:15;;:19;;;;;;;;;;;7646:9;:22;;;7606:62;;7620:9;:22;;;7607:10;:35;7606:62;;;;;;;;7592:10;:77;7567:9;:22;;:102;;;;;;;;;;;7423:257;7696:9;7689:16;;;7131:581;;;;;:::o;10365:495::-;10591:12;10615:20;4134:135;;;;;;;;;;;;;;;;;;;10701:4;10707:5;10714:2;10718:6;10726:12;10740:7;10749:5;10661:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10661:94:0;;;10638:127;;;;;;10615:150;;10804:4;10799:10;;10816:4;10811:10;;10823:15;;10840:12;10782:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10782:71:0;;;10775:78;;;10365:495;;;;;;;;;:::o;7718:170::-;7872:9;7836:10;:16;7847:4;7836:16;;;;;;;;;;;;;;;:26;7853:8;7836:26;;;;;;;;;;;;;;;:33;7863:5;7836:33;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:170;;;;:::o;11238:444::-;11378:14;11395:45;11412:9;11423:16;11395;:45::i;:::-;11378:62;;11491:6;11471:26;;:16;:26;;;:89;;;;;11554:6;11501:59;;:9;:24;11519:4;11501:24;;;;;;;;;;;;;;;:40;11533:6;11501:40;;;;;;;;;;;;;;;:49;;;;;;;;;;;;:59;;;11471:89;11450:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11238:444;;;;;:::o;13434:569::-;13558:1;13541:19;;:5;:19;;;13537:460;;;13641:4;:30;;;13672:2;13676:6;13688:19;13641:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13641:67:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13641:67:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13641:67:0;;;;;;;;;;;;;;;;13633:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13537:460;;;13776:17;13849:2;13853:6;13796:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13796:64:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;13796:64:0;13776:84;;13882:4;:30;;;13913:5;13920:1;13923:4;13929:19;13882:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13882:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13882:67:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13882:67:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13882:67:0;;;;;;;;;;;;;;;;13874:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13537:460;;13434:569;;;;:::o;11688:1740::-;11791:13;11907:1;11887:9;:16;:21;11883:44;;;11917:10;11910:17;;;;11883:44;12032:2;12012:9;:16;:22;;12004:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12072:7;12089:9;12108;12139:28;12154:9;12165:1;12139:14;:28::i;:::-;12127:40;;;;;;;;;;;;12239:1;12234;:6;;;12230:1192;;;12375:1;12367:10;;12351:27;;12392:30;12710:4;12706:1;12695:9;12691:17;12687:28;12666:49;;2465:10;12851:19;;12767:103;;;12787:5;12767:43;;;12811:16;12829:17;12767:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12767:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12767:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12767:80:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12767:80:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12767:80:0;;;;;;;;;;;;;;;;:103;;;;12742:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12230:1192;;;;12966:2;12962:1;:6;;;12958:464;;;13140:116;13223:16;13213:27;;;;;;13160:81;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13160:81:0;;;13150:92;;;;;;13248:1;13244;:5;13251:1;13254;13140:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13140:116:0;;;;;;;;13132:124;;12958:464;;;13364:47;13384:16;13374:27;;;;;;13403:1;13406;13409;13364:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13364:47:0;;;;;;;;13356:55;;12958:464;12230:1192;11688:1740;;;;;;;;:::o;1392:921::-;1501:7;1510:9;1521;1821:3;1815:4;1811:14;1883:4;1869:12;1865:23;1853:10;1849:40;1843:47;1838:52;;1948:4;1934:12;1930:23;1918:10;1914:40;1908:47;1903:52;;2292:4;2283;2269:12;2265:23;2253:10;2249:40;2243:47;2239:58;2234:63;;1777:530;;;;;;:::o;3663:13154::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3663:13154:0;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2855200",
								"executionCost": "23304",
								"totalCost": "2878504"
							},
							"external": {
								"ALLOWANCE_TRANSFER_TYPEHASH()": "infinite",
								"DOMAIN_SEPARATOR_TYPEHASH()": "235",
								"NAME()": "infinite",
								"VERSION()": "infinite",
								"addDelegate(address)": "104649",
								"allowances(address,address,address)": "2258",
								"delegates(address,uint48)": "1456",
								"delegatesStart(address)": "652",
								"domainSeparator()": "493",
								"executeAllowanceTransfer(address,address,address,uint96,address,uint96,address,bytes)": "infinite",
								"generateTransferHash(address,address,address,uint96,address,uint96,uint16)": "infinite",
								"getDelegates(address,uint48,uint8)": "infinite",
								"getTokenAllowance(address,address,address)": "infinite",
								"getTokens(address,address)": "infinite",
								"removeDelegate(address)": "infinite",
								"resetAllowance(address,address)": "infinite",
								"setAllowance(address,address,uint96,uint16,uint32)": "infinite",
								"tokens(address,address,uint256)": "1085"
							},
							"internal": {
								"checkSignature(address,bytes memory,bytes memory,contract GnosisSafe)": "infinite",
								"generateTransferHashData(address,address,address,uint96,address,uint96,uint16)": "infinite",
								"getAllowance(address,address,address)": "infinite",
								"recoverSignature(bytes memory,bytes memory)": "infinite",
								"transfer(contract GnosisSafe,address,address payable,uint96)": "infinite",
								"updateAllowance(address,address,address,struct AllowanceModule.Allowance memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3663,
									"end": 16817,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "MSTORE"
								},
								{
									"begin": 5307,
									"end": 5417,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 5307,
									"end": 5417,
									"name": "POP"
								},
								{
									"begin": 3976,
									"end": 4042,
									"name": "PUSH",
									"value": "35AFF83D86937D35B32E04F0DDC6FF469290EEF2F1B692D8A815C89404D4749"
								},
								{
									"begin": 5377,
									"end": 5402,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5377,
									"end": 5402,
									"name": "SHL"
								},
								{
									"begin": 5404,
									"end": 5408,
									"name": "ADDRESS"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "MLOAD"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "ADD"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "DUP1"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "DUP4"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "DUP2"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "MSTORE"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "ADD"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "DUP3"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "AND"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "AND"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "DUP2"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "MSTORE"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "ADD"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "SWAP3"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "POP"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "POP"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "POP"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "SWAP1"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5366,
									"end": 5409,
									"name": "MSTORE"
								},
								{
									"begin": 5356,
									"end": 5410,
									"name": "DUP1"
								},
								{
									"begin": 5356,
									"end": 5410,
									"name": "MLOAD"
								},
								{
									"begin": 5356,
									"end": 5410,
									"name": "SWAP1"
								},
								{
									"begin": 5356,
									"end": 5410,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5356,
									"end": 5410,
									"name": "ADD"
								},
								{
									"begin": 5356,
									"end": 5410,
									"name": "KECCAK256"
								},
								{
									"begin": 5338,
									"end": 5353,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5338,
									"end": 5410,
									"name": "DUP2"
								},
								{
									"begin": 5338,
									"end": 5410,
									"name": "SWAP1"
								},
								{
									"begin": 5338,
									"end": 5410,
									"name": "SSTORE"
								},
								{
									"begin": 5338,
									"end": 5410,
									"name": "POP"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "DUP1"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "CODECOPY"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3663,
									"end": 16817,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7230582089e6c81bdfa4bb80a5f6bd6cb073fdcb4fb64d564b02765f1e5db7703dda824564736f6c634300050a0032",
									".code": [
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "POP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "LT"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "SHR"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "BEAEB388"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "GT"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "E71BDF41"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "GT"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "E71BDF41"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "EB37ABE0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "F56E81FA"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "F698DA25"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFA1AD74"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "BEAEB388"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "C19BF50E"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "CE60C692"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "D626E043"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "67E7646F"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "GT"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "67E7646F"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "8D0E8E1D"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "94B31FBD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "A3F4DF7E"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "B713C9D4"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "1DB61B54"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "310A3BB1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "43ABF5FE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "4515641A"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "EQ"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "REVERT"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "JUMPDEST"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "JUMPDEST"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "MLOAD"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "DUP1"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "DUP3"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "DUP2"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "MSTORE"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "ADD"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "SWAP2"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "MLOAD"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "DUP1"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "SWAP2"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "SUB"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "RETURN"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "JUMPDEST"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP2"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "ADD"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "AND"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "ADD"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP3"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP2"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "JUMPDEST"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "MLOAD"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP3"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "AND"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "AND"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP2"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "MSTORE"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "ADD"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP2"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "MLOAD"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP2"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SUB"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "RETURN"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "JUMPDEST"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "JUMPDEST"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "MLOAD"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "DUP3"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "DUP2"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "MSTORE"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "ADD"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "SWAP2"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "POP"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "POP"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "MLOAD"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "SWAP2"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "SUB"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "SWAP1"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "RETURN"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "AND"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "AND"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "AND"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "AND"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "AND"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "AND"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "AND"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DIV"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "MUL"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "MLOAD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "MSTORE"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP4"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "MSTORE"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "ADD"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP4"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP3"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "STOP"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "JUMPDEST"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "DUP1"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "DUP2"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "ADD"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "SWAP1"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "DUP1"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "DUP1"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "AND"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "SWAP1"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "ADD"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "SWAP1"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "SWAP3"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "SWAP2"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "SWAP1"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "POP"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "POP"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "POP"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "JUMPDEST"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "STOP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "JUMPDEST"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "ADD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "AND"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "ADD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP3"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "AND"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "ADD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP3"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "JUMPDEST"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "MLOAD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "ADD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP3"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SUB"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP3"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "MSTORE"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP4"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "MLOAD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "MSTORE"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "ADD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "MLOAD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "ADD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "MUL"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP4"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "ADD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP3"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "MLOAD"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "DUP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SUB"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP1"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "RETURN"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "JUMPDEST"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP2"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "ADD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "AND"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "ADD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP3"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP2"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "AND"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "ADD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP3"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP2"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "AND"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "ADD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP3"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP2"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "JUMPDEST"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "MLOAD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP3"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "MUL"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP4"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "ADD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP2"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "MLOAD"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "DUP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP2"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SUB"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP1"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "RETURN"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "JUMPDEST"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "JUMPDEST"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MLOAD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ADD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP3"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SUB"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP3"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MSTORE"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP4"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MLOAD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MSTORE"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ADD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MLOAD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ADD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP4"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ADD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "AND"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ISZERO"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "JUMPI"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP3"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SUB"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MLOAD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP4"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SUB"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "EXP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SUB"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "NOT"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "AND"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MSTORE"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ADD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "JUMPDEST"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP3"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MLOAD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SUB"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "SWAP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "RETURN"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "JUMPDEST"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP3"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP3"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP3"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "JUMPDEST"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MLOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP7"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP6"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP5"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP4"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP3"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP6"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MLOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SUB"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "RETURN"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "JUMPDEST"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP2"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "ADD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "AND"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "ADD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP3"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP2"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "AND"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "ADD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP3"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP2"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "AND"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "ADD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP3"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP2"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "AND"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "ADD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP3"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP2"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "AND"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "ADD"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP3"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP2"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "SWAP1"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "JUMPDEST"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "STOP"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "JUMPDEST"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "DUP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "DUP2"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "ADD"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "DUP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "DUP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "AND"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "ADD"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP3"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP2"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "DUP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "AND"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "ADD"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP3"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP2"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "SWAP1"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "POP"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "POP"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "POP"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "JUMPDEST"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "STOP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP3"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP3"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MLOAD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP5"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MSTORE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP4"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MSTORE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP3"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MSTORE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP4"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MLOAD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SUB"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "RETURN"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "JUMPDEST"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "AND"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "JUMPDEST"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "MLOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP3"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "MSTORE"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "ADD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "MLOAD"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "DUP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SUB"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "RETURN"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "JUMPDEST"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "DUP1"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "DUP2"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "ADD"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "SWAP1"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "DUP1"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "DUP1"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "AND"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "SWAP1"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "ADD"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "SWAP1"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "SWAP3"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "SWAP2"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "SWAP1"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "JUMPDEST"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "STOP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "JUMPDEST"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "AND"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP3"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "AND"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP3"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "AND"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP3"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "JUMPDEST"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MLOAD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP4"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "AND"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "AND"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MSTORE"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP3"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SUB"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP3"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MSTORE"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP5"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MLOAD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MSTORE"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MLOAD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MUL"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP4"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "ADD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP4"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "POP"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "MLOAD"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "DUP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP2"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SUB"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "SWAP1"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "RETURN"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "JUMPDEST"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "ADD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "AND"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "ADD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP3"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "AND"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "ADD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP3"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "ADD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP3"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "JUMPDEST"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MLOAD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP3"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "AND"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "AND"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MSTORE"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "ADD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MLOAD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SUB"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "RETURN"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "MLOAD"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "DUP1"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "DUP3"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "MSTORE"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "ADD"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "SWAP2"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "POP"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "POP"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "MLOAD"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "DUP1"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "SWAP2"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "SUB"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "SWAP1"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "RETURN"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "JUMPDEST"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "JUMPDEST"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP3"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SUB"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP3"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP4"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP4"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "AND"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ISZERO"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "JUMPI"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP3"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SUB"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP4"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SUB"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "EXP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SUB"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "NOT"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "AND"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "JUMPDEST"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP3"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SUB"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "RETURN"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "JUMPDEST"
										},
										{
											"begin": 3976,
											"end": 4042,
											"name": "PUSH",
											"value": "35AFF83D86937D35B32E04F0DDC6FF469290EEF2F1B692D8A815C89404D4749"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "SHL"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "DUP2"
										},
										{
											"begin": 3924,
											"end": 4042,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "JUMPDEST"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "MSTORE"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "MSTORE"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "KECCAK256"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP2"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SLOAD"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "EXP"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DIV"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "AND"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "DUP2"
										},
										{
											"begin": 4548,
											"end": 4596,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "JUMPDEST"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "MLOAD"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH data",
											"value": "80B006280932094E7CC965863EB5118DC07E5D272C6670C4A7C87299E04FCEEB"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "6C"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP2"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "CODECOPY"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "6C"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "ADD"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "POP"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "MLOAD"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP2"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SUB"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "KECCAK256"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "DUP2"
										},
										{
											"begin": 4080,
											"end": 4269,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "JUMPDEST"
										},
										{
											"begin": 8442,
											"end": 8468,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8442,
											"end": 8468,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8442,
											"end": 8468,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8442,
											"end": 8468,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 8442,
											"end": 8468,
											"name": "JUMPDEST"
										},
										{
											"begin": 8471,
											"end": 8515,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8492,
											"end": 8496,
											"name": "DUP10"
										},
										{
											"begin": 8499,
											"end": 8507,
											"name": "DUP5"
										},
										{
											"begin": 8509,
											"end": 8514,
											"name": "DUP11"
										},
										{
											"begin": 8471,
											"end": 8483,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 8471,
											"end": 8515,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8471,
											"end": 8515,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 8471,
											"end": 8515,
											"name": "JUMPDEST"
										},
										{
											"begin": 8442,
											"end": 8515,
											"name": "SWAP1"
										},
										{
											"begin": 8442,
											"end": 8515,
											"name": "POP"
										},
										{
											"begin": 8525,
											"end": 8554,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8557,
											"end": 8655,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 8590,
											"end": 8594,
											"name": "DUP11"
										},
										{
											"begin": 8597,
											"end": 8602,
											"name": "DUP11"
										},
										{
											"begin": 8604,
											"end": 8606,
											"name": "DUP11"
										},
										{
											"begin": 8608,
											"end": 8614,
											"name": "DUP11"
										},
										{
											"begin": 8616,
											"end": 8628,
											"name": "DUP11"
										},
										{
											"begin": 8630,
											"end": 8637,
											"name": "DUP11"
										},
										{
											"begin": 8639,
											"end": 8648,
											"name": "DUP9"
										},
										{
											"begin": 8639,
											"end": 8654,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8639,
											"end": 8654,
											"name": "ADD"
										},
										{
											"begin": 8639,
											"end": 8654,
											"name": "MLOAD"
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 8557,
											"end": 8655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8557,
											"end": 8655,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 8557,
											"end": 8655,
											"name": "JUMPDEST"
										},
										{
											"begin": 8525,
											"end": 8655,
											"name": "SWAP1"
										},
										{
											"begin": 8525,
											"end": 8655,
											"name": "POP"
										},
										{
											"begin": 8725,
											"end": 8726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8707,
											"end": 8716,
											"name": "DUP3"
										},
										{
											"begin": 8707,
											"end": 8722,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8707,
											"end": 8722,
											"name": "ADD"
										},
										{
											"begin": 8707,
											"end": 8722,
											"name": "MLOAD"
										},
										{
											"begin": 8707,
											"end": 8726,
											"name": "ADD"
										},
										{
											"begin": 8689,
											"end": 8698,
											"name": "DUP3"
										},
										{
											"begin": 8689,
											"end": 8704,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8689,
											"end": 8704,
											"name": "ADD"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "SWAP1"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "AND"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "SWAP1"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "DUP2"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "AND"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "DUP2"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "MSTORE"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "POP"
										},
										{
											"begin": 8689,
											"end": 8726,
											"name": "POP"
										},
										{
											"begin": 8736,
											"end": 8751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "DUP8"
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP4"
										},
										{
											"begin": 8754,
											"end": 8769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8754,
											"end": 8769,
											"name": "ADD"
										},
										{
											"begin": 8754,
											"end": 8769,
											"name": "MLOAD"
										},
										{
											"begin": 8754,
											"end": 8778,
											"name": "ADD"
										},
										{
											"begin": 8736,
											"end": 8778,
											"name": "SWAP1"
										},
										{
											"begin": 8736,
											"end": 8778,
											"name": "POP"
										},
										{
											"begin": 8854,
											"end": 8863,
											"name": "DUP3"
										},
										{
											"begin": 8854,
											"end": 8869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8854,
											"end": 8869,
											"name": "ADD"
										},
										{
											"begin": 8854,
											"end": 8869,
											"name": "MLOAD"
										},
										{
											"begin": 8843,
											"end": 8869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8843,
											"end": 8869,
											"name": "AND"
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "DUP2"
										},
										{
											"begin": 8843,
											"end": 8869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8843,
											"end": 8869,
											"name": "AND"
										},
										{
											"begin": 8843,
											"end": 8869,
											"name": "GT"
										},
										{
											"begin": 8843,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8843,
											"end": 8901,
											"name": "ISZERO"
										},
										{
											"begin": 8843,
											"end": 8901,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 8843,
											"end": 8901,
											"name": "JUMPI"
										},
										{
											"begin": 8843,
											"end": 8901,
											"name": "POP"
										},
										{
											"begin": 8885,
											"end": 8894,
											"name": "DUP3"
										},
										{
											"begin": 8885,
											"end": 8901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8885,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8885,
											"end": 8901,
											"name": "MLOAD"
										},
										{
											"begin": 8873,
											"end": 8901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8873,
											"end": 8901,
											"name": "AND"
										},
										{
											"begin": 8873,
											"end": 8881,
											"name": "DUP2"
										},
										{
											"begin": 8873,
											"end": 8901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8873,
											"end": 8901,
											"name": "AND"
										},
										{
											"begin": 8873,
											"end": 8901,
											"name": "GT"
										},
										{
											"begin": 8873,
											"end": 8901,
											"name": "ISZERO"
										},
										{
											"begin": 8843,
											"end": 8901,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 8843,
											"end": 8901,
											"name": "JUMPDEST"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "JUMPI"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "MLOAD"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP2"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "MSTORE"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "ADD"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP1"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP1"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "ADD"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP3"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP2"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "SUB"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP3"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "MSTORE"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP2"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "MSTORE"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "ADD"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP1"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH data",
											"value": "A7359A8519961096CF8FB65715F77DBC4DE2755AABF21E3445E245A34EE622DA"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "SWAP2"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "CODECOPY"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "ADD"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "SWAP2"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "POP"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "POP"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "MLOAD"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "DUP1"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "SWAP2"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "SUB"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "SWAP1"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "REVERT"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8835,
											"end": 8964,
											"name": "JUMPDEST"
										},
										{
											"begin": 8992,
											"end": 9000,
											"name": "DUP1"
										},
										{
											"begin": 8974,
											"end": 8983,
											"name": "DUP4"
										},
										{
											"begin": 8974,
											"end": 8989,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8974,
											"end": 8989,
											"name": "ADD"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "SWAP1"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "AND"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "SWAP1"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "DUP2"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "AND"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "DUP2"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "MSTORE"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "POP"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "POP"
										},
										{
											"begin": 9024,
											"end": 9025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9014,
											"end": 9021,
											"name": "DUP7"
										},
										{
											"begin": 9014,
											"end": 9025,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9014,
											"end": 9025,
											"name": "AND"
										},
										{
											"begin": 9014,
											"end": 9025,
											"name": "GT"
										},
										{
											"begin": 9010,
											"end": 9759,
											"name": "ISZERO"
										},
										{
											"begin": 9010,
											"end": 9759,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 9010,
											"end": 9759,
											"name": "JUMPI"
										},
										{
											"begin": 9117,
											"end": 9150,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 9117,
											"end": 9150,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 9117,
											"end": 9150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9117,
											"end": 9150,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 9117,
											"end": 9150,
											"name": "JUMPDEST"
										},
										{
											"begin": 9169,
											"end": 9174,
											"name": "DUP11"
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "AND"
										},
										{
											"begin": 9153,
											"end": 9165,
											"name": "DUP9"
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "AND"
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "EQ"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "JUMPI"
										},
										{
											"begin": 9189,
											"end": 9240,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 9210,
											"end": 9214,
											"name": "DUP13"
										},
										{
											"begin": 9217,
											"end": 9225,
											"name": "DUP8"
										},
										{
											"begin": 9227,
											"end": 9239,
											"name": "DUP11"
										},
										{
											"begin": 9189,
											"end": 9201,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 9189,
											"end": 9240,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9189,
											"end": 9240,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 9189,
											"end": 9240,
											"name": "JUMPDEST"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "JUMP"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "JUMPDEST"
										},
										{
											"begin": 9177,
											"end": 9186,
											"name": "DUP4"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 9153,
											"end": 9240,
											"name": "JUMPDEST"
										},
										{
											"begin": 9117,
											"end": 9240,
											"name": "SWAP1"
										},
										{
											"begin": 9117,
											"end": 9240,
											"name": "POP"
										},
										{
											"begin": 9290,
											"end": 9297,
											"name": "DUP7"
										},
										{
											"begin": 9265,
											"end": 9281,
											"name": "DUP2"
										},
										{
											"begin": 9265,
											"end": 9287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9265,
											"end": 9287,
											"name": "ADD"
										},
										{
											"begin": 9265,
											"end": 9287,
											"name": "MLOAD"
										},
										{
											"begin": 9265,
											"end": 9297,
											"name": "ADD"
										},
										{
											"begin": 9254,
											"end": 9297,
											"name": "SWAP2"
										},
										{
											"begin": 9254,
											"end": 9297,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "DUP1"
										},
										{
											"begin": 9382,
											"end": 9404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9382,
											"end": 9404,
											"name": "ADD"
										},
										{
											"begin": 9382,
											"end": 9404,
											"name": "MLOAD"
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "AND"
										},
										{
											"begin": 9371,
											"end": 9379,
											"name": "DUP3"
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "AND"
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "GT"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "DUP1"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "ISZERO"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "JUMPI"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "POP"
										},
										{
											"begin": 9420,
											"end": 9436,
											"name": "DUP1"
										},
										{
											"begin": 9420,
											"end": 9443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9420,
											"end": 9443,
											"name": "ADD"
										},
										{
											"begin": 9420,
											"end": 9443,
											"name": "MLOAD"
										},
										{
											"begin": 9408,
											"end": 9443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9408,
											"end": 9443,
											"name": "AND"
										},
										{
											"begin": 9408,
											"end": 9416,
											"name": "DUP3"
										},
										{
											"begin": 9408,
											"end": 9443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9408,
											"end": 9443,
											"name": "AND"
										},
										{
											"begin": 9408,
											"end": 9443,
											"name": "GT"
										},
										{
											"begin": 9408,
											"end": 9443,
											"name": "ISZERO"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 9371,
											"end": 9443,
											"name": "JUMPDEST"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "JUMPI"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "MLOAD"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP2"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "MSTORE"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "ADD"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP1"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP1"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "ADD"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP3"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP2"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "SUB"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP3"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "MSTORE"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "48"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP2"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "MSTORE"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "ADD"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP1"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH data",
											"value": "B549D52C5706645679000944AE1BCAEC935D0B8C387F4240A09789BE7DC8C0D4"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "48"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "SWAP2"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "CODECOPY"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "ADD"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "SWAP2"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "POP"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "POP"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "MLOAD"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "DUP1"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "SWAP2"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "SUB"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "SWAP1"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "REVERT"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 9363,
											"end": 9520,
											"name": "JUMPDEST"
										},
										{
											"begin": 9559,
											"end": 9567,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9550,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "MSTORE"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9567,
											"name": "POP"
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "DUP11"
										},
										{
											"begin": 9653,
											"end": 9674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9653,
											"end": 9674,
											"name": "AND"
										},
										{
											"begin": 9653,
											"end": 9665,
											"name": "DUP9"
										},
										{
											"begin": 9653,
											"end": 9674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9653,
											"end": 9674,
											"name": "AND"
										},
										{
											"begin": 9653,
											"end": 9674,
											"name": "EQ"
										},
										{
											"begin": 9649,
											"end": 9748,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 9649,
											"end": 9748,
											"name": "JUMPI"
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 9700,
											"end": 9704,
											"name": "DUP13"
										},
										{
											"begin": 9707,
											"end": 9715,
											"name": "DUP8"
										},
										{
											"begin": 9717,
											"end": 9729,
											"name": "DUP11"
										},
										{
											"begin": 9731,
											"end": 9747,
											"name": "DUP5"
										},
										{
											"begin": 9676,
											"end": 9691,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "JUMPDEST"
										},
										{
											"begin": 9649,
											"end": 9748,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 9649,
											"end": 9748,
											"name": "JUMPDEST"
										},
										{
											"begin": 9010,
											"end": 9759,
											"name": "POP"
										},
										{
											"begin": 9010,
											"end": 9759,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 9010,
											"end": 9759,
											"name": "JUMPDEST"
										},
										{
											"begin": 9768,
											"end": 9826,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 9792,
											"end": 9796,
											"name": "DUP12"
										},
										{
											"begin": 9799,
											"end": 9807,
											"name": "DUP7"
										},
										{
											"begin": 9809,
											"end": 9814,
											"name": "DUP13"
										},
										{
											"begin": 9816,
											"end": 9825,
											"name": "DUP7"
										},
										{
											"begin": 9768,
											"end": 9783,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 9768,
											"end": 9826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9768,
											"end": 9826,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 9768,
											"end": 9826,
											"name": "JUMPDEST"
										},
										{
											"begin": 9908,
											"end": 9967,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 9923,
											"end": 9931,
											"name": "DUP6"
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "DUP6"
										},
										{
											"begin": 9944,
											"end": 9960,
											"name": "DUP5"
										},
										{
											"begin": 9962,
											"end": 9966,
											"name": "DUP15"
										},
										{
											"begin": 9908,
											"end": 9922,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 9908,
											"end": 9967,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9908,
											"end": 9967,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 9908,
											"end": 9967,
											"name": "JUMPDEST"
										},
										{
											"begin": 10010,
											"end": 10011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10007,
											"name": "DUP7"
										},
										{
											"begin": 10000,
											"end": 10011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10000,
											"end": 10011,
											"name": "AND"
										},
										{
											"begin": 10000,
											"end": 10011,
											"name": "GT"
										},
										{
											"begin": 9996,
											"end": 10180,
											"name": "ISZERO"
										},
										{
											"begin": 9996,
											"end": 10180,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 9996,
											"end": 10180,
											"name": "JUMPI"
										},
										{
											"begin": 10121,
											"end": 10169,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "DUP12"
										},
										{
											"begin": 10136,
											"end": 10148,
											"name": "DUP9"
										},
										{
											"begin": 10150,
											"end": 10159,
											"name": "ORIGIN"
										},
										{
											"begin": 10161,
											"end": 10168,
											"name": "DUP10"
										},
										{
											"begin": 10121,
											"end": 10129,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 10121,
											"end": 10169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10121,
											"end": 10169,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 10121,
											"end": 10169,
											"name": "JUMPDEST"
										},
										{
											"begin": 9996,
											"end": 10180,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 9996,
											"end": 10180,
											"name": "JUMPDEST"
										},
										{
											"begin": 10215,
											"end": 10248,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 10224,
											"end": 10228,
											"name": "DUP12"
										},
										{
											"begin": 10230,
											"end": 10235,
											"name": "DUP12"
										},
										{
											"begin": 10237,
											"end": 10239,
											"name": "DUP12"
										},
										{
											"begin": 10241,
											"end": 10247,
											"name": "DUP12"
										},
										{
											"begin": 10215,
											"end": 10223,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 10215,
											"end": 10248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10215,
											"end": 10248,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 10215,
											"end": 10248,
											"name": "JUMPDEST"
										},
										{
											"begin": 10296,
											"end": 10300,
											"name": "DUP11"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "A11CCA2C2027E28AB0046AAB4D4040F59D8B06E819CCD974C1E53E86AA814C19"
										},
										{
											"begin": 10303,
											"end": 10311,
											"name": "DUP7"
										},
										{
											"begin": 10313,
											"end": 10318,
											"name": "DUP13"
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "DUP13"
										},
										{
											"begin": 10324,
											"end": 10330,
											"name": "DUP13"
										},
										{
											"begin": 10350,
											"end": 10351,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10332,
											"end": 10341,
											"name": "DUP10"
										},
										{
											"begin": 10332,
											"end": 10347,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10332,
											"end": 10347,
											"name": "ADD"
										},
										{
											"begin": 10332,
											"end": 10347,
											"name": "MLOAD"
										},
										{
											"begin": 10332,
											"end": 10351,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP7"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP6"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP5"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP4"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "AND"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "SWAP6"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "SWAP1"
										},
										{
											"begin": 10263,
											"end": 10352,
											"name": "LOG2"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "POP"
										},
										{
											"begin": 8145,
											"end": 10359,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "JUMPDEST"
										},
										{
											"begin": 15212,
											"end": 15235,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 15212,
											"end": 15235,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 15212,
											"end": 15235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15212,
											"end": 15235,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 15212,
											"end": 15235,
											"name": "JUMPDEST"
										},
										{
											"begin": 15238,
											"end": 15247,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15248,
											"end": 15258,
											"name": "CALLER"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "AND"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "AND"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "DUP2"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "MSTORE"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "ADD"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "SWAP1"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "DUP2"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "MSTORE"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "ADD"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15238,
											"end": 15259,
											"name": "KECCAK256"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15267,
											"end": 15275,
											"name": "DUP4"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "DUP2"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "MSTORE"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "DUP2"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "MSTORE"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15238,
											"end": 15277,
											"name": "KECCAK256"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "MLOAD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "MSTORE"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP2"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP3"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SLOAD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "EXP"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DIV"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP2"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "MSTORE"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP3"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SLOAD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "EXP"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DIV"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP2"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "MSTORE"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP3"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "ADD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SLOAD"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "EXP"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DIV"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "AND"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "DUP2"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "MSTORE"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "POP"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "POP"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "SWAP1"
										},
										{
											"begin": 15212,
											"end": 15277,
											"name": "POP"
										},
										{
											"begin": 15368,
											"end": 15369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15340,
											"end": 15370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15340,
											"end": 15370,
											"name": "AND"
										},
										{
											"begin": 15340,
											"end": 15347,
											"name": "DUP2"
										},
										{
											"begin": 15340,
											"end": 15356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15340,
											"end": 15356,
											"name": "ADD"
										},
										{
											"begin": 15340,
											"end": 15356,
											"name": "MLOAD"
										},
										{
											"begin": 15340,
											"end": 15370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15340,
											"end": 15370,
											"name": "AND"
										},
										{
											"begin": 15340,
											"end": 15370,
											"name": "EQ"
										},
										{
											"begin": 15337,
											"end": 15379,
											"name": "ISZERO"
										},
										{
											"begin": 15337,
											"end": 15379,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 15337,
											"end": 15379,
											"name": "JUMPI"
										},
										{
											"begin": 15372,
											"end": 15379,
											"name": "POP"
										},
										{
											"begin": 15372,
											"end": 15379,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15372,
											"end": 15379,
											"name": "JUMP"
										},
										{
											"begin": 15337,
											"end": 15379,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 15337,
											"end": 15379,
											"name": "JUMPDEST"
										},
										{
											"begin": 15388,
											"end": 15420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15423,
											"end": 15429,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15430,
											"end": 15440,
											"name": "CALLER"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "AND"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "AND"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "DUP2"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "MSTORE"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "ADD"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "SWAP1"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "DUP2"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "MSTORE"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "ADD"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15423,
											"end": 15441,
											"name": "KECCAK256"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15442,
											"end": 15450,
											"name": "DUP5"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "AND"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "AND"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "DUP2"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "MSTORE"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "ADD"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "SWAP1"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "DUP2"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "MSTORE"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "ADD"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15423,
											"end": 15451,
											"name": "KECCAK256"
										},
										{
											"begin": 15388,
											"end": 15451,
											"name": "SWAP1"
										},
										{
											"begin": 15388,
											"end": 15451,
											"name": "POP"
										},
										{
											"begin": 15466,
											"end": 15475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15478,
											"end": 15479,
											"name": "DUP1"
										},
										{
											"begin": 15466,
											"end": 15479,
											"name": "SWAP1"
										},
										{
											"begin": 15466,
											"end": 15479,
											"name": "POP"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "JUMPDEST"
										},
										{
											"begin": 15485,
											"end": 15499,
											"name": "DUP2"
										},
										{
											"begin": 15485,
											"end": 15506,
											"name": "DUP1"
										},
										{
											"begin": 15485,
											"end": 15506,
											"name": "SLOAD"
										},
										{
											"begin": 15485,
											"end": 15506,
											"name": "SWAP1"
										},
										{
											"begin": 15485,
											"end": 15506,
											"name": "POP"
										},
										{
											"begin": 15481,
											"end": 15482,
											"name": "DUP2"
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "LT"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "ISZERO"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "JUMPI"
										},
										{
											"begin": 15527,
											"end": 15540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15543,
											"end": 15557,
											"name": "DUP3"
										},
										{
											"begin": 15558,
											"end": 15559,
											"name": "DUP3"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "DUP2"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "SLOAD"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "DUP2"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "LT"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "JUMPI"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "INVALID"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "JUMPDEST"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "SWAP1"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "MSTORE"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "KECCAK256"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "ADD"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "SWAP1"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "SLOAD"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "SWAP1"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "EXP"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "SWAP1"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "DIV"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15543,
											"end": 15560,
											"name": "AND"
										},
										{
											"begin": 15527,
											"end": 15560,
											"name": "SWAP1"
										},
										{
											"begin": 15527,
											"end": 15560,
											"name": "POP"
										},
										{
											"begin": 15636,
											"end": 15662,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 15636,
											"end": 15662,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15636,
											"end": 15662,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15636,
											"end": 15662,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 15636,
											"end": 15662,
											"name": "JUMPDEST"
										},
										{
											"begin": 15665,
											"end": 15706,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 15678,
											"end": 15688,
											"name": "CALLER"
										},
										{
											"begin": 15690,
											"end": 15698,
											"name": "DUP8"
										},
										{
											"begin": 15700,
											"end": 15705,
											"name": "DUP5"
										},
										{
											"begin": 15665,
											"end": 15677,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 15665,
											"end": 15706,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15665,
											"end": 15706,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 15665,
											"end": 15706,
											"name": "JUMPDEST"
										},
										{
											"begin": 15636,
											"end": 15706,
											"name": "SWAP1"
										},
										{
											"begin": 15636,
											"end": 15706,
											"name": "POP"
										},
										{
											"begin": 15739,
											"end": 15740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15720,
											"end": 15729,
											"name": "DUP2"
										},
										{
											"begin": 15720,
											"end": 15736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15720,
											"end": 15736,
											"name": "ADD"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "SWAP1"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "AND"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "SWAP1"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "DUP2"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "AND"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "DUP2"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "MSTORE"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "POP"
										},
										{
											"begin": 15720,
											"end": 15740,
											"name": "POP"
										},
										{
											"begin": 15772,
											"end": 15773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15754,
											"end": 15763,
											"name": "DUP2"
										},
										{
											"begin": 15754,
											"end": 15769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15754,
											"end": 15769,
											"name": "ADD"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "SWAP1"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "AND"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "SWAP1"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "DUP2"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "AND"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "DUP2"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "MSTORE"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "POP"
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "POP"
										},
										{
											"begin": 15812,
											"end": 15813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15787,
											"end": 15796,
											"name": "DUP2"
										},
										{
											"begin": 15787,
											"end": 15809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15787,
											"end": 15809,
											"name": "ADD"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "SWAP1"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "AND"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "SWAP1"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "DUP2"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "AND"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "DUP2"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "MSTORE"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "POP"
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "POP"
										},
										{
											"begin": 15852,
											"end": 15853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15827,
											"end": 15836,
											"name": "DUP2"
										},
										{
											"begin": 15827,
											"end": 15849,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15827,
											"end": 15849,
											"name": "ADD"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "SWAP1"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "AND"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "SWAP1"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "DUP2"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "AND"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "DUP2"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "MSTORE"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "POP"
										},
										{
											"begin": 15827,
											"end": 15853,
											"name": "POP"
										},
										{
											"begin": 15867,
											"end": 15922,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 15883,
											"end": 15893,
											"name": "CALLER"
										},
										{
											"begin": 15895,
											"end": 15903,
											"name": "DUP8"
										},
										{
											"begin": 15905,
											"end": 15910,
											"name": "DUP5"
										},
										{
											"begin": 15912,
											"end": 15921,
											"name": "DUP5"
										},
										{
											"begin": 15867,
											"end": 15882,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 15867,
											"end": 15922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15867,
											"end": 15922,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 15867,
											"end": 15922,
											"name": "JUMPDEST"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "POP"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "POP"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "DUP1"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "DUP1"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "ADD"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "SWAP2"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "POP"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "POP"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "JUMP"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "JUMPDEST"
										},
										{
											"begin": 15461,
											"end": 15933,
											"name": "POP"
										},
										{
											"begin": 15985,
											"end": 15992,
											"name": "DUP2"
										},
										{
											"begin": 15985,
											"end": 15997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 15997,
											"name": "ADD"
										},
										{
											"begin": 15985,
											"end": 15997,
											"name": "MLOAD"
										},
										{
											"begin": 15942,
											"end": 15951,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15952,
											"end": 15962,
											"name": "CALLER"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "AND"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "AND"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "DUP2"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "MSTORE"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "ADD"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "SWAP1"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "DUP2"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "MSTORE"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "ADD"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15942,
											"end": 15963,
											"name": "KECCAK256"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15964,
											"end": 15971,
											"name": "DUP5"
										},
										{
											"begin": 15964,
											"end": 15976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15964,
											"end": 15976,
											"name": "ADD"
										},
										{
											"begin": 15964,
											"end": 15976,
											"name": "MLOAD"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "AND"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "AND"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "DUP2"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "MSTORE"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "ADD"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "SWAP1"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "DUP2"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "MSTORE"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "ADD"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15942,
											"end": 15977,
											"name": "KECCAK256"
										},
										{
											"begin": 15942,
											"end": 15982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15942,
											"end": 15982,
											"name": "ADD"
										},
										{
											"begin": 15942,
											"end": 15982,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "EXP"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "DUP2"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "SLOAD"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "DUP2"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "MUL"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "NOT"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "AND"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "SWAP1"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "DUP4"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "AND"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "MUL"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "OR"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "SWAP1"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "SSTORE"
										},
										{
											"begin": 15942,
											"end": 15997,
											"name": "POP"
										},
										{
											"begin": 16050,
											"end": 16057,
											"name": "DUP2"
										},
										{
											"begin": 16050,
											"end": 16062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16050,
											"end": 16062,
											"name": "ADD"
										},
										{
											"begin": 16050,
											"end": 16062,
											"name": "MLOAD"
										},
										{
											"begin": 16007,
											"end": 16016,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16017,
											"end": 16027,
											"name": "CALLER"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "AND"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "AND"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "MSTORE"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "SWAP1"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "MSTORE"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16007,
											"end": 16028,
											"name": "KECCAK256"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16029,
											"end": 16036,
											"name": "DUP5"
										},
										{
											"begin": 16029,
											"end": 16041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16029,
											"end": 16041,
											"name": "ADD"
										},
										{
											"begin": 16029,
											"end": 16041,
											"name": "MLOAD"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "AND"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "AND"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "MSTORE"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "SWAP1"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "MSTORE"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16007,
											"end": 16042,
											"name": "KECCAK256"
										},
										{
											"begin": 16007,
											"end": 16047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16007,
											"end": 16047,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16047,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "EXP"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "SLOAD"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "MUL"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "NOT"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "AND"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "SWAP1"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "DUP4"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "AND"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "MUL"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "OR"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "SWAP1"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "SSTORE"
										},
										{
											"begin": 16007,
											"end": 16062,
											"name": "POP"
										},
										{
											"begin": 16092,
											"end": 16102,
											"name": "CALLER"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "AND"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "PUSH",
											"value": "DCCC2D936DED24D2153D2760581A7F0DCB23EC71190C9726B3584CDD700214D4"
										},
										{
											"begin": 16104,
											"end": 16112,
											"name": "DUP5"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "MLOAD"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "DUP1"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "DUP3"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "AND"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "AND"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "DUP2"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "MSTORE"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "ADD"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "SWAP2"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "POP"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "POP"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "MLOAD"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "DUP1"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "SWAP2"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "SUB"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "SWAP1"
										},
										{
											"begin": 16077,
											"end": 16113,
											"name": "LOG2"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "POP"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "POP"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "JUMPDEST"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "POP"
										},
										{
											"begin": 15153,
											"end": 16120,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "JUMPDEST"
										},
										{
											"begin": 14081,
											"end": 14097,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14116,
											"end": 14122,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14123,
											"end": 14127,
											"name": "DUP5"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "AND"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "AND"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "DUP2"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "MSTORE"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "ADD"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "SWAP1"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "DUP2"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "MSTORE"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "ADD"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "KECCAK256"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "DUP4"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "AND"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "AND"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "DUP2"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "MSTORE"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "DUP2"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "MSTORE"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "KECCAK256"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SLOAD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "MUL"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "MLOAD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP2"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "MSTORE"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP3"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP2"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP2"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP2"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "MSTORE"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP3"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SLOAD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "ISZERO"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "JUMPI"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "MUL"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP3"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP2"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "MSTORE"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "KECCAK256"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "JUMPDEST"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP2"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SLOAD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "EXP"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DIV"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "AND"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "AND"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP2"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "MSTORE"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "ADD"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "DUP4"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "GT"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "JUMPI"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "JUMPDEST"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "POP"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "POP"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "POP"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "POP"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "POP"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP3"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "SWAP2"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "POP"
										},
										{
											"begin": 14009,
											"end": 14145,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "JUMPDEST"
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "JUMPDEST"
										},
										{
											"begin": 14275,
											"end": 14301,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 14275,
											"end": 14301,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14275,
											"end": 14301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14275,
											"end": 14301,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 14275,
											"end": 14301,
											"name": "JUMPDEST"
										},
										{
											"begin": 14304,
											"end": 14339,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 14317,
											"end": 14321,
											"name": "DUP6"
										},
										{
											"begin": 14323,
											"end": 14331,
											"name": "DUP6"
										},
										{
											"begin": 14333,
											"end": 14338,
											"name": "DUP6"
										},
										{
											"begin": 14304,
											"end": 14316,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 14304,
											"end": 14339,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14304,
											"end": 14339,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 14304,
											"end": 14339,
											"name": "JUMPDEST"
										},
										{
											"begin": 14275,
											"end": 14339,
											"name": "SWAP1"
										},
										{
											"begin": 14275,
											"end": 14339,
											"name": "POP"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "MLOAD"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "DUP1"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "ADD"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "MSTORE"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "DUP1"
										},
										{
											"begin": 14378,
											"end": 14387,
											"name": "DUP3"
										},
										{
											"begin": 14378,
											"end": 14394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14394,
											"name": "ADD"
										},
										{
											"begin": 14378,
											"end": 14394,
											"name": "MLOAD"
										},
										{
											"begin": 14370,
											"end": 14395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14370,
											"end": 14395,
											"name": "AND"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "DUP2"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "MSTORE"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "ADD"
										},
										{
											"begin": 14417,
											"end": 14426,
											"name": "DUP3"
										},
										{
											"begin": 14417,
											"end": 14432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14417,
											"end": 14432,
											"name": "ADD"
										},
										{
											"begin": 14417,
											"end": 14432,
											"name": "MLOAD"
										},
										{
											"begin": 14409,
											"end": 14433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14409,
											"end": 14433,
											"name": "AND"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "DUP2"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "MSTORE"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "ADD"
										},
										{
											"begin": 14455,
											"end": 14464,
											"name": "DUP3"
										},
										{
											"begin": 14455,
											"end": 14477,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14455,
											"end": 14477,
											"name": "ADD"
										},
										{
											"begin": 14455,
											"end": 14477,
											"name": "MLOAD"
										},
										{
											"begin": 14447,
											"end": 14478,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 14447,
											"end": 14478,
											"name": "AND"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "DUP2"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "MSTORE"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "ADD"
										},
										{
											"begin": 14500,
											"end": 14509,
											"name": "DUP3"
										},
										{
											"begin": 14500,
											"end": 14522,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14500,
											"end": 14522,
											"name": "ADD"
										},
										{
											"begin": 14500,
											"end": 14522,
											"name": "MLOAD"
										},
										{
											"begin": 14492,
											"end": 14523,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14492,
											"end": 14523,
											"name": "AND"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "DUP2"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "MSTORE"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "ADD"
										},
										{
											"begin": 14545,
											"end": 14554,
											"name": "DUP3"
										},
										{
											"begin": 14545,
											"end": 14560,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14545,
											"end": 14560,
											"name": "ADD"
										},
										{
											"begin": 14545,
											"end": 14560,
											"name": "MLOAD"
										},
										{
											"begin": 14537,
											"end": 14561,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 14537,
											"end": 14561,
											"name": "AND"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "DUP2"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "MSTORE"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "POP"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "SWAP2"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "POP"
										},
										{
											"begin": 14349,
											"end": 14571,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP4"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "SWAP3"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "POP"
										},
										{
											"begin": 14151,
											"end": 14578,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "JUMPDEST"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MLOAD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ADD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MSTORE"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP1"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MSTORE"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "ADD"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "PUSH",
											"value": "416C6C6F77616E6365204D6F64756C6500000000000000000000000000000000"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MSTORE"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "POP"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "DUP2"
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "JUMPDEST"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP3"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "KECCAK256"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP2"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "KECCAK256"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "MSTORE"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "KECCAK256"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP3"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP3"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SLOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "EXP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DIV"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SLOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "EXP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DIV"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SLOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "EXP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DIV"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SLOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "EXP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DIV"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "ADD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SLOAD"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "EXP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DIV"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "DUP6"
										},
										{
											"begin": 4313,
											"end": 4401,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "JUMPDEST"
										},
										{
											"begin": 6079,
											"end": 6087,
											"name": "DUP5"
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6047,
											"name": "CALLER"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "DUP2"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "MSTORE"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "ADD"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "DUP2"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "MSTORE"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "ADD"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "KECCAK256"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6064,
											"name": "DUP8"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "DUP2"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "MSTORE"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "ADD"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "DUP2"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "MSTORE"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "ADD"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "KECCAK256"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "ADD"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "SLOAD"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "EXP"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "DIV"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6075,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6087,
											"name": "EQ"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "JUMPI"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "MLOAD"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP2"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "MSTORE"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "ADD"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP1"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP1"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "ADD"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP3"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP2"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "SUB"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP3"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "MSTORE"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP2"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "MSTORE"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "ADD"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP1"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH data",
											"value": "58537FA1960FBEBCCC117B6218B0AF08A9F148039299593EA287E665DD534BB1"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "SWAP2"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "CODECOPY"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "ADD"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "SWAP2"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "POP"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "POP"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "MLOAD"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "DUP1"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "SWAP2"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "SUB"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "SWAP1"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "REVERT"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 6019,
											"end": 6152,
											"name": "JUMPDEST"
										},
										{
											"begin": 6162,
											"end": 6188,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 6162,
											"end": 6188,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6162,
											"end": 6188,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6162,
											"end": 6188,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 6162,
											"end": 6188,
											"name": "JUMPDEST"
										},
										{
											"begin": 6191,
											"end": 6232,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 6204,
											"end": 6214,
											"name": "CALLER"
										},
										{
											"begin": 6216,
											"end": 6224,
											"name": "DUP8"
										},
										{
											"begin": 6226,
											"end": 6231,
											"name": "DUP8"
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 6191,
											"end": 6232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6191,
											"end": 6232,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 6191,
											"end": 6232,
											"name": "JUMPDEST"
										},
										{
											"begin": 6162,
											"end": 6232,
											"name": "SWAP1"
										},
										{
											"begin": 6162,
											"end": 6232,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "DUP2"
										},
										{
											"begin": 6246,
											"end": 6261,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 6246,
											"end": 6261,
											"name": "ADD"
										},
										{
											"begin": 6246,
											"end": 6261,
											"name": "MLOAD"
										},
										{
											"begin": 6246,
											"end": 6266,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6246,
											"end": 6266,
											"name": "AND"
										},
										{
											"begin": 6246,
											"end": 6266,
											"name": "EQ"
										},
										{
											"begin": 6242,
											"end": 6452,
											"name": "ISZERO"
										},
										{
											"begin": 6242,
											"end": 6452,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 6242,
											"end": 6452,
											"name": "JUMPI"
										},
										{
											"begin": 6386,
											"end": 6387,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6368,
											"end": 6377,
											"name": "DUP2"
										},
										{
											"begin": 6368,
											"end": 6383,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 6368,
											"end": 6383,
											"name": "ADD"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "SWAP1"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "AND"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "SWAP1"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "DUP2"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "AND"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "DUP2"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "MSTORE"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "POP"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "POP"
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6418,
											"name": "CALLER"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "AND"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "AND"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "DUP2"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "MSTORE"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "ADD"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "DUP2"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "MSTORE"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "ADD"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "KECCAK256"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6428,
											"name": "DUP8"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "AND"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "AND"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "DUP2"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "MSTORE"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "ADD"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "DUP2"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "MSTORE"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "ADD"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6429,
											"name": "KECCAK256"
										},
										{
											"begin": 6435,
											"end": 6440,
											"name": "DUP6"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "DUP3"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SUB"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "MSTORE"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "KECCAK256"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "ADD"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP2"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP3"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP2"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP2"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "EXP"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "DUP2"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SLOAD"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "DUP2"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "MUL"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "NOT"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "AND"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "DUP4"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "AND"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "MUL"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "OR"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SWAP1"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "SSTORE"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "POP"
										},
										{
											"begin": 6401,
											"end": 6441,
											"name": "POP"
										},
										{
											"begin": 6242,
											"end": 6452,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 6242,
											"end": 6452,
											"name": "JUMPDEST"
										},
										{
											"begin": 6523,
											"end": 6540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 6550,
											"end": 6553,
											"name": "TIMESTAMP"
										},
										{
											"begin": 6550,
											"end": 6558,
											"name": "DUP2"
										},
										{
											"begin": 6550,
											"end": 6558,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6550,
											"end": 6558,
											"name": "JUMPI"
										},
										{
											"begin": 6550,
											"end": 6558,
											"name": "INVALID"
										},
										{
											"begin": 6550,
											"end": 6558,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 6550,
											"end": 6558,
											"name": "JUMPDEST"
										},
										{
											"begin": 6550,
											"end": 6558,
											"name": "DIV"
										},
										{
											"begin": 6523,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6523,
											"end": 6559,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP4"
										},
										{
											"begin": 6573,
											"end": 6589,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6573,
											"end": 6589,
											"name": "AND"
										},
										{
											"begin": 6573,
											"end": 6589,
											"name": "GT"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "ISZERO"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "JUMPI"
										},
										{
											"begin": 6629,
											"end": 6639,
											"name": "DUP1"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "AND"
										},
										{
											"begin": 6613,
											"end": 6625,
											"name": "DUP4"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "AND"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "GT"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "ISZERO"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "JUMPI"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "MLOAD"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP2"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "MSTORE"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "ADD"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP1"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP1"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "ADD"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP3"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP2"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "SUB"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP3"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "MSTORE"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP2"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "MSTORE"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "ADD"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP1"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "7265736574426173654D696E203C3D2063757272656E744D696E000000000000"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP2"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "MSTORE"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "POP"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "ADD"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "SWAP2"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "POP"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "POP"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "MLOAD"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "DUP1"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "SWAP2"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "SUB"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "SWAP1"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "REVERT"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 6605,
											"end": 6670,
											"name": "JUMPDEST"
										},
										{
											"begin": 6753,
											"end": 6765,
											"name": "DUP4"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "AND"
										},
										{
											"begin": 6737,
											"end": 6749,
											"name": "DUP4"
										},
										{
											"begin": 6724,
											"end": 6734,
											"name": "DUP3"
										},
										{
											"begin": 6724,
											"end": 6749,
											"name": "SUB"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "AND"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "DUP2"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "JUMPI"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "INVALID"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "JUMPDEST"
										},
										{
											"begin": 6723,
											"end": 6765,
											"name": "MOD"
										},
										{
											"begin": 6709,
											"end": 6719,
											"name": "DUP2"
										},
										{
											"begin": 6709,
											"end": 6766,
											"name": "SUB"
										},
										{
											"begin": 6684,
											"end": 6693,
											"name": "DUP3"
										},
										{
											"begin": 6684,
											"end": 6706,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6684,
											"end": 6706,
											"name": "ADD"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "AND"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "DUP2"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "AND"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "DUP2"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "MSTORE"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "POP"
										},
										{
											"begin": 6684,
											"end": 6766,
											"name": "POP"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "JUMP"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "JUMPDEST"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6796,
											"name": "DUP3"
										},
										{
											"begin": 6787,
											"end": 6809,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6787,
											"end": 6809,
											"name": "ADD"
										},
										{
											"begin": 6787,
											"end": 6809,
											"name": "MLOAD"
										},
										{
											"begin": 6787,
											"end": 6814,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6787,
											"end": 6814,
											"name": "AND"
										},
										{
											"begin": 6787,
											"end": 6814,
											"name": "EQ"
										},
										{
											"begin": 6783,
											"end": 6876,
											"name": "ISZERO"
										},
										{
											"begin": 6783,
											"end": 6876,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 6783,
											"end": 6876,
											"name": "JUMPI"
										},
										{
											"begin": 6855,
											"end": 6865,
											"name": "DUP1"
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP3"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "ADD"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "SWAP1"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "AND"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "SWAP1"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "DUP2"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "AND"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "DUP2"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "MSTORE"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "POP"
										},
										{
											"begin": 6830,
											"end": 6865,
											"name": "POP"
										},
										{
											"begin": 6783,
											"end": 6876,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 6783,
											"end": 6876,
											"name": "JUMPDEST"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 6569,
											"end": 6876,
											"name": "JUMPDEST"
										},
										{
											"begin": 6910,
											"end": 6922,
											"name": "DUP4"
										},
										{
											"begin": 6885,
											"end": 6894,
											"name": "DUP3"
										},
										{
											"begin": 6885,
											"end": 6907,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6885,
											"end": 6907,
											"name": "ADD"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "SWAP1"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "AND"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "SWAP1"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "DUP2"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "AND"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "DUP2"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "MSTORE"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "POP"
										},
										{
											"begin": 6885,
											"end": 6922,
											"name": "POP"
										},
										{
											"begin": 6951,
											"end": 6966,
											"name": "DUP5"
										},
										{
											"begin": 6932,
											"end": 6941,
											"name": "DUP3"
										},
										{
											"begin": 6932,
											"end": 6948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6932,
											"end": 6948,
											"name": "ADD"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "SWAP1"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "AND"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "SWAP1"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "DUP2"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "AND"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "DUP2"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "MSTORE"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "POP"
										},
										{
											"begin": 6932,
											"end": 6966,
											"name": "POP"
										},
										{
											"begin": 6976,
											"end": 7031,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 6992,
											"end": 7002,
											"name": "CALLER"
										},
										{
											"begin": 7004,
											"end": 7012,
											"name": "DUP9"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP9"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP6"
										},
										{
											"begin": 6976,
											"end": 6991,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 6976,
											"end": 7031,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7031,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 6976,
											"end": 7031,
											"name": "JUMPDEST"
										},
										{
											"begin": 7059,
											"end": 7069,
											"name": "CALLER"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "49CAA04C5E1E168069C09DF7F88C07CA87BE980B0BF4570AB77FE9AAE3CA7EBA"
										},
										{
											"begin": 7071,
											"end": 7079,
											"name": "DUP9"
										},
										{
											"begin": 7081,
											"end": 7086,
											"name": "DUP9"
										},
										{
											"begin": 7088,
											"end": 7103,
											"name": "DUP9"
										},
										{
											"begin": 7105,
											"end": 7117,
											"name": "DUP9"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MLOAD"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP1"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP6"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP2"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MSTORE"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "ADD"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP5"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP2"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MSTORE"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "ADD"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP4"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP2"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MSTORE"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "ADD"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP3"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "AND"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP2"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MSTORE"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "ADD"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SWAP5"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "POP"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "POP"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "POP"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "POP"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "POP"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "MLOAD"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "DUP1"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SWAP2"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SUB"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "SWAP1"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "LOG2"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "POP"
										},
										{
											"begin": 5869,
											"end": 7125,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "JUMPDEST"
										},
										{
											"begin": 7968,
											"end": 7994,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7968,
											"end": 7994,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 7968,
											"end": 7994,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7968,
											"end": 7994,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 7968,
											"end": 7994,
											"name": "JUMPDEST"
										},
										{
											"begin": 7997,
											"end": 8038,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 8010,
											"end": 8020,
											"name": "CALLER"
										},
										{
											"begin": 8022,
											"end": 8030,
											"name": "DUP5"
										},
										{
											"begin": 8032,
											"end": 8037,
											"name": "DUP5"
										},
										{
											"begin": 7997,
											"end": 8009,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 7997,
											"end": 8038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7997,
											"end": 8038,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 7997,
											"end": 8038,
											"name": "JUMPDEST"
										},
										{
											"begin": 7968,
											"end": 8038,
											"name": "SWAP1"
										},
										{
											"begin": 7968,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "DUP2"
										},
										{
											"begin": 8048,
											"end": 8063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8048,
											"end": 8063,
											"name": "ADD"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "SWAP1"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "AND"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "SWAP1"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "DUP2"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "AND"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "DUP2"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "MSTORE"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "POP"
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "POP"
										},
										{
											"begin": 8077,
											"end": 8132,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 8093,
											"end": 8103,
											"name": "CALLER"
										},
										{
											"begin": 8105,
											"end": 8113,
											"name": "DUP5"
										},
										{
											"begin": 8115,
											"end": 8120,
											"name": "DUP5"
										},
										{
											"begin": 8122,
											"end": 8131,
											"name": "DUP5"
										},
										{
											"begin": 8077,
											"end": 8092,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 8077,
											"end": 8132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8077,
											"end": 8132,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 8077,
											"end": 8132,
											"name": "JUMPDEST"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "POP"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "POP"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "POP"
										},
										{
											"begin": 7894,
											"end": 8139,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MSTORE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MSTORE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "KECCAK256"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MSTORE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "MSTORE"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "KECCAK256"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP2"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SLOAD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "EXP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DIV"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SLOAD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "EXP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DIV"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "ADD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SLOAD"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "EXP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DIV"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "DUP4"
										},
										{
											"begin": 4477,
											"end": 4542,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "JUMPDEST"
										},
										{
											"begin": 11087,
											"end": 11094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11224,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 11161,
											"end": 11165,
											"name": "DUP9"
										},
										{
											"begin": 11167,
											"end": 11172,
											"name": "DUP9"
										},
										{
											"begin": 11174,
											"end": 11176,
											"name": "DUP9"
										},
										{
											"begin": 11178,
											"end": 11184,
											"name": "DUP9"
										},
										{
											"begin": 11186,
											"end": 11198,
											"name": "DUP9"
										},
										{
											"begin": 11200,
											"end": 11207,
											"name": "DUP9"
										},
										{
											"begin": 11209,
											"end": 11214,
											"name": "DUP9"
										},
										{
											"begin": 11123,
											"end": 11147,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11123,
											"end": 11224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11123,
											"end": 11224,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 11123,
											"end": 11224,
											"name": "JUMPDEST"
										},
										{
											"begin": 11113,
											"end": 11225,
											"name": "DUP1"
										},
										{
											"begin": 11113,
											"end": 11225,
											"name": "MLOAD"
										},
										{
											"begin": 11113,
											"end": 11225,
											"name": "SWAP1"
										},
										{
											"begin": 11113,
											"end": 11225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11113,
											"end": 11225,
											"name": "ADD"
										},
										{
											"begin": 11113,
											"end": 11225,
											"name": "KECCAK256"
										},
										{
											"begin": 11106,
											"end": 11225,
											"name": "SWAP1"
										},
										{
											"begin": 11106,
											"end": 11225,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP8"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP7"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "JUMPDEST"
										},
										{
											"begin": 14668,
											"end": 14669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "AND"
										},
										{
											"begin": 14648,
											"end": 14656,
											"name": "DUP2"
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "AND"
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "EQ"
										},
										{
											"begin": 14648,
											"end": 14670,
											"name": "ISZERO"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "JUMPI"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "MLOAD"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP2"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "MSTORE"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "ADD"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP1"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP1"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "ADD"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP3"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP2"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "SUB"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP3"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "MSTORE"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP2"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "MSTORE"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "ADD"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP1"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "496E76616C69642064656C656761746520616464726573730000000000000000"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP2"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "MSTORE"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "POP"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "ADD"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "SWAP2"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "POP"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "POP"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "MLOAD"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "DUP1"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "SWAP2"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "SUB"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "SWAP1"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "REVERT"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 14640,
											"end": 14699,
											"name": "JUMPDEST"
										},
										{
											"begin": 14709,
											"end": 14721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14731,
											"end": 14739,
											"name": "DUP2"
										},
										{
											"begin": 14709,
											"end": 14740,
											"name": "SWAP1"
										},
										{
											"begin": 14709,
											"end": 14740,
											"name": "POP"
										},
										{
											"begin": 14852,
											"end": 14853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "AND"
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14823,
											"name": "CALLER"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "AND"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "AND"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "DUP2"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "MSTORE"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "ADD"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "SWAP1"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "DUP2"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "MSTORE"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "ADD"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "KECCAK256"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14825,
											"end": 14830,
											"name": "DUP4"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "AND"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "AND"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "DUP2"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "MSTORE"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "ADD"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "SWAP1"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "DUP2"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "MSTORE"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "ADD"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14831,
											"name": "KECCAK256"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "ADD"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "SWAP1"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "SLOAD"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "SWAP1"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "EXP"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "SWAP1"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "DIV"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14840,
											"name": "AND"
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "AND"
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "EQ"
										},
										{
											"begin": 14800,
											"end": 14863,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 14800,
											"end": 14863,
											"name": "JUMPI"
										},
										{
											"begin": 14856,
											"end": 14863,
											"name": "POP"
										},
										{
											"begin": 14856,
											"end": 14863,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 14856,
											"end": 14863,
											"name": "JUMP"
										},
										{
											"begin": 14800,
											"end": 14863,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 14800,
											"end": 14863,
											"name": "JUMPDEST"
										},
										{
											"begin": 14872,
											"end": 14889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14892,
											"end": 14906,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14917,
											"name": "CALLER"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "AND"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "AND"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "DUP2"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "MSTORE"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "ADD"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "SWAP1"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "DUP2"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "MSTORE"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "ADD"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "KECCAK256"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "SWAP1"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "SLOAD"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "SWAP1"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "EXP"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "SWAP1"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "DIV"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14892,
											"end": 14918,
											"name": "AND"
										},
										{
											"begin": 14872,
											"end": 14918,
											"name": "SWAP1"
										},
										{
											"begin": 14872,
											"end": 14918,
											"name": "POP"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "MLOAD"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "DUP1"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "MSTORE"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "DUP1"
										},
										{
											"begin": 14968,
											"end": 14976,
											"name": "DUP5"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "MSTORE"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14978,
											"end": 14979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "MSTORE"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14981,
											"end": 14991,
											"name": "DUP3"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "MSTORE"
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "POP"
										},
										{
											"begin": 14928,
											"end": 14937,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 14948,
											"name": "CALLER"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "MSTORE"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "MSTORE"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14928,
											"end": 14949,
											"name": "KECCAK256"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14950,
											"end": 14955,
											"name": "DUP5"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "MSTORE"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "MSTORE"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14928,
											"end": 14956,
											"name": "KECCAK256"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP3"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MLOAD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "EXP"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SLOAD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MUL"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "NOT"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP4"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MUL"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "OR"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SSTORE"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "POP"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP3"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MLOAD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "EXP"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SLOAD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MUL"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "NOT"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP4"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MUL"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "OR"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SSTORE"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "POP"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP3"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MLOAD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "ADD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "EXP"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SLOAD"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP2"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MUL"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "NOT"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "DUP4"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "AND"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "MUL"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "OR"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SSTORE"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "POP"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "SWAP1"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "POP"
										},
										{
											"begin": 14928,
											"end": 14992,
											"name": "POP"
										},
										{
											"begin": 15043,
											"end": 15048,
											"name": "DUP2"
										},
										{
											"begin": 15002,
											"end": 15011,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15012,
											"end": 15022,
											"name": "CALLER"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "AND"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "AND"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "DUP2"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "MSTORE"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "ADD"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "SWAP1"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "DUP2"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "MSTORE"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "ADD"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15002,
											"end": 15023,
											"name": "KECCAK256"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15024,
											"end": 15034,
											"name": "DUP4"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "AND"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "AND"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "DUP2"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "MSTORE"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "ADD"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "SWAP1"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "DUP2"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "MSTORE"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "ADD"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15002,
											"end": 15035,
											"name": "KECCAK256"
										},
										{
											"begin": 15002,
											"end": 15040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15002,
											"end": 15040,
											"name": "ADD"
										},
										{
											"begin": 15002,
											"end": 15040,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "EXP"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "DUP2"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "SLOAD"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "DUP2"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "MUL"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "NOT"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "AND"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "SWAP1"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "DUP4"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "AND"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "MUL"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "OR"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "SWAP1"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "SSTORE"
										},
										{
											"begin": 15002,
											"end": 15048,
											"name": "POP"
										},
										{
											"begin": 15087,
											"end": 15092,
											"name": "DUP2"
										},
										{
											"begin": 15058,
											"end": 15072,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15073,
											"end": 15083,
											"name": "CALLER"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "AND"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "AND"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "DUP2"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "MSTORE"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "ADD"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "SWAP1"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "DUP2"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "MSTORE"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "ADD"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "KECCAK256"
										},
										{
											"begin": 15058,
											"end": 15084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "EXP"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "DUP2"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "SLOAD"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "DUP2"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "MUL"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "NOT"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "AND"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "SWAP1"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "DUP4"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "AND"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "MUL"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "OR"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "SWAP1"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "SSTORE"
										},
										{
											"begin": 15058,
											"end": 15092,
											"name": "POP"
										},
										{
											"begin": 15119,
											"end": 15129,
											"name": "CALLER"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "AND"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "PUSH",
											"value": "2FD5B26F00131BD8CA0FC556207292B85A6BEC241341DF82724333227458E630"
										},
										{
											"begin": 15131,
											"end": 15139,
											"name": "DUP5"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "MLOAD"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "DUP1"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "DUP3"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "AND"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "AND"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "DUP2"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "MSTORE"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "ADD"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "SWAP2"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "POP"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "POP"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "MLOAD"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "DUP1"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "SWAP2"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "SUB"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "SWAP1"
										},
										{
											"begin": 15107,
											"end": 15140,
											"name": "LOG2"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "JUMPDEST"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 15147,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 16126,
											"end": 16815,
											"name": "JUMPDEST"
										},
										{
											"begin": 16213,
											"end": 16237,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16239,
											"end": 16250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16294,
											"name": "DUP3"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "AND"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "MLOAD"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "SWAP1"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "DUP1"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "DUP3"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "MSTORE"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "DUP1"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "MUL"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "ADD"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "DUP3"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "ADD"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "MSTORE"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "DUP1"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "ISZERO"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "JUMPI"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "DUP2"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "SWAP1"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "POP"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "JUMPDEST"
										},
										{
											"begin": 16272,
											"end": 16295,
											"name": "POP"
										},
										{
											"begin": 16262,
											"end": 16295,
											"name": "SWAP2"
										},
										{
											"begin": 16262,
											"end": 16295,
											"name": "POP"
										},
										{
											"begin": 16305,
											"end": 16312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16316,
											"name": "DUP1"
										},
										{
											"begin": 16305,
											"end": 16316,
											"name": "SWAP1"
										},
										{
											"begin": 16305,
											"end": 16316,
											"name": "POP"
										},
										{
											"begin": 16326,
											"end": 16345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16358,
											"end": 16359,
											"name": "DUP1"
										},
										{
											"begin": 16349,
											"end": 16354,
											"name": "DUP7"
										},
										{
											"begin": 16349,
											"end": 16359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16349,
											"end": 16359,
											"name": "AND"
										},
										{
											"begin": 16349,
											"end": 16359,
											"name": "EQ"
										},
										{
											"begin": 16349,
											"end": 16359,
											"name": "ISZERO"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "JUMPI"
										},
										{
											"begin": 16371,
											"end": 16385,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 16390,
											"name": "DUP9"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "AND"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "AND"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "DUP2"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "MSTORE"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "ADD"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "SWAP1"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "DUP2"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "MSTORE"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "ADD"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "KECCAK256"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "SWAP1"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "SLOAD"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "SWAP1"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "EXP"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "SWAP1"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "DIV"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16371,
											"end": 16391,
											"name": "AND"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "JUMP"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "JUMPDEST"
										},
										{
											"begin": 16363,
											"end": 16368,
											"name": "DUP6"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "JUMPDEST"
										},
										{
											"begin": 16326,
											"end": 16391,
											"name": "SWAP1"
										},
										{
											"begin": 16326,
											"end": 16391,
											"name": "POP"
										},
										{
											"begin": 16401,
											"end": 16424,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 16401,
											"end": 16424,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 16401,
											"end": 16424,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16401,
											"end": 16424,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 16401,
											"end": 16424,
											"name": "JUMPDEST"
										},
										{
											"begin": 16427,
											"end": 16436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16437,
											"end": 16441,
											"name": "DUP10"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "AND"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "AND"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "DUP2"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "MSTORE"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "ADD"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "SWAP1"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "DUP2"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "MSTORE"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "ADD"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16442,
											"name": "KECCAK256"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16455,
											"name": "DUP4"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "DUP2"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "MSTORE"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "DUP2"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "MSTORE"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16456,
											"name": "KECCAK256"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "MLOAD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "MSTORE"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP2"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP3"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SLOAD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "EXP"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DIV"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP2"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "MSTORE"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP3"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SLOAD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "EXP"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DIV"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP2"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "MSTORE"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP3"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "ADD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SLOAD"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "EXP"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DIV"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "AND"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "DUP2"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "MSTORE"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "POP"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "POP"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "SWAP1"
										},
										{
											"begin": 16401,
											"end": 16456,
											"name": "POP"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "JUMPDEST"
										},
										{
											"begin": 16500,
											"end": 16501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16472,
											"end": 16502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16472,
											"end": 16502,
											"name": "AND"
										},
										{
											"begin": 16472,
											"end": 16479,
											"name": "DUP2"
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "ADD"
										},
										{
											"begin": 16472,
											"end": 16488,
											"name": "MLOAD"
										},
										{
											"begin": 16472,
											"end": 16502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16472,
											"end": 16502,
											"name": "AND"
										},
										{
											"begin": 16472,
											"end": 16502,
											"name": "EQ"
										},
										{
											"begin": 16472,
											"end": 16502,
											"name": "ISZERO"
										},
										{
											"begin": 16472,
											"end": 16518,
											"name": "DUP1"
										},
										{
											"begin": 16472,
											"end": 16518,
											"name": "ISZERO"
										},
										{
											"begin": 16472,
											"end": 16518,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 16472,
											"end": 16518,
											"name": "JUMPI"
										},
										{
											"begin": 16472,
											"end": 16518,
											"name": "POP"
										},
										{
											"begin": 16510,
											"end": 16518,
											"name": "DUP6"
										},
										{
											"begin": 16506,
											"end": 16518,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16506,
											"end": 16518,
											"name": "AND"
										},
										{
											"begin": 16506,
											"end": 16507,
											"name": "DUP4"
										},
										{
											"begin": 16506,
											"end": 16518,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16506,
											"end": 16518,
											"name": "AND"
										},
										{
											"begin": 16506,
											"end": 16518,
											"name": "LT"
										},
										{
											"begin": 16472,
											"end": 16518,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 16472,
											"end": 16518,
											"name": "JUMPDEST"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "ISZERO"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "JUMPI"
										},
										{
											"begin": 16547,
											"end": 16554,
											"name": "DUP1"
										},
										{
											"begin": 16547,
											"end": 16563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16547,
											"end": 16563,
											"name": "ADD"
										},
										{
											"begin": 16547,
											"end": 16563,
											"name": "MLOAD"
										},
										{
											"begin": 16534,
											"end": 16541,
											"name": "DUP6"
										},
										{
											"begin": 16542,
											"end": 16543,
											"name": "DUP5"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "AND"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "DUP2"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "MLOAD"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "DUP2"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "LT"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "JUMPI"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "INVALID"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "JUMPDEST"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "MUL"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "ADD"
										},
										{
											"begin": 16534,
											"end": 16544,
											"name": "ADD"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "SWAP1"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "AND"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "SWAP1"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "DUP2"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "AND"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "DUP2"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "MSTORE"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "POP"
										},
										{
											"begin": 16534,
											"end": 16563,
											"name": "POP"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "DUP3"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "DUP1"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "ADD"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "SWAP4"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "POP"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "POP"
										},
										{
											"begin": 16604,
											"end": 16613,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16614,
											"end": 16618,
											"name": "DUP10"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "AND"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "AND"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "DUP2"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "MSTORE"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "ADD"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "SWAP1"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "DUP2"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "MSTORE"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "ADD"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16604,
											"end": 16619,
											"name": "KECCAK256"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16620,
											"end": 16627,
											"name": "DUP3"
										},
										{
											"begin": 16620,
											"end": 16632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16620,
											"end": 16632,
											"name": "ADD"
										},
										{
											"begin": 16620,
											"end": 16632,
											"name": "MLOAD"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "DUP2"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "MSTORE"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "DUP2"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "MSTORE"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16604,
											"end": 16633,
											"name": "KECCAK256"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "MLOAD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "MSTORE"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP2"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP3"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SLOAD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "EXP"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DIV"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP2"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "MSTORE"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP3"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SLOAD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "EXP"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DIV"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP2"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "MSTORE"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP3"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "ADD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SLOAD"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "EXP"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DIV"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "AND"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "DUP2"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "MSTORE"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "POP"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "POP"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "SWAP1"
										},
										{
											"begin": 16594,
											"end": 16633,
											"name": "POP"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "JUMP"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 16466,
											"end": 16644,
											"name": "JUMPDEST"
										},
										{
											"begin": 16667,
											"end": 16674,
											"name": "DUP1"
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "ADD"
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "MLOAD"
										},
										{
											"begin": 16653,
											"end": 16684,
											"name": "SWAP4"
										},
										{
											"begin": 16653,
											"end": 16684,
											"name": "POP"
										},
										{
											"begin": 16797,
											"end": 16798,
											"name": "DUP3"
										},
										{
											"begin": 16788,
											"end": 16795,
											"name": "DUP6"
										},
										{
											"begin": 16781,
											"end": 16799,
											"name": "MSTORE"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "SWAP4"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "SWAP4"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "SWAP2"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16809,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "JUMPDEST"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MSTORE"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP3"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MSTORE"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "KECCAK256"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MSTORE"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MSTORE"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "KECCAK256"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SLOAD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "LT"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "JUMPI"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "INVALID"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "JUMPDEST"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "MSTORE"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "KECCAK256"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "ADD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP3"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP3"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "POP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SLOAD"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "EXP"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "SWAP1"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DIV"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "AND"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "DUP2"
										},
										{
											"begin": 4407,
											"end": 4471,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "SLOAD"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "DUP2"
										},
										{
											"begin": 4602,
											"end": 4632,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "JUMPDEST"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MLOAD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP1"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "PUSH",
											"value": "302E312E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3799,
											"end": 3839,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "JUMPDEST"
										},
										{
											"begin": 7222,
											"end": 7248,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 7222,
											"end": 7248,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 7222,
											"end": 7248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7222,
											"end": 7248,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 7222,
											"end": 7248,
											"name": "JUMPDEST"
										},
										{
											"begin": 7272,
											"end": 7282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "DUP1"
										},
										{
											"begin": 7283,
											"end": 7287,
											"name": "DUP6"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "AND"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "AND"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "SWAP1"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "KECCAK256"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP5"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "AND"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "AND"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "SWAP1"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "KECCAK256"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7299,
											"end": 7304,
											"name": "DUP4"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "KECCAK256"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "MLOAD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP3"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SLOAD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "EXP"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DIV"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP3"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SLOAD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "EXP"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DIV"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP3"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SLOAD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "EXP"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DIV"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP3"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SLOAD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "EXP"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DIV"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP3"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SLOAD"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "EXP"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DIV"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7260,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7377,
											"end": 7394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7412,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 7404,
											"end": 7407,
											"name": "TIMESTAMP"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "DUP2"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "JUMPI"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "INVALID"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "JUMPDEST"
										},
										{
											"begin": 7404,
											"end": 7412,
											"name": "DIV"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "SWAP1"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "POP"
										},
										{
											"begin": 7452,
											"end": 7453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7436,
											"name": "DUP3"
										},
										{
											"begin": 7427,
											"end": 7449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7449,
											"name": "ADD"
										},
										{
											"begin": 7427,
											"end": 7449,
											"name": "MLOAD"
										},
										{
											"begin": 7427,
											"end": 7453,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7427,
											"end": 7453,
											"name": "AND"
										},
										{
											"begin": 7427,
											"end": 7453,
											"name": "GT"
										},
										{
											"begin": 7427,
											"end": 7518,
											"name": "DUP1"
										},
										{
											"begin": 7427,
											"end": 7518,
											"name": "ISZERO"
										},
										{
											"begin": 7427,
											"end": 7518,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 7427,
											"end": 7518,
											"name": "JUMPI"
										},
										{
											"begin": 7427,
											"end": 7518,
											"name": "POP"
										},
										{
											"begin": 7496,
											"end": 7505,
											"name": "DUP2"
										},
										{
											"begin": 7496,
											"end": 7518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7518,
											"name": "ADD"
										},
										{
											"begin": 7496,
											"end": 7518,
											"name": "MLOAD"
										},
										{
											"begin": 7483,
											"end": 7518,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7483,
											"end": 7518,
											"name": "AND"
										},
										{
											"begin": 7483,
											"end": 7493,
											"name": "DUP2"
										},
										{
											"begin": 7483,
											"end": 7518,
											"name": "SUB"
										},
										{
											"begin": 7457,
											"end": 7518,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7518,
											"name": "AND"
										},
										{
											"begin": 7457,
											"end": 7466,
											"name": "DUP3"
										},
										{
											"begin": 7457,
											"end": 7479,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7457,
											"end": 7479,
											"name": "ADD"
										},
										{
											"begin": 7457,
											"end": 7479,
											"name": "MLOAD"
										},
										{
											"begin": 7457,
											"end": 7518,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7518,
											"name": "AND"
										},
										{
											"begin": 7457,
											"end": 7518,
											"name": "GT"
										},
										{
											"begin": 7457,
											"end": 7518,
											"name": "ISZERO"
										},
										{
											"begin": 7427,
											"end": 7518,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 7427,
											"end": 7518,
											"name": "JUMPDEST"
										},
										{
											"begin": 7423,
											"end": 7680,
											"name": "ISZERO"
										},
										{
											"begin": 7423,
											"end": 7680,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 7423,
											"end": 7680,
											"name": "JUMPI"
										},
										{
											"begin": 7552,
											"end": 7553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP3"
										},
										{
											"begin": 7534,
											"end": 7549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7534,
											"end": 7549,
											"name": "ADD"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "SWAP1"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "AND"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "SWAP1"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "DUP2"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "AND"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "DUP2"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "MSTORE"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "POP"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "POP"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP2"
										},
										{
											"begin": 7646,
											"end": 7668,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7668,
											"name": "ADD"
										},
										{
											"begin": 7646,
											"end": 7668,
											"name": "MLOAD"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "AND"
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP3"
										},
										{
											"begin": 7620,
											"end": 7642,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7620,
											"end": 7642,
											"name": "ADD"
										},
										{
											"begin": 7620,
											"end": 7642,
											"name": "MLOAD"
										},
										{
											"begin": 7607,
											"end": 7617,
											"name": "DUP3"
										},
										{
											"begin": 7607,
											"end": 7642,
											"name": "SUB"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "AND"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "DUP2"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "JUMPI"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "INVALID"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "JUMPDEST"
										},
										{
											"begin": 7606,
											"end": 7668,
											"name": "MOD"
										},
										{
											"begin": 7592,
											"end": 7602,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7669,
											"name": "SUB"
										},
										{
											"begin": 7567,
											"end": 7576,
											"name": "DUP3"
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "ADD"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "SWAP1"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "AND"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "SWAP1"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "DUP2"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "AND"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "DUP2"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "MSTORE"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "POP"
										},
										{
											"begin": 7567,
											"end": 7669,
											"name": "POP"
										},
										{
											"begin": 7423,
											"end": 7680,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 7423,
											"end": 7680,
											"name": "JUMPDEST"
										},
										{
											"begin": 7696,
											"end": 7705,
											"name": "DUP2"
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "SWAP2"
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "POP"
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "POP"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "SWAP4"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "SWAP3"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "POP"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "POP"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "POP"
										},
										{
											"begin": 7131,
											"end": 7712,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "JUMPDEST"
										},
										{
											"begin": 10591,
											"end": 10603,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10615,
											"end": 10635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "MLOAD"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH data",
											"value": "80B006280932094E7CC965863EB5118DC07E5D272C6670C4A7C87299E04FCEEB"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "6C"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP2"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "CODECOPY"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "6C"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "ADD"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "POP"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "MLOAD"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "DUP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP2"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SUB"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4269,
											"name": "KECCAK256"
										},
										{
											"begin": 10701,
											"end": 10705,
											"name": "DUP10"
										},
										{
											"begin": 10707,
											"end": 10712,
											"name": "DUP10"
										},
										{
											"begin": 10714,
											"end": 10716,
											"name": "DUP10"
										},
										{
											"begin": 10718,
											"end": 10724,
											"name": "DUP10"
										},
										{
											"begin": 10726,
											"end": 10738,
											"name": "DUP10"
										},
										{
											"begin": 10740,
											"end": 10747,
											"name": "DUP10"
										},
										{
											"begin": 10749,
											"end": 10754,
											"name": "DUP10"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MLOAD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP1"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP10"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP9"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP8"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP7"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP6"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP5"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP4"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP3"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "AND"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "DUP2"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "ADD"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "SWAP9"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "POP"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "SWAP1"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10661,
											"end": 10755,
											"name": "MSTORE"
										},
										{
											"begin": 10638,
											"end": 10765,
											"name": "DUP1"
										},
										{
											"begin": 10638,
											"end": 10765,
											"name": "MLOAD"
										},
										{
											"begin": 10638,
											"end": 10765,
											"name": "SWAP1"
										},
										{
											"begin": 10638,
											"end": 10765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10638,
											"end": 10765,
											"name": "ADD"
										},
										{
											"begin": 10638,
											"end": 10765,
											"name": "KECCAK256"
										},
										{
											"begin": 10615,
											"end": 10765,
											"name": "SWAP1"
										},
										{
											"begin": 10615,
											"end": 10765,
											"name": "POP"
										},
										{
											"begin": 10804,
											"end": 10808,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 10799,
											"end": 10809,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 10799,
											"end": 10809,
											"name": "SHL"
										},
										{
											"begin": 10816,
											"end": 10820,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10811,
											"end": 10821,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 10811,
											"end": 10821,
											"name": "SHL"
										},
										{
											"begin": 10823,
											"end": 10838,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10823,
											"end": 10838,
											"name": "SLOAD"
										},
										{
											"begin": 10840,
											"end": 10852,
											"name": "DUP4"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "MLOAD"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP1"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP6"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "NOT"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "NOT"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP2"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "MSTORE"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP5"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "NOT"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "NOT"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP2"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "MSTORE"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP4"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP2"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "MSTORE"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP3"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "DUP2"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "MSTORE"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "SWAP5"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "POP"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "POP"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "POP"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "POP"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "POP"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "SWAP1"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "MSTORE"
										},
										{
											"begin": 10775,
											"end": 10853,
											"name": "SWAP2"
										},
										{
											"begin": 10775,
											"end": 10853,
											"name": "POP"
										},
										{
											"begin": 10775,
											"end": 10853,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "SWAP8"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "SWAP7"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "POP"
										},
										{
											"begin": 10365,
											"end": 10860,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7718,
											"end": 7888,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 7718,
											"end": 7888,
											"name": "JUMPDEST"
										},
										{
											"begin": 7872,
											"end": 7881,
											"name": "DUP1"
										},
										{
											"begin": 7836,
											"end": 7846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "DUP1"
										},
										{
											"begin": 7847,
											"end": 7851,
											"name": "DUP7"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "MSTORE"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "MSTORE"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "KECCAK256"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 7861,
											"name": "DUP6"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "MSTORE"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "MSTORE"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7862,
											"name": "KECCAK256"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7868,
											"name": "DUP5"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "MSTORE"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "MSTORE"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "KECCAK256"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP3"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "EXP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "NOT"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP4"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "OR"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SSTORE"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "POP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP3"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "EXP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "NOT"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP4"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "OR"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SSTORE"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "POP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP3"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "EXP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "NOT"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP4"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "OR"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SSTORE"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "POP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP3"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "EXP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "NOT"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP4"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "OR"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SSTORE"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "POP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP3"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "ADD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "EXP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SLOAD"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP2"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "NOT"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "DUP4"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "AND"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "MUL"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "OR"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SSTORE"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "POP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "POP"
										},
										{
											"begin": 7836,
											"end": 7881,
											"name": "POP"
										},
										{
											"begin": 7718,
											"end": 7888,
											"name": "POP"
										},
										{
											"begin": 7718,
											"end": 7888,
											"name": "POP"
										},
										{
											"begin": 7718,
											"end": 7888,
											"name": "POP"
										},
										{
											"begin": 7718,
											"end": 7888,
											"name": "POP"
										},
										{
											"begin": 7718,
											"end": 7888,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "JUMPDEST"
										},
										{
											"begin": 11378,
											"end": 11392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11440,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "DUP5"
										},
										{
											"begin": 11423,
											"end": 11439,
											"name": "DUP5"
										},
										{
											"begin": 11395,
											"end": 11411,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 11395,
											"end": 11440,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11395,
											"end": 11440,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 11395,
											"end": 11440,
											"name": "JUMPDEST"
										},
										{
											"begin": 11378,
											"end": 11440,
											"name": "SWAP1"
										},
										{
											"begin": 11378,
											"end": 11440,
											"name": "POP"
										},
										{
											"begin": 11491,
											"end": 11497,
											"name": "DUP1"
										},
										{
											"begin": 11471,
											"end": 11497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11471,
											"end": 11497,
											"name": "AND"
										},
										{
											"begin": 11471,
											"end": 11487,
											"name": "DUP6"
										},
										{
											"begin": 11471,
											"end": 11497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11471,
											"end": 11497,
											"name": "AND"
										},
										{
											"begin": 11471,
											"end": 11497,
											"name": "EQ"
										},
										{
											"begin": 11471,
											"end": 11560,
											"name": "DUP1"
										},
										{
											"begin": 11471,
											"end": 11560,
											"name": "ISZERO"
										},
										{
											"begin": 11471,
											"end": 11560,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 11471,
											"end": 11560,
											"name": "JUMPI"
										},
										{
											"begin": 11471,
											"end": 11560,
											"name": "POP"
										},
										{
											"begin": 11554,
											"end": 11560,
											"name": "DUP1"
										},
										{
											"begin": 11501,
											"end": 11560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11560,
											"name": "AND"
										},
										{
											"begin": 11501,
											"end": 11510,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11519,
											"end": 11523,
											"name": "DUP5"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "AND"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "AND"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "DUP2"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "MSTORE"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "ADD"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "SWAP1"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "DUP2"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "MSTORE"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "ADD"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "KECCAK256"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11533,
											"end": 11539,
											"name": "DUP4"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "AND"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "AND"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "DUP2"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "MSTORE"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "ADD"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "SWAP1"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "DUP2"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "MSTORE"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "ADD"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11541,
											"name": "KECCAK256"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "ADD"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "SWAP1"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "SLOAD"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "SWAP1"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "EXP"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "SWAP1"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "DIV"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11550,
											"name": "AND"
										},
										{
											"begin": 11501,
											"end": 11560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11501,
											"end": 11560,
											"name": "AND"
										},
										{
											"begin": 11501,
											"end": 11560,
											"name": "EQ"
										},
										{
											"begin": 11471,
											"end": 11560,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 11471,
											"end": 11560,
											"name": "JUMPDEST"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "JUMPI"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "MLOAD"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP2"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "MSTORE"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "ADD"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP1"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP1"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "ADD"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP3"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP2"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "SUB"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP3"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "MSTORE"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "59"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP2"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "MSTORE"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "ADD"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP1"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH data",
											"value": "967A409FD152609403AC7B3349D7CED54D05D2EE8664844EDF017668D343240B"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "59"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "SWAP2"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "CODECOPY"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "ADD"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "SWAP2"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "POP"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "POP"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "MLOAD"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "DUP1"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "SWAP2"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "SUB"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "SWAP1"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "REVERT"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 11450,
											"end": 11675,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "POP"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "POP"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "POP"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "POP"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "POP"
										},
										{
											"begin": 11238,
											"end": 11682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13434,
											"end": 14003,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 13434,
											"end": 14003,
											"name": "JUMPDEST"
										},
										{
											"begin": 13558,
											"end": 13559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13541,
											"end": 13560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13541,
											"end": 13560,
											"name": "AND"
										},
										{
											"begin": 13541,
											"end": 13546,
											"name": "DUP4"
										},
										{
											"begin": 13541,
											"end": 13560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13541,
											"end": 13560,
											"name": "AND"
										},
										{
											"begin": 13541,
											"end": 13560,
											"name": "EQ"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "ISZERO"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "JUMPI"
										},
										{
											"begin": 13641,
											"end": 13645,
											"name": "DUP4"
										},
										{
											"begin": 13641,
											"end": 13671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13641,
											"end": 13671,
											"name": "AND"
										},
										{
											"begin": 13641,
											"end": 13671,
											"name": "PUSH",
											"value": "468721A7"
										},
										{
											"begin": 13672,
											"end": 13674,
											"name": "DUP4"
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "DUP4"
										},
										{
											"begin": 13688,
											"end": 13707,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MLOAD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP5"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "AND"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SHL"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MSTORE"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP5"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "AND"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "AND"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MSTORE"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP4"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "AND"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MSTORE"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP4"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "GT"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ISZERO"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "JUMPI"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "INVALID"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "JUMPDEST"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "AND"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MSTORE"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP3"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SUB"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP3"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MSTORE"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MSTORE"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SWAP5"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MLOAD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP4"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SUB"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP8"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "GAS"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "CALL"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MLOAD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SWAP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "DUP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "MLOAD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SWAP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "ADD"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SWAP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SWAP3"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SWAP2"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "SWAP1"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13641,
											"end": 13708,
											"name": "POP"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "JUMPI"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "MLOAD"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP2"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "MSTORE"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "ADD"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP1"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP1"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "ADD"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP3"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP2"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "SUB"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP3"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "MSTORE"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP2"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "MSTORE"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "ADD"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP1"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "436F756C64206E6F742065786563757465206574686572207472616E73666572"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP2"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "MSTORE"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "POP"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "ADD"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "SWAP2"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "POP"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "POP"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "MLOAD"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "DUP1"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "SWAP2"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "SUB"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "SWAP1"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "REVERT"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 13633,
											"end": 13745,
											"name": "JUMPDEST"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "JUMP"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "JUMPDEST"
										},
										{
											"begin": 13776,
											"end": 13793,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13849,
											"end": 13851,
											"name": "DUP3"
										},
										{
											"begin": 13853,
											"end": 13859,
											"name": "DUP3"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "MLOAD"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "ADD"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "DUP1"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "DUP4"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "AND"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "AND"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "DUP2"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "MSTORE"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "ADD"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "DUP3"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "AND"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "AND"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "DUP2"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "MSTORE"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "ADD"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "SWAP3"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "SWAP1"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "MSTORE"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "NOT"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13860,
											"name": "POP"
										},
										{
											"begin": 13776,
											"end": 13860,
											"name": "SWAP1"
										},
										{
											"begin": 13776,
											"end": 13860,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13886,
											"name": "DUP5"
										},
										{
											"begin": 13882,
											"end": 13912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13882,
											"end": 13912,
											"name": "AND"
										},
										{
											"begin": 13882,
											"end": 13912,
											"name": "PUSH",
											"value": "468721A7"
										},
										{
											"begin": 13913,
											"end": 13918,
											"name": "DUP6"
										},
										{
											"begin": 13920,
											"end": 13921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13923,
											"end": 13927,
											"name": "DUP5"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MLOAD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP6"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "AND"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SHL"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MSTORE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP6"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "AND"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "AND"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MSTORE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP5"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MSTORE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP4"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "GT"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ISZERO"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "JUMPI"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "INVALID"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "JUMPDEST"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "AND"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MSTORE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP3"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SUB"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP3"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MSTORE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP5"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MLOAD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MSTORE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MLOAD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP4"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "AND"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ISZERO"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "JUMPI"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP3"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SUB"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MLOAD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP4"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SUB"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "EXP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SUB"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "NOT"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "AND"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MSTORE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "JUMPDEST"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP6"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MLOAD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP4"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SUB"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP8"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "GAS"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "CALL"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MLOAD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "DUP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "MLOAD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "ADD"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP3"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP2"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "SWAP1"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 13949,
											"name": "POP"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "JUMPI"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "MLOAD"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP2"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "MSTORE"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "ADD"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP1"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP1"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "ADD"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP3"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP2"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "SUB"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP3"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "MSTORE"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP2"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "MSTORE"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "ADD"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP1"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "436F756C64206E6F74206578656375746520746F6B656E207472616E73666572"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP2"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "MSTORE"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "POP"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "ADD"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "SWAP2"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "POP"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "POP"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "MLOAD"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "DUP1"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "SWAP2"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "SUB"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "SWAP1"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "REVERT"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 13874,
											"end": 13986,
											"name": "JUMPDEST"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "POP"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 13537,
											"end": 13997,
											"name": "JUMPDEST"
										},
										{
											"begin": 13434,
											"end": 14003,
											"name": "POP"
										},
										{
											"begin": 13434,
											"end": 14003,
											"name": "POP"
										},
										{
											"begin": 13434,
											"end": 14003,
											"name": "POP"
										},
										{
											"begin": 13434,
											"end": 14003,
											"name": "POP"
										},
										{
											"begin": 13434,
											"end": 14003,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "JUMPDEST"
										},
										{
											"begin": 11791,
											"end": 11804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11908,
											"name": "DUP1"
										},
										{
											"begin": 11887,
											"end": 11896,
											"name": "DUP4"
										},
										{
											"begin": 11887,
											"end": 11903,
											"name": "MLOAD"
										},
										{
											"begin": 11887,
											"end": 11908,
											"name": "EQ"
										},
										{
											"begin": 11883,
											"end": 11927,
											"name": "ISZERO"
										},
										{
											"begin": 11883,
											"end": 11927,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 11883,
											"end": 11927,
											"name": "JUMPI"
										},
										{
											"begin": 11917,
											"end": 11927,
											"name": "CALLER"
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "SWAP1"
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "POP"
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "JUMP"
										},
										{
											"begin": 11883,
											"end": 11927,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 11883,
											"end": 11927,
											"name": "JUMPDEST"
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"value": "41"
										},
										{
											"begin": 12012,
											"end": 12021,
											"name": "DUP4"
										},
										{
											"begin": 12012,
											"end": 12028,
											"name": "MLOAD"
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "LT"
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "ISZERO"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "JUMPI"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "MLOAD"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP2"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "MSTORE"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "ADD"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP1"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP1"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "ADD"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP3"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP2"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "SUB"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP3"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "MSTORE"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP2"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "MSTORE"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "ADD"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP1"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "7369676E6174757265732E6C656E677468203E3D203635000000000000000000"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP2"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "MSTORE"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "ADD"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "SWAP2"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "POP"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "MLOAD"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "DUP1"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "SWAP2"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "SUB"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "SWAP1"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "REVERT"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 12004,
											"end": 12062,
											"name": "JUMPDEST"
										},
										{
											"begin": 12072,
											"end": 12079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12098,
											"name": "DUP1"
										},
										{
											"begin": 12108,
											"end": 12117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12139,
											"end": 12167,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 12154,
											"end": 12163,
											"name": "DUP7"
										},
										{
											"begin": 12165,
											"end": 12166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12139,
											"end": 12153,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 12139,
											"end": 12167,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12139,
											"end": 12167,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 12139,
											"end": 12167,
											"name": "JUMPDEST"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "DUP1"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "SWAP4"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "POP"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "DUP2"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "SWAP5"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "POP"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "DUP3"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "SWAP6"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "POP"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "POP"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "POP"
										},
										{
											"begin": 12127,
											"end": 12167,
											"name": "POP"
										},
										{
											"begin": 12239,
											"end": 12240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12234,
											"end": 12235,
											"name": "DUP4"
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "AND"
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "EQ"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "ISZERO"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "JUMPI"
										},
										{
											"begin": 12375,
											"end": 12376,
											"name": "DUP2"
										},
										{
											"begin": 12367,
											"end": 12377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12367,
											"end": 12377,
											"name": "SHR"
										},
										{
											"begin": 12351,
											"end": 12378,
											"name": "SWAP4"
										},
										{
											"begin": 12351,
											"end": 12378,
											"name": "POP"
										},
										{
											"begin": 12392,
											"end": 12422,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12710,
											"end": 12714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12706,
											"end": 12707,
											"name": "DUP3"
										},
										{
											"begin": 12695,
											"end": 12704,
											"name": "DUP9"
										},
										{
											"begin": 12691,
											"end": 12708,
											"name": "ADD"
										},
										{
											"begin": 12687,
											"end": 12715,
											"name": "ADD"
										},
										{
											"begin": 12666,
											"end": 12715,
											"name": "SWAP1"
										},
										{
											"begin": 12666,
											"end": 12715,
											"name": "POP"
										},
										{
											"begin": 2465,
											"end": 2475,
											"name": "PUSH",
											"value": "20C13B0B"
										},
										{
											"begin": 12851,
											"end": 12870,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12851,
											"end": 12870,
											"name": "SHL"
										},
										{
											"begin": 12767,
											"end": 12870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12767,
											"end": 12870,
											"name": "NOT"
										},
										{
											"begin": 12767,
											"end": 12870,
											"name": "AND"
										},
										{
											"begin": 12787,
											"end": 12792,
											"name": "DUP6"
										},
										{
											"begin": 12767,
											"end": 12810,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12767,
											"end": 12810,
											"name": "AND"
										},
										{
											"begin": 12767,
											"end": 12810,
											"name": "PUSH",
											"value": "20C13B0B"
										},
										{
											"begin": 12811,
											"end": 12827,
											"name": "DUP9"
										},
										{
											"begin": 12829,
											"end": 12846,
											"name": "DUP5"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "AND"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SHL"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MSTORE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MSTORE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP6"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MSTORE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "AND"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ISZERO"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "JUMPI"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP3"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "EXP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "NOT"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "AND"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MSTORE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "JUMPDEST"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP3"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MSTORE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP5"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MSTORE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "AND"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ISZERO"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "JUMPI"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP3"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "EXP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "NOT"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "AND"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MSTORE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "JUMPDEST"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP5"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP4"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SUB"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP7"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "GAS"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "STATICCALL"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "DUP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "MLOAD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "ADD"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP3"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP2"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12767,
											"end": 12870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12767,
											"end": 12870,
											"name": "NOT"
										},
										{
											"begin": 12767,
											"end": 12870,
											"name": "AND"
										},
										{
											"begin": 12767,
											"end": 12870,
											"name": "EQ"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "JUMPI"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "MLOAD"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP2"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "MSTORE"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP3"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP2"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "SUB"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP3"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "MSTORE"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP2"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "MSTORE"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH data",
											"value": "28B765F195C3CD598E06ECB11EF8B4894757EBF4BABAD4A035BCAF2F5D0E18E5"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "CODECOPY"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "ADD"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "POP"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "MLOAD"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "DUP1"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "SWAP2"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "SUB"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "SWAP1"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "REVERT"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 12742,
											"end": 12941,
											"name": "JUMPDEST"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "POP"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "JUMP"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "JUMPDEST"
										},
										{
											"begin": 12966,
											"end": 12968,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 12962,
											"end": 12963,
											"name": "DUP4"
										},
										{
											"begin": 12962,
											"end": 12968,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12962,
											"end": 12968,
											"name": "AND"
										},
										{
											"begin": 12962,
											"end": 12968,
											"name": "GT"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "ISZERO"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "JUMPI"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "DUP6"
										},
										{
											"begin": 13213,
											"end": 13240,
											"name": "DUP1"
										},
										{
											"begin": 13213,
											"end": 13240,
											"name": "MLOAD"
										},
										{
											"begin": 13213,
											"end": 13240,
											"name": "SWAP1"
										},
										{
											"begin": 13213,
											"end": 13240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13213,
											"end": 13240,
											"name": "ADD"
										},
										{
											"begin": 13213,
											"end": 13240,
											"name": "KECCAK256"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "MLOAD"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "ADD"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "DUP1"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "DUP1"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "PUSH",
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "DUP2"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "MSTORE"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "POP"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "ADD"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "DUP3"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "DUP2"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "MSTORE"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "ADD"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "SWAP2"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "POP"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "POP"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "SWAP1"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13160,
											"end": 13241,
											"name": "MSTORE"
										},
										{
											"begin": 13150,
											"end": 13242,
											"name": "DUP1"
										},
										{
											"begin": 13150,
											"end": 13242,
											"name": "MLOAD"
										},
										{
											"begin": 13150,
											"end": 13242,
											"name": "SWAP1"
										},
										{
											"begin": 13150,
											"end": 13242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13150,
											"end": 13242,
											"name": "ADD"
										},
										{
											"begin": 13150,
											"end": 13242,
											"name": "KECCAK256"
										},
										{
											"begin": 13248,
											"end": 13249,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13244,
											"end": 13245,
											"name": "DUP6"
										},
										{
											"begin": 13244,
											"end": 13249,
											"name": "SUB"
										},
										{
											"begin": 13251,
											"end": 13252,
											"name": "DUP5"
										},
										{
											"begin": 13254,
											"end": 13255,
											"name": "DUP5"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MLOAD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MLOAD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP1"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP6"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP5"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "AND"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "AND"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP4"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP3"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "SWAP5"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MLOAD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "SUB"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "SWAP1"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP1"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP5"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "SUB"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "SWAP1"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "DUP6"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "GAS"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "STATICCALL"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MLOAD"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "SUB"
										},
										{
											"begin": 13140,
											"end": 13256,
											"name": "MLOAD"
										},
										{
											"begin": 13132,
											"end": 13256,
											"name": "SWAP4"
										},
										{
											"begin": 13132,
											"end": 13256,
											"name": "POP"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "JUMP"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "JUMPDEST"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13384,
											"end": 13400,
											"name": "DUP6"
										},
										{
											"begin": 13374,
											"end": 13401,
											"name": "DUP1"
										},
										{
											"begin": 13374,
											"end": 13401,
											"name": "MLOAD"
										},
										{
											"begin": 13374,
											"end": 13401,
											"name": "SWAP1"
										},
										{
											"begin": 13374,
											"end": 13401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13401,
											"name": "ADD"
										},
										{
											"begin": 13374,
											"end": 13401,
											"name": "KECCAK256"
										},
										{
											"begin": 13403,
											"end": 13404,
											"name": "DUP5"
										},
										{
											"begin": 13406,
											"end": 13407,
											"name": "DUP5"
										},
										{
											"begin": 13409,
											"end": 13410,
											"name": "DUP5"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MLOAD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MSTORE"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MSTORE"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MLOAD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP1"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP6"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MSTORE"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP5"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "AND"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "AND"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MSTORE"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP4"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MSTORE"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP3"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MSTORE"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "SWAP5"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MLOAD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "SUB"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "SWAP1"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP1"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP5"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "SUB"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "SWAP1"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "DUP6"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "GAS"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "STATICCALL"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MLOAD"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "SUB"
										},
										{
											"begin": 13364,
											"end": 13411,
											"name": "MLOAD"
										},
										{
											"begin": 13356,
											"end": 13411,
											"name": "SWAP4"
										},
										{
											"begin": 13356,
											"end": 13411,
											"name": "POP"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 12958,
											"end": 13422,
											"name": "JUMPDEST"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 12230,
											"end": 13422,
											"name": "JUMPDEST"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "JUMPDEST"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "SWAP3"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "SWAP2"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 11688,
											"end": 13428,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1392,
											"end": 2313,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 1392,
											"end": 2313,
											"name": "JUMPDEST"
										},
										{
											"begin": 1501,
											"end": 1508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "DUP1"
										},
										{
											"begin": 1521,
											"end": 1530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1824,
											"name": "DUP4"
										},
										{
											"begin": 1815,
											"end": 1819,
											"name": "PUSH",
											"value": "41"
										},
										{
											"begin": 1811,
											"end": 1825,
											"name": "MUL"
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1881,
											"name": "DUP2"
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "ADD"
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "DUP7"
										},
										{
											"begin": 1849,
											"end": 1889,
											"name": "ADD"
										},
										{
											"begin": 1843,
											"end": 1890,
											"name": "MLOAD"
										},
										{
											"begin": 1838,
											"end": 1890,
											"name": "SWAP3"
										},
										{
											"begin": 1838,
											"end": 1890,
											"name": "POP"
										},
										{
											"begin": 1948,
											"end": 1952,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP2"
										},
										{
											"begin": 1930,
											"end": 1953,
											"name": "ADD"
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "DUP7"
										},
										{
											"begin": 1914,
											"end": 1954,
											"name": "ADD"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "MLOAD"
										},
										{
											"begin": 1903,
											"end": 1955,
											"name": "SWAP2"
										},
										{
											"begin": 1903,
											"end": 1955,
											"name": "POP"
										},
										{
											"begin": 2292,
											"end": 2296,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2283,
											"end": 2287,
											"name": "PUSH",
											"value": "41"
										},
										{
											"begin": 2269,
											"end": 2281,
											"name": "DUP3"
										},
										{
											"begin": 2265,
											"end": 2288,
											"name": "ADD"
										},
										{
											"begin": 2253,
											"end": 2263,
											"name": "DUP8"
										},
										{
											"begin": 2249,
											"end": 2289,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2290,
											"name": "MLOAD"
										},
										{
											"begin": 2239,
											"end": 2297,
											"name": "AND"
										},
										{
											"begin": 2234,
											"end": 2297,
											"name": "SWAP4"
										},
										{
											"begin": 2234,
											"end": 2297,
											"name": "POP"
										},
										{
											"begin": 1777,
											"end": 2307,
											"name": "POP"
										},
										{
											"begin": 1777,
											"end": 2307,
											"name": "SWAP3"
										},
										{
											"begin": 1777,
											"end": 2307,
											"name": "POP"
										},
										{
											"begin": 1777,
											"end": 2307,
											"name": "SWAP3"
										},
										{
											"begin": 1777,
											"end": 2307,
											"name": "POP"
										},
										{
											"begin": 1777,
											"end": 2307,
											"name": "SWAP3"
										},
										{
											"begin": 1777,
											"end": 2307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MLOAD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "POP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MLOAD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "POP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MLOAD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "POP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "POP"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 3663,
											"end": 16817,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"28B765F195C3CD598E06ECB11EF8B4894757EBF4BABAD4A035BCAF2F5D0E18E5": "436f756c64206e6f742076616c6964617465204549502d31323731207369676e6174757265",
										"58537FA1960FBEBCCC117B6218B0AF08A9F148039299593EA287E665DD534BB1": "64656c6567617465735b6d73672e73656e6465725d5b75696e7434382864656c6567617465295d2e64656c6567617465203d3d2064656c6567617465",
										"80B006280932094E7CC965863EB5118DC07E5D272C6670C4A7C87299E04FCEEB": "416c6c6f77616e63655472616e73666572286164647265737320736166652c6164647265737320746f6b656e2c75696e74393620616d6f756e742c61646472657373207061796d656e74546f6b656e2c75696e743936207061796d656e742c75696e743136206e6f6e636529",
										"967A409FD152609403AC7B3349D7CED54D05D2EE8664844EDF017668D343240B": "657870656374656444656c6567617465203d3d207369676e65722026262064656c6567617465735b616464726573732873616665295d5b75696e743438287369676e6572295d2e64656c6567617465203d3d207369676e6572",
										"A7359A8519961096CF8FB65715F77DBC4DE2755AABF21E3445E245A34EE622DA": "6e65775370656e74203e20616c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d20616c6c6f77616e63652e616d6f756e74",
										"B549D52C5706645679000944AE1BCAEC935D0B8C387F4240A09789BE7DC8C0D4": "6e65775370656e74203e207061796d656e74416c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d207061796d656e74416c6c6f77616e63652e616d6f756e74"
									}
								}
							}
						},
						"methodIdentifiers": {
							"ALLOWANCE_TRANSFER_TYPEHASH()": "43abf5fe",
							"DOMAIN_SEPARATOR_TYPEHASH()": "1db61b54",
							"NAME()": "a3f4df7e",
							"VERSION()": "ffa1ad74",
							"addDelegate(address)": "e71bdf41",
							"allowances(address,address,address)": "b713c9d4",
							"delegates(address,uint48)": "ce60c692",
							"delegatesStart(address)": "310a3bb1",
							"domainSeparator()": "f698da25",
							"executeAllowanceTransfer(address,address,address,uint96,address,uint96,address,bytes)": "4515641a",
							"generateTransferHash(address,address,address,uint96,address,uint96,uint16)": "d626e043",
							"getDelegates(address,uint48,uint8)": "eb37abe0",
							"getTokenAllowance(address,address,address)": "94b31fbd",
							"getTokens(address,address)": "8d0e8e1d",
							"removeDelegate(address)": "67e7646f",
							"resetAllowance(address,address)": "c19bf50e",
							"setAllowance(address,address,uint96,uint16,uint32)": "beaeb388",
							"tokens(address,address,uint256)": "f56e81fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatesStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint48\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOWANCE_TRANSFER_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"safe\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint96\"},{\"name\":\"paymentToken\",\"type\":\"address\"},{\"name\":\"payment\",\"type\":\"uint96\"},{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"executeAllowanceTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"removeDelegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"safe\",\"type\":\"address\"},{\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"getTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"safe\",\"type\":\"address\"},{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint96\"},{\"name\":\"spent\",\"type\":\"uint96\"},{\"name\":\"resetTimeMin\",\"type\":\"uint16\"},{\"name\":\"lastResetMin\",\"type\":\"uint32\"},{\"name\":\"nonce\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"allowanceAmount\",\"type\":\"uint96\"},{\"name\":\"resetTimeMin\",\"type\":\"uint16\"},{\"name\":\"resetBaseMin\",\"type\":\"uint32\"}],\"name\":\"setAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"resetAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint48\"}],\"name\":\"delegates\",\"outputs\":[{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"prev\",\"type\":\"uint48\"},{\"name\":\"next\",\"type\":\"uint48\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"safe\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint96\"},{\"name\":\"paymentToken\",\"type\":\"address\"},{\"name\":\"payment\",\"type\":\"uint96\"},{\"name\":\"nonce\",\"type\":\"uint16\"}],\"name\":\"generateTransferHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"addDelegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"safe\",\"type\":\"address\"},{\"name\":\"start\",\"type\":\"uint48\"},{\"name\":\"pageSize\",\"type\":\"uint8\"}],\"name\":\"getDelegates\",\"outputs\":[{\"name\":\"results\",\"type\":\"address[]\"},{\"name\":\"next\",\"type\":\"uint48\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"AddDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"RemoveDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint96\"},{\"indexed\":false,\"name\":\"nonce\",\"type\":\"uint16\"}],\"name\":\"ExecuteAllowanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"allowanceAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"name\":\"resetTime\",\"type\":\"uint16\"}],\"name\":\"SetAllowance\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"setAllowance(address,address,uint96,uint16,uint32)\":{\"details\":\"Allows to update the allowance for a specified token. This can only be done via a Safe transaction.\",\"params\":{\"allowanceAmount\":\"allowance in smallest token unit.\",\"delegate\":\"Delegate whose allowance should be updated.\",\"resetBaseMin\":\"Time based on which the reset time should be increased\",\"resetTimeMin\":\"Time after which the allowance should reset\",\"token\":\"Token contract address.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/AllowanceModule.sol\":\"AllowanceModule\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/AllowanceModule.sol\":{\"keccak256\":\"0xeee537f1047709f0539aae239cc1ae1bab8865d644d480c26698cdd2051c9020\",\"urls\":[\"bzzr://ad2236eea0e82a7b47f8d0e76a615b441390417ab53acf9de0970f92076689ea\",\"dweb:/ipfs/QmPa1VBsL7jm7HJvC8jidzKfoKrwYjaX6t8bj26DA6657Q\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Enum": {
					"abi": [],
					"devdoc": {
						"author": "Richard Meissner - <richard@gnosis.pm>",
						"methods": {},
						"title": "Enum - Collection of enums"
					},
					"evm": {
						"assembly": "    /* \"input/AllowanceModule.sol\":122:201  contract Enum {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"input/AllowanceModule.sol\":122:201  contract Enum {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/AllowanceModule.sol\":122:201  contract Enum {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058208288982642d8fb9772d706a1f58cd6e055c0749db8b570b24d83eb3edae86c6a64736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723058208288982642d8fb9772d706a1f58cd6e055c0749db8b570b24d83eb3edae86c6a64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 DUP3 DUP9 SWAP9 0x26 TIMESTAMP 0xd8 0xfb SWAP8 PUSH19 0xD706A1F58CD6E055C0749DB8B570B24D83EB3E 0xda 0xe8 PUSH13 0x6A64736F6C634300050A003200 ",
							"sourceMap": "122:79:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;122:79:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a723058208288982642d8fb9772d706a1f58cd6e055c0749db8b570b24d83eb3edae86c6a64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 DUP3 DUP9 SWAP9 0x26 TIMESTAMP 0xd8 0xfb SWAP8 PUSH19 0xD706A1F58CD6E055C0749DB8B570B24D83EB3E 0xda 0xe8 PUSH13 0x6A64736F6C634300050A003200 ",
							"sourceMap": "122:79:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "66",
								"totalCost": "12466"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 122,
									"end": 201,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "MSTORE"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "POP"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "DUP1"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "CODECOPY"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 201,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723058208288982642d8fb9772d706a1f58cd6e055c0749db8b570b24d83eb3edae86c6a64736f6c634300050a0032",
									".code": [
										{
											"begin": 122,
											"end": 201,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 122,
											"end": 201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 122,
											"end": 201,
											"name": "MSTORE"
										},
										{
											"begin": 122,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 122,
											"end": 201,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 201,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.pm>\",\"methods\":{},\"title\":\"Enum - Collection of enums\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/AllowanceModule.sol\":\"Enum\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/AllowanceModule.sol\":{\"keccak256\":\"0xeee537f1047709f0539aae239cc1ae1bab8865d644d480c26698cdd2051c9020\",\"urls\":[\"bzzr://ad2236eea0e82a7b47f8d0e76a615b441390417ab53acf9de0970f92076689ea\",\"dweb:/ipfs/QmPa1VBsL7jm7HJvC8jidzKfoKrwYjaX6t8bj26DA6657Q\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"GnosisSafe": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								},
								{
									"name": "data",
									"type": "bytes"
								},
								{
									"name": "operation",
									"type": "uint8"
								}
							],
							"name": "execTransactionFromModule",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"execTransactionFromModule(address,uint256,bytes,uint8)": {
								"details": "Allows a Module to execute a Safe transaction without any further confirmations.",
								"params": {
									"data": "Data payload of module transaction.",
									"operation": "Operation type of module transaction.",
									"to": "Destination address of module transaction.",
									"value": "Ether value of module transaction."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"execTransactionFromModule(address,uint256,bytes,uint8)": "468721a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a Safe transaction without any further confirmations.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/AllowanceModule.sol\":\"GnosisSafe\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/AllowanceModule.sol\":{\"keccak256\":\"0xeee537f1047709f0539aae239cc1ae1bab8865d644d480c26698cdd2051c9020\",\"urls\":[\"bzzr://ad2236eea0e82a7b47f8d0e76a615b441390417ab53acf9de0970f92076689ea\",\"dweb:/ipfs/QmPa1VBsL7jm7HJvC8jidzKfoKrwYjaX6t8bj26DA6657Q\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"ISignatureValidator": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "_data",
									"type": "bytes"
								},
								{
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"name": "",
									"type": "bytes4"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signature": "Signature byte array associated with _data    * MUST return the bytes4 magic value 0x20c13b0b when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes,bytes)": "20c13b0b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data    * MUST return the bytes4 magic value 0x20c13b0b when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/AllowanceModule.sol\":\"ISignatureValidator\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/AllowanceModule.sol\":{\"keccak256\":\"0xeee537f1047709f0539aae239cc1ae1bab8865d644d480c26698cdd2051c9020\",\"urls\":[\"bzzr://ad2236eea0e82a7b47f8d0e76a615b441390417ab53acf9de0970f92076689ea\",\"dweb:/ipfs/QmPa1VBsL7jm7HJvC8jidzKfoKrwYjaX6t8bj26DA6657Q\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"ISignatureValidatorConstants": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"input/AllowanceModule.sol\":2317:2478  contract ISignatureValidatorConstants {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"input/AllowanceModule.sol\":2317:2478  contract ISignatureValidatorConstants {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/AllowanceModule.sol\":2317:2478  contract ISignatureValidatorConstants {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723058200d7f2bec9b9d69fe2a0317b9cddec9c7b2eb564d753abd3cda5863ac9f40237c64736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723058200d7f2bec9b9d69fe2a0317b9cddec9c7b2eb564d753abd3cda5863ac9f40237c64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xd PUSH32 0x2BEC9B9D69FE2A0317B9CDDEC9C7B2EB564D753ABD3CDA5863AC9F40237C6473 PUSH16 0x6C634300050A00320000000000000000 ",
							"sourceMap": "2317:161:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2317:161:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a723058200d7f2bec9b9d69fe2a0317b9cddec9c7b2eb564d753abd3cda5863ac9f40237c64736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xd PUSH32 0x2BEC9B9D69FE2A0317B9CDDEC9C7B2EB564D753ABD3CDA5863AC9F40237C6473 PUSH16 0x6C634300050A00320000000000000000 ",
							"sourceMap": "2317:161:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "66",
								"totalCost": "12466"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2317,
									"end": 2478,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "MSTORE"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "POP"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "DUP1"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "CODECOPY"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2317,
									"end": 2478,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723058200d7f2bec9b9d69fe2a0317b9cddec9c7b2eb564d753abd3cda5863ac9f40237c64736f6c634300050a0032",
									".code": [
										{
											"begin": 2317,
											"end": 2478,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2317,
											"end": 2478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2478,
											"name": "MSTORE"
										},
										{
											"begin": 2317,
											"end": 2478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2478,
											"name": "DUP1"
										},
										{
											"begin": 2317,
											"end": 2478,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/AllowanceModule.sol\":\"ISignatureValidatorConstants\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/AllowanceModule.sol\":{\"keccak256\":\"0xeee537f1047709f0539aae239cc1ae1bab8865d644d480c26698cdd2051c9020\",\"urls\":[\"bzzr://ad2236eea0e82a7b47f8d0e76a615b441390417ab53acf9de0970f92076689ea\",\"dweb:/ipfs/QmPa1VBsL7jm7HJvC8jidzKfoKrwYjaX6t8bj26DA6657Q\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SignatureDecoder": {
					"abi": [],
					"devdoc": {
						"author": "Ricardo Guilherme Schmidt (Status Research & Development GmbH)Richard Meissner - <richard@gnosis.pm>",
						"methods": {},
						"title": "SignatureDecoder - Decodes signatures that a encoded as bytes"
					},
					"evm": {
						"assembly": "    /* \"input/AllowanceModule.sol\":402:2315  contract SignatureDecoder {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"input/AllowanceModule.sol\":402:2315  contract SignatureDecoder {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"input/AllowanceModule.sol\":402:2315  contract SignatureDecoder {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72305820fc90d20971e1b12a1e80e14641a7ea67455b79da0887a827bf636a1b3f072d7964736f6c634300050a0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72305820fc90d20971e1b12a1e80e14641a7ea67455b79da0887a827bf636a1b3f072d7964736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xfc SWAP1 0xd2 MULMOD PUSH18 0xE1B12A1E80E14641A7EA67455B79DA0887A8 0x27 0xbf PUSH4 0x6A1B3F07 0x2d PUSH26 0x64736F6C634300050A0032000000000000000000000000000000 ",
							"sourceMap": "402:1913:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:1913:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a72305820fc90d20971e1b12a1e80e14641a7ea67455b79da0887a827bf636a1b3f072d7964736f6c634300050a0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xfc SWAP1 0xd2 MULMOD PUSH18 0xE1B12A1E80E14641A7EA67455B79DA0887A8 0x27 0xbf PUSH4 0x6A1B3F07 0x2d PUSH26 0x64736F6C634300050A0032000000000000000000000000000000 ",
							"sourceMap": "402:1913:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "66",
								"totalCost": "12466"
							},
							"internal": {
								"recoverKey(bytes32,bytes memory,uint256)": "infinite",
								"signatureSplit(bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 402,
									"end": 2315,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "MSTORE"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "POP"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "DUP1"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "CODECOPY"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 402,
									"end": 2315,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820fc90d20971e1b12a1e80e14641a7ea67455b79da0887a827bf636a1b3f072d7964736f6c634300050a0032",
									".code": [
										{
											"begin": 402,
											"end": 2315,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 402,
											"end": 2315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 2315,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 2315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 402,
											"end": 2315,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 2315,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Ricardo Guilherme Schmidt (Status Research & Development GmbH)Richard Meissner - <richard@gnosis.pm>\",\"methods\":{},\"title\":\"SignatureDecoder - Decodes signatures that a encoded as bytes\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"input/AllowanceModule.sol\":\"SignatureDecoder\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"input/AllowanceModule.sol\":{\"keccak256\":\"0xeee537f1047709f0539aae239cc1ae1bab8865d644d480c26698cdd2051c9020\",\"urls\":[\"bzzr://ad2236eea0e82a7b47f8d0e76a615b441390417ab53acf9de0970f92076689ea\",\"dweb:/ipfs/QmPa1VBsL7jm7HJvC8jidzKfoKrwYjaX6t8bj26DA6657Q\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "input/AllowanceModule.sol:267:5: Warning: Function state mutability can be restricted to view\n    function checkSignature(address expectedDelegate, bytes memory signature, bytes memory transferHashData, GnosisSafe safe) private {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 11682,
					"file": "input/AllowanceModule.sol",
					"start": 11238
				},
				"type": "Warning"
			}
		],
		"sources": {
			"input/AllowanceModule.sol": {
				"ast": {
					"absolutePath": "input/AllowanceModule.sol",
					"exportedSymbols": {
						"AllowanceModule": [
							1285
						],
						"Enum": [
							5
						],
						"GnosisSafe": [
							89
						],
						"ISignatureValidator": [
							75
						],
						"ISignatureValidatorConstants": [
							63
						],
						"SignatureDecoder": [
							59
						]
					},
					"id": 1286,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Enum - Collection of enums\n @author Richard Meissner - <richard@gnosis.pm>",
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5
							],
							"name": "Enum",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Enum.Operation",
									"id": 4,
									"members": [
										{
											"id": 2,
											"name": "Call",
											"nodeType": "EnumValue",
											"src": "167:4:0"
										},
										{
											"id": 3,
											"name": "DelegateCall",
											"nodeType": "EnumValue",
											"src": "181:12:0"
										}
									],
									"name": "Operation",
									"nodeType": "EnumDefinition",
									"src": "142:57:0"
								}
							],
							"scope": 1286,
							"src": "122:79:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title SignatureDecoder - Decodes signatures that a encoded as bytes\n @author Ricardo Guilherme Schmidt (Status Research & Development GmbH)\n @author Richard Meissner - <richard@gnosis.pm>",
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "SignatureDecoder",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "836:169:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "846:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 16,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 18,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "846:7:0"
											},
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "863:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 19,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "863:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "863:9:0"
											},
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "882:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 22,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 24,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "882:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 25,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"argumentTypes": null,
																"id": 26,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"argumentTypes": null,
																"id": 27,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "908:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"id": 28,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "901:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
															"typeString": "tuple(uint8,bytes32,bytes32)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 30,
																"name": "messageSignature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "928:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 31,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "946:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 29,
															"name": "signatureSplit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "913:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8,bytes32,bytes32)"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "913:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
															"typeString": "tuple(uint8,bytes32,bytes32)"
														}
													},
													"src": "901:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "901:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 36,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "977:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 37,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "990:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 39,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "967:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "967:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 41,
												"nodeType": "Return",
												"src": "960:38:0"
											}
										]
									},
									"documentation": "@dev Recovers address who signed the message\n @param messageHash operation ethereum signed message hash\n @param messageSignature message `txHash` signature\n @param pos which signature to read",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "messageHash",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "690:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"name": "messageSignature",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "719:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"name": "pos",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "758:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:95:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "823:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:9:0"
									},
									"scope": 59,
									"src": "660:345:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1536:777:0",
										"statements": [
											{
												"externalReferences": [
													{
														"r": {
															"declaration": 52,
															"isOffset": false,
															"isSlot": false,
															"src": "1838:1:0",
															"valueSize": 1
														}
													},
													{
														"s": {
															"declaration": 54,
															"isOffset": false,
															"isSlot": false,
															"src": "1903:1:0",
															"valueSize": 1
														}
													},
													{
														"v": {
															"declaration": 50,
															"isOffset": false,
															"isSlot": false,
															"src": "2234:1:0",
															"valueSize": 1
														}
													},
													{
														"pos": {
															"declaration": 47,
															"isOffset": false,
															"isSlot": false,
															"src": "1821:3:0",
															"valueSize": 1
														}
													},
													{
														"signatures": {
															"declaration": 45,
															"isOffset": false,
															"isSlot": false,
															"src": "2253:10:0",
															"valueSize": 1
														}
													},
													{
														"signatures": {
															"declaration": 45,
															"isOffset": false,
															"isSlot": false,
															"src": "1853:10:0",
															"valueSize": 1
														}
													},
													{
														"signatures": {
															"declaration": 45,
															"isOffset": false,
															"isSlot": false,
															"src": "1918:10:0",
															"valueSize": 1
														}
													}
												],
												"id": 56,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let signaturePos := mul(0x41, pos)\n    r := mload(add(signatures, add(signaturePos, 0x20)))\n    s := mload(add(signatures, add(signaturePos, 0x40)))\n    v := and(mload(add(signatures, add(signaturePos, 0x41))), 0xff)\n}",
												"src": "1768:539:0"
											}
										]
									},
									"documentation": "@dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\n @notice Make sure to peform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n @param pos which signature to read. A prior bounds check of this parameter should be performed, to avoid out of bounds access\n @param signatures concatenated rsv signatures",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signatureSplit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "signatures",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1416:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 44,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1416:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"name": "pos",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1441:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1415:38:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1501:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 49,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1510:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 51,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1521:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 53,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1500:31:0"
									},
									"scope": 59,
									"src": "1392:921:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1286,
							"src": "402:1913:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "ISignatureValidatorConstants",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 62,
									"name": "EIP1271_MAGIC_VALUE",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "2418:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 60,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "2418:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783230633133623062",
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2465:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_549534475_by_1",
											"typeString": "int_const 549534475"
										},
										"value": "0x20c13b0b"
									},
									"visibility": "internal"
								}
							],
							"scope": 1286,
							"src": "2317:161:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 64,
										"name": "ISignatureValidatorConstants",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 63,
										"src": "2512:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISignatureValidatorConstants_$63",
											"typeString": "contract ISignatureValidatorConstants"
										}
									},
									"id": 65,
									"nodeType": "InheritanceSpecifier",
									"src": "2512:28:0"
								}
							],
							"contractDependencies": [
								63
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 75,
							"linearizedBaseContracts": [
								75,
								63
							],
							"name": "ISignatureValidator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Should return whether the signature provided is valid for the provided data\n@param _data Arbitrary length data signed on the behalf of address(this)\n@param _signature Signature byte array associated with _data\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\nMUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\nMUST allow external calls",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3035:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 66,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3035:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"name": "_signature",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3063:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 68,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3025:62:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3133:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3133:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3132:8:0"
									},
									"scope": 75,
									"src": "3000:141:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1286,
							"src": "2480:663:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "GnosisSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Allows a Module to execute a Safe transaction without any further confirmations.\n @param to Destination address of module transaction.\n @param value Ether value of module transaction.\n @param data Data payload of module transaction.\n @param operation Operation type of module transaction.",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execTransactionFromModule",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3537:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3564:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 80,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3564:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"name": "operation",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3585:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Operation_$4",
													"typeString": "enum Enum.Operation"
												},
												"typeName": {
													"contractScope": null,
													"id": 82,
													"name": "Enum.Operation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 4,
													"src": "3585:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Operation_$4",
														"typeString": "enum Enum.Operation"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3536:74:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3645:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3644:14:0"
									},
									"scope": 89,
									"src": "3502:157:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1286,
							"src": "3145:516:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 90,
										"name": "SignatureDecoder",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 59,
										"src": "3691:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SignatureDecoder_$59",
											"typeString": "contract SignatureDecoder"
										}
									},
									"id": 91,
									"nodeType": "InheritanceSpecifier",
									"src": "3691:16:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 92,
										"name": "ISignatureValidatorConstants",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 63,
										"src": "3709:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISignatureValidatorConstants_$63",
											"typeString": "contract ISignatureValidatorConstants"
										}
									},
									"id": 93,
									"nodeType": "InheritanceSpecifier",
									"src": "3709:28:0"
								}
							],
							"contractDependencies": [
								59,
								63
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285,
								63,
								59
							],
							"name": "AllowanceModule",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 96,
									"name": "NAME",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "3745:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 94,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3745:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "416c6c6f77616e6365204d6f64756c65",
										"id": 95,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3775:18:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_08f58094bad74d8c1150a9739fed54fd2f5fa3e2ab1381a21213c5b33d83bad3",
											"typeString": "literal_string \"Allowance Module\""
										},
										"value": "Allowance Module"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 99,
									"name": "VERSION",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "3799:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 97,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3799:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e312e30",
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3832:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_aa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f",
											"typeString": "literal_string \"0.1.0\""
										},
										"value": "0.1.0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 102,
									"name": "DOMAIN_SEPARATOR_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "3924:118:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 100,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3924:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307830333561666638336438363933376433356233326530346630646463366666343639323930656566326631623639326438613831356338393430346434373439",
										"id": 101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3976:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1517718281442037948617199096126532355110765202990829672390711201829802035017_by_1",
											"typeString": "int_const 1517...(68 digits omitted)...5017"
										},
										"value": "0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 107,
									"name": "ALLOWANCE_TRANSFER_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "4080:189:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 103,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4080:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "416c6c6f77616e63655472616e73666572286164647265737320736166652c6164647265737320746f6b656e2c75696e74393620616d6f756e742c61646472657373207061796d656e74546f6b656e2c75696e743936207061796d656e742c75696e743136206e6f6e636529",
												"id": 105,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4153:110:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_80b006280932094e7cc965863eb5118dc07e5d272c6670c4a7c87299e04fceeb",
													"typeString": "literal_string \"AllowanceTransfer(address safe,address token,uint96 amount,address paymentToken,uint96 payment,uint16 nonce)\""
												},
												"value": "AllowanceTransfer(address safe,address token,uint96 amount,address paymentToken,uint96 payment,uint16 nonce)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_80b006280932094e7cc965863eb5118dc07e5d272c6670c4a7c87299e04fceeb",
													"typeString": "literal_string \"AllowanceTransfer(address safe,address token,uint96 amount,address paymentToken,uint96 payment,uint16 nonce)\""
												}
											],
											"id": 104,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1294,
											"src": "4134:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4134:135:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 115,
									"name": "allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "4313:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$_$_$",
										"typeString": "mapping(address => mapping(address => mapping(address => struct AllowanceModule.Allowance)))"
									},
									"typeName": {
										"id": 114,
										"keyType": {
											"id": 108,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4321:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4313:70:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$_$_$",
											"typeString": "mapping(address => mapping(address => mapping(address => struct AllowanceModule.Allowance)))"
										},
										"valueType": {
											"id": 113,
											"keyType": {
												"id": 109,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4341:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4332:50:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$_$",
												"typeString": "mapping(address => mapping(address => struct AllowanceModule.Allowance))"
											},
											"valueType": {
												"id": 112,
												"keyType": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "4352:29:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$",
													"typeString": "mapping(address => struct AllowanceModule.Allowance)"
												},
												"valueType": {
													"contractScope": null,
													"id": 111,
													"name": "Allowance",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 152,
													"src": "4371:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
														"typeString": "struct AllowanceModule.Allowance"
													}
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 122,
									"name": "tokens",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "4407:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
										"typeString": "mapping(address => mapping(address => address[]))"
									},
									"typeName": {
										"id": 121,
										"keyType": {
											"id": 116,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4415:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4407:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
											"typeString": "mapping(address => mapping(address => address[]))"
										},
										"valueType": {
											"id": 120,
											"keyType": {
												"id": 117,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4435:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4426:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
												"typeString": "mapping(address => address[])"
											},
											"valueType": {
												"baseType": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 119,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "4446:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 128,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "4477:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
										"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate))"
									},
									"typeName": {
										"id": 127,
										"keyType": {
											"id": 123,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4485:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4477:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
											"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate))"
										},
										"valueType": {
											"id": 126,
											"keyType": {
												"id": 124,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "4505:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "Mapping",
											"src": "4496:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
												"typeString": "mapping(uint48 => struct AllowanceModule.Delegate)"
											},
											"valueType": {
												"contractScope": null,
												"id": 125,
												"name": "Delegate",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 141,
												"src": "4515:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Delegate_$141_storage_ptr",
													"typeString": "struct AllowanceModule.Delegate"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 132,
									"name": "delegatesStart",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "4548:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint48_$",
										"typeString": "mapping(address => uint48)"
									},
									"typeName": {
										"id": 131,
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4556:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4548:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint48_$",
											"typeString": "mapping(address => uint48)"
										},
										"valueType": {
											"id": 130,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "4567:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 134,
									"name": "domainSeparator",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "4602:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 133,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4602:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "AllowanceModule.Delegate",
									"id": 141,
									"members": [
										{
											"constant": false,
											"id": 136,
											"name": "delegate",
											"nodeType": "VariableDeclaration",
											"scope": 141,
											"src": "4665:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4665:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"name": "prev",
											"nodeType": "VariableDeclaration",
											"scope": 141,
											"src": "4691:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 137,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "4691:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"name": "next",
											"nodeType": "VariableDeclaration",
											"scope": 141,
											"src": "4712:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 139,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "4712:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Delegate",
									"nodeType": "StructDefinition",
									"scope": 1285,
									"src": "4639:91:0",
									"visibility": "public"
								},
								{
									"canonicalName": "AllowanceModule.Allowance",
									"id": 152,
									"members": [
										{
											"constant": false,
											"id": 143,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "4763:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 142,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "4763:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 145,
											"name": "spent",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "4786:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 144,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "4786:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 147,
											"name": "resetTimeMin",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "4808:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 146,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4808:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 149,
											"name": "lastResetMin",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "4871:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 148,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "4871:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 151,
											"name": "nonce",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "4900:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 150,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4900:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Allowance",
									"nodeType": "StructDefinition",
									"scope": 1285,
									"src": "4736:183:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 158,
									"name": "AddDelegate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4943:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4965:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4942:40:0"
									},
									"src": "4925:58:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 164,
									"name": "RemoveDelegate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5009:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5031:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5008:40:0"
									},
									"src": "4988:61:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 178,
									"name": "ExecuteAllowanceTransfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "5085:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": false,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "5107:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "5125:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "5140:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "5152:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 173,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "5152:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "5166:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 175,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5084:95:0"
									},
									"src": "5054:126:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 190,
									"name": "SetAllowance",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5204:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": false,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5226:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5244:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": false,
												"name": "allowanceAmount",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5259:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 185,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "5259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"name": "resetTime",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5283:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 187,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5203:97:0"
									},
									"src": "5185:116:0"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "5328:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 193,
														"name": "domainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "5338:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 197,
																		"name": "DOMAIN_SEPARATOR_TYPEHASH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "5377:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 198,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "5404:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AllowanceModule_$1285",
																			"typeString": "contract AllowanceModule"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_contract$_AllowanceModule_$1285",
																			"typeString": "contract AllowanceModule"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 195,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5366:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5366:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5366:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 194,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "5356:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5356:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5338:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5338:72:0"
											}
										]
									},
									"documentation": null,
									"id": 204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5318:2:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5328:0:0"
									},
									"scope": 1285,
									"src": "5307:110:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "6009:1116:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 218,
																			"name": "delegates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 128,
																			"src": "6027:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																				"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																			}
																		},
																		"id": 221,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 219,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1300,
																				"src": "6037:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "6037:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6027:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																			"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
																		}
																	},
																	"id": 225,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 223,
																				"name": "delegate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 206,
																				"src": "6056:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6049:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint48_$",
																				"typeString": "type(uint48)"
																			},
																			"typeName": "uint48"
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6049:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6027:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Delegate_$141_storage",
																		"typeString": "struct AllowanceModule.Delegate storage ref"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "delegate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 136,
																"src": "6027:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 227,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "6079:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6027:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64656c6567617465735b6d73672e73656e6465725d5b75696e7434382864656c6567617465295d2e64656c6567617465203d3d2064656c6567617465",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6089:62:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58537fa1960fbebccc117b6218b0af08a9f148039299593ea287e665dd534bb1",
																"typeString": "literal_string \"delegates[msg.sender][uint48(delegate)].delegate == delegate\""
															},
															"value": "delegates[msg.sender][uint48(delegate)].delegate == delegate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58537fa1960fbebccc117b6218b0af08a9f148039299593ea287e665dd534bb1",
																"typeString": "literal_string \"delegates[msg.sender][uint48(delegate)].delegate == delegate\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1303,
															1304
														],
														"referencedDeclaration": 1304,
														"src": "6019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6019:133:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "6019:133:0"
											},
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"name": "allowance",
														"nodeType": "VariableDeclaration",
														"scope": 338,
														"src": "6162:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
															"typeString": "struct AllowanceModule.Allowance"
														},
														"typeName": {
															"contractScope": null,
															"id": 232,
															"name": "Allowance",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 152,
															"src": "6162:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
																"typeString": "struct AllowanceModule.Allowance"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 235,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "6204:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 237,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "6216:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 238,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "6226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 234,
														"name": "getAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "6191:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_struct$_Allowance_$152_memory_ptr_$",
															"typeString": "function (address,address,address) view returns (struct AllowanceModule.Allowance memory)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6191:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
														"typeString": "struct AllowanceModule.Allowance memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6162:70:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 241,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6246:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 151,
														"src": "6246:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6265:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6246:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 262,
												"nodeType": "IfStatement",
												"src": "6242:210:0",
												"trueBody": {
													"id": 261,
													"nodeType": "Block",
													"src": "6268:184:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 245,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6368:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 151,
																	"src": "6368:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6386:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6368:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6368:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 258,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "6435:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 251,
																				"name": "tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "6401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																					"typeString": "mapping(address => mapping(address => address[] storage ref))"
																				}
																			},
																			"id": 255,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 252,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1300,
																					"src": "6408:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "6408:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6401:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 256,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 254,
																			"name": "delegate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "6420:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6401:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6401:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) returns (uint256)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6401:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 260,
															"nodeType": "ExpressionStatement",
															"src": "6401:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"name": "currentMin",
														"nodeType": "VariableDeclaration",
														"scope": 338,
														"src": "6523:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 263,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "6523:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "6550:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3630",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6556:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "6550:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6543:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6543:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6523:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 271,
														"name": "resetBaseMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6573:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6588:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6573:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 296,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6787:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																	"typeString": "struct AllowanceModule.Allowance memory"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastResetMin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "6787:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6813:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6787:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 307,
													"nodeType": "IfStatement",
													"src": "6783:93:0",
													"trueBody": {
														"id": 306,
														"nodeType": "Block",
														"src": "6816:60:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 300,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "6830:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																				"typeString": "struct AllowanceModule.Allowance memory"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "lastResetMin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 149,
																		"src": "6830:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 303,
																		"name": "currentMin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "6855:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "6830:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"id": 305,
																"nodeType": "ExpressionStatement",
																"src": "6830:35:0"
															}
														]
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "6569:307:0",
												"trueBody": {
													"id": 295,
													"nodeType": "Block",
													"src": "6591:186:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 275,
																			"name": "resetBaseMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "6613:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 276,
																			"name": "currentMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 264,
																			"src": "6629:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "6613:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "7265736574426173654d696e203c3d2063757272656e744d696e",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6641:28:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1ede17760f99a36e22c97a9975aa792b767bce45958763871f51d908d7d840ba",
																			"typeString": "literal_string \"resetBaseMin <= currentMin\""
																		},
																		"value": "resetBaseMin <= currentMin"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1ede17760f99a36e22c97a9975aa792b767bce45958763871f51d908d7d840ba",
																			"typeString": "literal_string \"resetBaseMin <= currentMin\""
																		}
																	],
																	"id": 274,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1303,
																		1304
																	],
																	"referencedDeclaration": 1304,
																	"src": "6605:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6605:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "6605:65:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 281,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6684:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastResetMin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "6684:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 284,
																		"name": "currentMin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "6709:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							},
																							"id": 287,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 285,
																								"name": "currentMin",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 264,
																								"src": "6724:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 286,
																								"name": "resetBaseMin",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 214,
																								"src": "6737:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"src": "6724:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						}
																					],
																					"id": 288,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6723:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 289,
																					"name": "resetTimeMin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 212,
																					"src": "6753:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "6723:42:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 291,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6722:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "6709:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "6684:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "6684:82:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 309,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6885:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "resetTimeMin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "6885:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 312,
														"name": "resetTimeMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "6910:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6885:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "6885:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 315,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6932:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 143,
														"src": "6932:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 318,
														"name": "allowanceAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "6951:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "6932:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "6932:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 322,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "6992:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6992:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "7004:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "7014:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 326,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7021:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														],
														"id": 321,
														"name": "updateAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "6976:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_struct$_Allowance_$152_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,struct AllowanceModule.Allowance memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "6976:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 330,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "7059:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7059:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 332,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "7071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 333,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "7081:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 334,
															"name": "allowanceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "7088:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"id": 335,
															"name": "resetTimeMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7105:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 329,
														"name": "SetAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "7046:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_uint16_$returns$__$",
															"typeString": "function (address,address,address,uint96,uint16)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7046:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "EmitStatement",
												"src": "7041:77:0"
											}
										]
									},
									"documentation": "@dev Allows to update the allowance for a specified token. This can only be done via a Safe transaction.\n @param delegate Delegate whose allowance should be updated.\n @param token Token contract address.\n @param allowanceAmount allowance in smallest token unit.\n @param resetTimeMin Time after which the allowance should reset\n @param resetBaseMin Time based on which the reset time should be increased",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5891:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"name": "allowanceAmount",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5924:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 209,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "5924:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"name": "resetTimeMin",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5948:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 211,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5948:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"name": "resetBaseMin",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5969:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 213,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5969:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5890:99:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6009:0:0"
									},
									"scope": 1285,
									"src": "5869:1256:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "7250:462:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 350,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7260:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
															"typeString": "struct AllowanceModule.Allowance memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "allowances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "7272:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => struct AllowanceModule.Allowance storage ref)))"
																	}
																},
																"id": 353,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 352,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "7283:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7272:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct AllowanceModule.Allowance storage ref))"
																}
															},
															"id": 355,
															"indexExpression": {
																"argumentTypes": null,
																"id": 354,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "7289:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7272:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$",
																"typeString": "mapping(address => struct AllowanceModule.Allowance storage ref)"
															}
														},
														"id": 357,
														"indexExpression": {
															"argumentTypes": null,
															"id": 356,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "7299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7272:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_storage",
															"typeString": "struct AllowanceModule.Allowance storage ref"
														}
													},
													"src": "7260:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
														"typeString": "struct AllowanceModule.Allowance memory"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "7260:45:0"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"name": "currentMin",
														"nodeType": "VariableDeclaration",
														"scope": 406,
														"src": "7377:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 360,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "7377:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 363,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "7404:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3630",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7410:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "7404:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7397:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7397:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7377:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 368,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "7427:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																	"typeString": "struct AllowanceModule.Allowance memory"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "resetTimeMin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 147,
															"src": "7427:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7452:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7427:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 372,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "7457:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																	"typeString": "struct AllowanceModule.Allowance memory"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastResetMin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "7457:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 374,
																"name": "currentMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "7483:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "7496:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																		"typeString": "struct AllowanceModule.Allowance memory"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resetTimeMin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 147,
																"src": "7496:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "7483:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "7457:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7427:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 403,
												"nodeType": "IfStatement",
												"src": "7423:257:0",
												"trueBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "7520:160:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 380,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "7534:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "spent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "7534:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7552:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7534:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 385,
															"nodeType": "ExpressionStatement",
															"src": "7534:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 386,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "7567:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastResetMin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "7567:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 389,
																		"name": "currentMin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "7592:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							},
																							"id": 393,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 390,
																								"name": "currentMin",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 361,
																								"src": "7607:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 391,
																									"name": "allowance",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 348,
																									"src": "7620:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																										"typeString": "struct AllowanceModule.Allowance memory"
																									}
																								},
																								"id": 392,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "lastResetMin",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 149,
																								"src": "7620:22:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"src": "7607:35:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						}
																					],
																					"id": 394,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7606:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 395,
																						"name": "allowance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 348,
																						"src": "7646:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																							"typeString": "struct AllowanceModule.Allowance memory"
																						}
																					},
																					"id": 396,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "resetTimeMin",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 147,
																					"src": "7646:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "7606:62:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 398,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7605:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "7592:77:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "7567:102:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "7567:102:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 404,
													"name": "allowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "7696:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
														"typeString": "struct AllowanceModule.Allowance memory"
													}
												},
												"functionReturnParameters": 349,
												"id": 405,
												"nodeType": "Return",
												"src": "7689:16:0"
											}
										]
									},
									"documentation": null,
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "7153:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "7167:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "7185:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7152:47:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "allowance",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "7222:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
													"typeString": "struct AllowanceModule.Allowance"
												},
												"typeName": {
													"contractScope": null,
													"id": 347,
													"name": "Allowance",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 152,
													"src": "7222:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
														"typeString": "struct AllowanceModule.Allowance"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7221:28:0"
									},
									"scope": 1285,
									"src": "7131:581:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "7826:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 418,
																	"name": "allowances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "7836:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => struct AllowanceModule.Allowance storage ref)))"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "7847:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7836:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct AllowanceModule.Allowance storage ref))"
																}
															},
															"id": 423,
															"indexExpression": {
																"argumentTypes": null,
																"id": 420,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "7853:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7836:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allowance_$152_storage_$",
																"typeString": "mapping(address => struct AllowanceModule.Allowance storage ref)"
															}
														},
														"id": 424,
														"indexExpression": {
															"argumentTypes": null,
															"id": 421,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7836:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_storage",
															"typeString": "struct AllowanceModule.Allowance storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 425,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "7872:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
															"typeString": "struct AllowanceModule.Allowance memory"
														}
													},
													"src": "7836:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_storage",
														"typeString": "struct AllowanceModule.Allowance storage ref"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "7836:45:0"
											}
										]
									},
									"documentation": null,
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "7743:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "7757:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "7775:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"name": "allowance",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "7790:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
													"typeString": "struct AllowanceModule.Allowance"
												},
												"typeName": {
													"contractScope": null,
													"id": 414,
													"name": "Allowance",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 152,
													"src": "7790:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
														"typeString": "struct AllowanceModule.Allowance"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7742:75:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7826:0:0"
									},
									"scope": 1285,
									"src": "7718:170:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "7958:181:0",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"name": "allowance",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "7968:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
															"typeString": "struct AllowanceModule.Allowance"
														},
														"typeName": {
															"contractScope": null,
															"id": 436,
															"name": "Allowance",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 152,
															"src": "7968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
																"typeString": "struct AllowanceModule.Allowance"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "8010:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8010:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 441,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "8022:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 442,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8032:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 438,
														"name": "getAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "7997:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_struct$_Allowance_$152_memory_ptr_$",
															"typeString": "function (address,address,address) view returns (struct AllowanceModule.Allowance memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7997:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
														"typeString": "struct AllowanceModule.Allowance memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7968:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 445,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "8048:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "spent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "8048:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8066:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8048:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "8048:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "8093:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8093:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 454,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "8105:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8115:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 456,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "8122:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														],
														"id": 451,
														"name": "updateAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "8077:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_struct$_Allowance_$152_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,struct AllowanceModule.Allowance memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8077:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "8077:55:0"
											}
										]
									},
									"documentation": null,
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resetAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "7918:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "7936:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7917:33:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7958:0:0"
									},
									"scope": 1285,
									"src": "7894:245:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "8403:1956:0",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"name": "allowance",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8442:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
															"typeString": "struct AllowanceModule.Allowance"
														},
														"typeName": {
															"contractScope": null,
															"id": 479,
															"name": "Allowance",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 152,
															"src": "8442:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
																"typeString": "struct AllowanceModule.Allowance"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 483,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "8492:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																],
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8484:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 485,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "8499:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 486,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8509:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 481,
														"name": "getAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "8471:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_struct$_Allowance_$152_memory_ptr_$",
															"typeString": "function (address,address,address) view returns (struct AllowanceModule.Allowance memory)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8471:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
														"typeString": "struct AllowanceModule.Allowance memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8442:73:0"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"name": "transferHashData",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8525:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8525:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 493,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "8590:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8582:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8582:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 495,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8597:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "8604:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 497,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "8608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "8616:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 500,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "8639:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																	"typeString": "struct AllowanceModule.Allowance memory"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 151,
															"src": "8639:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 491,
														"name": "generateTransferHashData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "8557:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_address_$_t_uint96_$_t_uint16_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,address,address,uint96,address,uint96,uint16) view returns (bytes memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8557:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8525:130:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 504,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "8689:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 151,
														"src": "8689:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 507,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "8707:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																	"typeString": "struct AllowanceModule.Allowance memory"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 151,
															"src": "8707:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8725:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8707:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8689:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "8689:37:0"
											},
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"name": "newSpent",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8736:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 513,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "8736:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 515,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "8754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "spent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "8754:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 517,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "8772:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "8754:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8736:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 521,
																	"name": "newSpent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "8843:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 522,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "8854:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "spent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "8854:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "8843:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 525,
																	"name": "newSpent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "8873:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 526,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "8885:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 143,
																	"src": "8885:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "8873:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8843:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e65775370656e74203e20616c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d20616c6c6f77616e63652e616d6f756e74",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8903:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7359a8519961096cf8fb65715f77dbc4de2755aabf21e3445e245a34ee622da",
																"typeString": "literal_string \"newSpent > allowance.spent && newSpent <= allowance.amount\""
															},
															"value": "newSpent > allowance.spent && newSpent <= allowance.amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7359a8519961096cf8fb65715f77dbc4de2755aabf21e3445e245a34ee622da",
																"typeString": "literal_string \"newSpent > allowance.spent && newSpent <= allowance.amount\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1303,
															1304
														],
														"referencedDeclaration": 1304,
														"src": "8835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8835:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "8835:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 533,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "8974:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "spent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "8974:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 536,
														"name": "newSpent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "8992:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "8974:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "8974:26:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 539,
														"name": "payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "9014:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9024:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9014:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 597,
												"nodeType": "IfStatement",
												"src": "9010:749:0",
												"trueBody": {
													"id": 596,
													"nodeType": "Block",
													"src": "9027:732:0",
													"statements": [
														{
															"assignments": [
																543
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 543,
																	"name": "paymentAllowance",
																	"nodeType": "VariableDeclaration",
																	"scope": 596,
																	"src": "9117:33:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																		"typeString": "struct AllowanceModule.Allowance"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 542,
																		"name": "Allowance",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 152,
																		"src": "9117:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
																			"typeString": "struct AllowanceModule.Allowance"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 556,
															"initialValue": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 544,
																		"name": "paymentToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "9153:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 545,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "9169:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "9153:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 550,
																					"name": "safe",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "9210:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_GnosisSafe_$89",
																						"typeString": "contract GnosisSafe"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_GnosisSafe_$89",
																						"typeString": "contract GnosisSafe"
																					}
																				],
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9202:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9202:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 552,
																			"name": "delegate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "9217:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 553,
																			"name": "paymentToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "9227:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 548,
																		"name": "getAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "9189:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_struct$_Allowance_$152_memory_ptr_$",
																			"typeString": "function (address,address,address) view returns (struct AllowanceModule.Allowance memory)"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9189:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																		"typeString": "struct AllowanceModule.Allowance memory"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9153:87:0",
																"trueExpression": {
																	"argumentTypes": null,
																	"id": 547,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "9177:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																		"typeString": "struct AllowanceModule.Allowance memory"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																	"typeString": "struct AllowanceModule.Allowance memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9117:123:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 557,
																	"name": "newSpent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "9254:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 558,
																			"name": "paymentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "9265:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																				"typeString": "struct AllowanceModule.Allowance memory"
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "spent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 145,
																		"src": "9265:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 560,
																		"name": "payment",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "9290:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"src": "9265:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "9254:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 563,
															"nodeType": "ExpressionStatement",
															"src": "9254:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 565,
																				"name": "newSpent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "9371:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 566,
																					"name": "paymentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "9382:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																						"typeString": "struct AllowanceModule.Allowance memory"
																					}
																				},
																				"id": 567,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "spent",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 145,
																				"src": "9382:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"src": "9371:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 569,
																				"name": "newSpent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "9408:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 570,
																					"name": "paymentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "9420:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																						"typeString": "struct AllowanceModule.Allowance memory"
																					}
																				},
																				"id": 571,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 143,
																				"src": "9420:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"src": "9408:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9371:72:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "6e65775370656e74203e207061796d656e74416c6c6f77616e63652e7370656e74202626206e65775370656e74203c3d207061796d656e74416c6c6f77616e63652e616d6f756e74",
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9445:74:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b549d52c5706645679000944ae1bcaec935d0b8c387f4240a09789be7dc8c0d4",
																			"typeString": "literal_string \"newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount\""
																		},
																		"value": "newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b549d52c5706645679000944ae1bcaec935d0b8c387f4240a09789be7dc8c0d4",
																			"typeString": "literal_string \"newSpent > paymentAllowance.spent && newSpent <= paymentAllowance.amount\""
																		}
																	],
																	"id": 564,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1303,
																		1304
																	],
																	"referencedDeclaration": 1304,
																	"src": "9363:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9363:157:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 576,
															"nodeType": "ExpressionStatement",
															"src": "9363:157:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 577,
																		"name": "paymentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 543,
																		"src": "9534:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "spent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "9534:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 580,
																	"name": "newSpent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "9559:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "9534:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 582,
															"nodeType": "ExpressionStatement",
															"src": "9534:33:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 583,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "9653:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "9669:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9653:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 595,
															"nodeType": "IfStatement",
															"src": "9649:99:0",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 588,
																					"name": "safe",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "9700:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_GnosisSafe_$89",
																						"typeString": "contract GnosisSafe"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_GnosisSafe_$89",
																						"typeString": "contract GnosisSafe"
																					}
																				],
																				"id": 587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9692:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9692:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 590,
																			"name": "delegate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "9707:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 591,
																			"name": "paymentToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "9717:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 592,
																			"name": "paymentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "9731:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																				"typeString": "struct AllowanceModule.Allowance memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																				"typeString": "struct AllowanceModule.Allowance memory"
																			}
																		],
																		"id": 586,
																		"name": "updateAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "9676:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_struct$_Allowance_$152_memory_ptr_$returns$__$",
																			"typeString": "function (address,address,address,struct AllowanceModule.Allowance memory)"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9676:72:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 594,
																"nodeType": "ExpressionStatement",
																"src": "9676:72:0"
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 600,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "9792:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9784:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9784:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 602,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "9799:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9809:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "9816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																"typeString": "struct AllowanceModule.Allowance memory"
															}
														],
														"id": 598,
														"name": "updateAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "9768:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_struct$_Allowance_$152_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,struct AllowanceModule.Allowance memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9768:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "9768:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 608,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "9923:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 609,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "9933:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 610,
															"name": "transferHashData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "9944:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 611,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GnosisSafe_$89",
																"typeString": "contract GnosisSafe"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_contract$_GnosisSafe_$89",
																"typeString": "contract GnosisSafe"
															}
														],
														"id": 607,
														"name": "checkSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "9908:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_contract$_GnosisSafe_$89_$returns$__$",
															"typeString": "function (address,bytes memory,bytes memory,contract GnosisSafe)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9908:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "9908:59:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 614,
														"name": "payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "10000:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10010:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10000:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 626,
												"nodeType": "IfStatement",
												"src": "9996:184:0",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "10013:167:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 618,
																		"name": "safe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "10130:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GnosisSafe_$89",
																			"typeString": "contract GnosisSafe"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 619,
																		"name": "paymentToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "10136:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 620,
																			"name": "tx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1312,
																			"src": "10150:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_transaction",
																				"typeString": "tx"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "origin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10150:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 622,
																		"name": "payment",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "10161:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GnosisSafe_$89",
																			"typeString": "contract GnosisSafe"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 617,
																	"name": "transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10121:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_GnosisSafe_$89_$_t_address_$_t_address_payable_$_t_uint96_$returns$__$",
																		"typeString": "function (contract GnosisSafe,address,address payable,uint96)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10121:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "10121:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 628,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "10224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GnosisSafe_$89",
																"typeString": "contract GnosisSafe"
															}
														},
														{
															"argumentTypes": null,
															"id": 629,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "10230:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 630,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "10237:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 631,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "10241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_GnosisSafe_$89",
																"typeString": "contract GnosisSafe"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 627,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10215:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_GnosisSafe_$89_$_t_address_$_t_address_payable_$_t_uint96_$returns$__$",
															"typeString": "function (contract GnosisSafe,address,address payable,uint96)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10215:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "10215:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 636,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "10296:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GnosisSafe_$89",
																		"typeString": "contract GnosisSafe"
																	}
																],
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10288:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10288:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 638,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "10303:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 639,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "10313:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 640,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "10320:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 641,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "10324:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 642,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10332:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																		"typeString": "struct AllowanceModule.Allowance memory"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nonce",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 151,
																"src": "10332:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10350:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10332:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 634,
														"name": "ExecuteAllowanceTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "10263:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_uint16_$returns$__$",
															"typeString": "function (address,address,address,address,uint96,uint16)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10263:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "EmitStatement",
												"src": "10258:94:0"
											}
										]
									},
									"documentation": null,
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeAllowanceTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8188:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafe_$89",
													"typeString": "contract GnosisSafe"
												},
												"typeName": {
													"contractScope": null,
													"id": 461,
													"name": "GnosisSafe",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 89,
													"src": "8188:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafe_$89",
														"typeString": "contract GnosisSafe"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8213:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8236:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8236:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 467,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "8264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"name": "paymentToken",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8287:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"name": "payment",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8317:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 471,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "8317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8367:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8367:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8178:217:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8403:0:0"
									},
									"scope": 1285,
									"src": "8145:2214:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "10605:255:0",
										"statements": [
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"name": "transferHash",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "10615:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 668,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 673,
																	"name": "ALLOWANCE_TRANSFER_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "10672:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 674,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "10701:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 675,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "10707:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 676,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "10714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 677,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "10718:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 678,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "10726:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 679,
																	"name": "payment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "10740:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 680,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "10749:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 671,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "10661:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10661:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10661:94:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 670,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "10638:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10638:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10615:150:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30783139",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10804:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "0x19"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	}
																],
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10799:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes1_$",
																	"typeString": "type(bytes1)"
																},
																"typeName": "byte"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10799:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30783031",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10816:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "0x01"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10811:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes1_$",
																	"typeString": "type(bytes1)"
																},
																"typeName": "byte"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10811:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														{
															"argumentTypes": null,
															"id": 692,
															"name": "domainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "10823:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 693,
															"name": "transferHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "10840:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															},
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 684,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "10782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10782:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10782:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 667,
												"id": 695,
												"nodeType": "Return",
												"src": "10775:78:0"
											}
										]
									},
									"documentation": null,
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateTransferHashData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10430:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10453:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 656,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "10473:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"name": "paymentToken",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10496:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"name": "payment",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 660,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "10526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10550:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 662,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10550:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10398:170:0"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10591:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10590:14:0"
									},
									"scope": 1285,
									"src": "10365:495:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "11096:136:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 718,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "11161:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 719,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "11167:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 720,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "11174:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 721,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "11178:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 722,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "11186:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 723,
																	"name": "payment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "11200:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 724,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "11209:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 717,
																"name": "generateTransferHashData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "11123:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_address_$_t_uint96_$_t_uint16_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (address,address,address,uint96,address,uint96,uint16) view returns (bytes memory)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11123:101:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "11113:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11113:112:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 715,
												"id": 727,
												"nodeType": "Return",
												"src": "11106:119:0"
											}
										]
									},
									"documentation": null,
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateTransferHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "10905:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "10927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "10950:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "10970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 704,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "10970:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "paymentToken",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "10993:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "payment",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "11023:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 708,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11023:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "11047:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 710,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10895:170:0"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "11087:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11086:9:0"
									},
									"scope": 1285,
									"src": "10866:366:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "11368:314:0",
										"statements": [
											{
												"assignments": [
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 767,
														"src": "11378:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 740,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11378:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 743,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "11412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 744,
															"name": "transferHashData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "11423:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "recoverSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "11395:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (bytes memory,bytes memory) view returns (address)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11395:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11378:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 748,
																	"name": "expectedDelegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "11471:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 749,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "11491:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11471:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 751,
																				"name": "delegates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 128,
																				"src": "11501:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																					"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																				}
																			},
																			"id": 755,
																			"indexExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 753,
																						"name": "safe",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 737,
																						"src": "11519:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_GnosisSafe_$89",
																							"typeString": "contract GnosisSafe"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_GnosisSafe_$89",
																							"typeString": "contract GnosisSafe"
																						}
																					],
																					"id": 752,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11511:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11511:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11501:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																				"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
																			}
																		},
																		"id": 759,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 757,
																					"name": "signer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 741,
																					"src": "11533:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11526:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint48_$",
																					"typeString": "type(uint48)"
																				},
																				"typeName": "uint48"
																			},
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11526:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11501:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Delegate_$141_storage",
																			"typeString": "struct AllowanceModule.Delegate storage ref"
																		}
																	},
																	"id": 760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 136,
																	"src": "11501:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 761,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "11554:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11501:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11471:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "657870656374656444656c6567617465203d3d207369676e65722026262064656c6567617465735b616464726573732873616665295d5b75696e743438287369676e6572295d2e64656c6567617465203d3d207369676e6572",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11574:91:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_967a409fd152609403ac7b3349d7ced54d05d2ee8664844edf017668d343240b",
																"typeString": "literal_string \"expectedDelegate == signer && delegates[address(safe)][uint48(signer)].delegate == signer\""
															},
															"value": "expectedDelegate == signer && delegates[address(safe)][uint48(signer)].delegate == signer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_967a409fd152609403ac7b3349d7ced54d05d2ee8664844edf017668d343240b",
																"typeString": "literal_string \"expectedDelegate == signer && delegates[address(safe)][uint48(signer)].delegate == signer\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1303,
															1304
														],
														"referencedDeclaration": 1304,
														"src": "11450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11450:225:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "11450:225:0"
											}
										]
									},
									"documentation": null,
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSignature",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"name": "expectedDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "11262:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "11288:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11288:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"name": "transferHashData",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "11312:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11312:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "11343:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafe_$89",
													"typeString": "contract GnosisSafe"
												},
												"typeName": {
													"contractScope": null,
													"id": 736,
													"name": "GnosisSafe",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 89,
													"src": "11343:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafe_$89",
														"typeString": "contract GnosisSafe"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11261:98:0"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11368:0:0"
									},
									"scope": 1285,
									"src": "11238:444:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "11806:1622:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 777,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11887:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11887:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11907:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11887:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 784,
												"nodeType": "IfStatement",
												"src": "11883:44:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 781,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "11917:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11917:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"functionReturnParameters": 776,
													"id": 783,
													"nodeType": "Return",
													"src": "11910:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 786,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "12012:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12012:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3635",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12032:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "12012:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7369676e6174757265732e6c656e677468203e3d203635",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12036:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72679ed14e52badd3e78d9f29492b52cfb58b223fd9e00d5dca80ba1c385a7f7",
																"typeString": "literal_string \"signatures.length >= 65\""
															},
															"value": "signatures.length >= 65"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72679ed14e52badd3e78d9f29492b52cfb58b223fd9e00d5dca80ba1c385a7f7",
																"typeString": "literal_string \"signatures.length >= 65\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1303,
															1304
														],
														"referencedDeclaration": 1304,
														"src": "12004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12004:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "12004:58:0"
											},
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 878,
														"src": "12072:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 793,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "12072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12072:7:0"
											},
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 878,
														"src": "12089:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 796,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "12089:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12089:9:0"
											},
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 878,
														"src": "12108:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 799,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "12108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12108:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 802,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "12128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"argumentTypes": null,
																"id": 803,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "12131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"argumentTypes": null,
																"id": 804,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "12134:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"id": 805,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "12127:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
															"typeString": "tuple(uint8,bytes32,bytes32)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 807,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "12154:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12165:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 806,
															"name": "signatureSplit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "12139:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8,bytes32,bytes32)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12139:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
															"typeString": "tuple(uint8,bytes32,bytes32)"
														}
													},
													"src": "12127:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "12127:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 812,
														"name": "v",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "12234:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12239:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 841,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "12962:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3330",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12966:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "12962:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 875,
														"nodeType": "Block",
														"src": "13273:149:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 864,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "13356:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 867,
																						"name": "transferHashData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 772,
																						"src": "13384:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 866,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1294,
																					"src": "13374:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13374:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 869,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 794,
																				"src": "13403:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 870,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "13406:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 871,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "13409:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 865,
																			"name": "ecrecover",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "13364:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																				"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13364:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "13356:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 874,
																"nodeType": "ExpressionStatement",
																"src": "13356:55:0"
															}
														]
													},
													"id": 876,
													"nodeType": "IfStatement",
													"src": "12958:464:0",
													"trueBody": {
														"id": 863,
														"nodeType": "Block",
														"src": "12970:297:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 844,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "13132:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																								"id": 849,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13177:34:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																									"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
																								},
																								"value": "\u0019Ethereum Signed Message:\n32"
																							},
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 851,
																										"name": "transferHashData",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 772,
																										"src": "13223:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									],
																									"id": 850,
																									"name": "keccak256",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1294,
																									"src": "13213:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																										"typeString": "function (bytes memory) pure returns (bytes32)"
																									}
																								},
																								"id": 852,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13213:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																									"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 847,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1287,
																								"src": "13160:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 848,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "13160:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 853,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13160:81:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 846,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1294,
																					"src": "13150:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13150:92:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 855,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "13244:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "34",
																					"id": 856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13248:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "13244:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 858,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "13251:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 859,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "13254:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 845,
																			"name": "ecrecover",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "13140:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																				"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																			}
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13140:116:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "13132:124:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 862,
																"nodeType": "ExpressionStatement",
																"src": "13132:124:0"
															}
														]
													}
												},
												"id": 877,
												"nodeType": "IfStatement",
												"src": "12230:1192:0",
												"trueBody": {
													"id": 840,
													"nodeType": "Block",
													"src": "12242:710:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "12351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 818,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 797,
																					"src": "12375:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12367:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": "uint256"
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12367:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12359:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12359:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "12351:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "12351:27:0"
														},
														{
															"assignments": [
																824
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 824,
																	"name": "contractSignature",
																	"nodeType": "VariableDeclaration",
																	"scope": 840,
																	"src": "12392:30:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 823,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "12392:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 825,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "12392:30:0"
														},
														{
															"externalReferences": [
																{
																	"contractSignature": {
																		"declaration": 824,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "12666:17:0",
																		"valueSize": 1
																	}
																},
																{
																	"signature": {
																		"declaration": 770,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "12695:9:0",
																		"valueSize": 1
																	}
																},
																{
																	"s": {
																		"declaration": 800,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "12706:1:0",
																		"valueSize": 1
																	}
																}
															],
															"id": 826,
															"nodeType": "InlineAssembly",
															"operations": "{\n    contractSignature := add(add(signature, s), 0x20)\n}",
															"src": "12504:225:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 832,
																					"name": "transferHashData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 772,
																					"src": "12811:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 833,
																					"name": "contractSignature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "12829:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 829,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 775,
																							"src": "12787:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 828,
																						"name": "ISignatureValidator",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 75,
																						"src": "12767:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ISignatureValidator_$75_$",
																							"typeString": "type(contract ISignatureValidator)"
																						}
																					},
																					"id": 830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12767:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ISignatureValidator_$75",
																						"typeString": "contract ISignatureValidator"
																					}
																				},
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "isValidSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 74,
																				"src": "12767:43:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (bytes memory,bytes memory) view external returns (bytes4)"
																				}
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12767:80:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 835,
																			"name": "EIP1271_MAGIC_VALUE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "12851:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "12767:103:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "436f756c64206e6f742076616c6964617465204549502d31323731207369676e6174757265",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12888:39:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_28b765f195c3cd598e06ecb11ef8b4894757ebf4babad4a035bcaf2f5d0e18e5",
																			"typeString": "literal_string \"Could not validate EIP-1271 signature\""
																		},
																		"value": "Could not validate EIP-1271 signature"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_28b765f195c3cd598e06ecb11ef8b4894757ebf4babad4a035bcaf2f5d0e18e5",
																			"typeString": "literal_string \"Could not validate EIP-1271 signature\""
																		}
																	],
																	"id": 827,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1303,
																		1304
																	],
																	"referencedDeclaration": 1304,
																	"src": "12742:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12742:199:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 839,
															"nodeType": "ExpressionStatement",
															"src": "12742:199:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSignature",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "11714:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"name": "transferHashData",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "11738:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11738:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11713:55:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "11791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11790:15:0"
									},
									"scope": 1285,
									"src": "11688:1740:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "13527:476:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 890,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "13541:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13558:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13550:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "13541:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 931,
													"nodeType": "Block",
													"src": "13762:235:0",
													"statements": [
														{
															"assignments": [
																910
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 910,
																	"name": "data",
																	"nodeType": "VariableDeclaration",
																	"scope": 931,
																	"src": "13776:17:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 909,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "13776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 917,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13820:27:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																			"typeString": "literal_string \"transfer(address,uint256)\""
																		},
																		"value": "transfer(address,uint256)"
																	},
																	{
																		"argumentTypes": null,
																		"id": 914,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "13849:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 915,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "13853:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																			"typeString": "literal_string \"transfer(address,uint256)\""
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 911,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "13796:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodeWithSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13796:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (bytes memory)"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13796:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13776:84:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 921,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "13913:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13920:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"argumentTypes": null,
																				"id": 923,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "13923:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 924,
																						"name": "Enum",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5,
																						"src": "13929:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Enum_$5_$",
																							"typeString": "type(contract Enum)"
																						}
																					},
																					"id": 925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Operation",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4,
																					"src": "13929:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_Operation_$4_$",
																						"typeString": "type(enum Enum.Operation)"
																					}
																				},
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "Call",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "13929:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_Operation_$4",
																					"typeString": "enum Enum.Operation"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_enum$_Operation_$4",
																					"typeString": "enum Enum.Operation"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 919,
																				"name": "safe",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "13882:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GnosisSafe_$89",
																					"typeString": "contract GnosisSafe"
																				}
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "execTransactionFromModule",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 88,
																			"src": "13882:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4_$returns$_t_bool_$",
																				"typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13882:67:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "436f756c64206e6f74206578656375746520746f6b656e207472616e73666572",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13951:34:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_00c0b742664159361be6aebbe2af44c4ae7eb95e13260265d1e1cf75d2593709",
																			"typeString": "literal_string \"Could not execute token transfer\""
																		},
																		"value": "Could not execute token transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_00c0b742664159361be6aebbe2af44c4ae7eb95e13260265d1e1cf75d2593709",
																			"typeString": "literal_string \"Could not execute token transfer\""
																		}
																	],
																	"id": 918,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1303,
																		1304
																	],
																	"referencedDeclaration": 1304,
																	"src": "13874:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13874:112:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 930,
															"nodeType": "ExpressionStatement",
															"src": "13874:112:0"
														}
													]
												},
												"id": 932,
												"nodeType": "IfStatement",
												"src": "13537:460:0",
												"trueBody": {
													"id": 908,
													"nodeType": "Block",
													"src": "13562:194:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 898,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "13672:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 899,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "13676:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "",
																				"id": 900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13684:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				},
																				"value": ""
																			},
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 901,
																						"name": "Enum",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5,
																						"src": "13688:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Enum_$5_$",
																							"typeString": "type(contract Enum)"
																						}
																					},
																					"id": 902,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Operation",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4,
																					"src": "13688:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_Operation_$4_$",
																						"typeString": "type(enum Enum.Operation)"
																					}
																				},
																				"id": 903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "Call",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "13688:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_Operation_$4",
																					"typeString": "enum Enum.Operation"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				},
																				{
																					"typeIdentifier": "t_enum$_Operation_$4",
																					"typeString": "enum Enum.Operation"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 896,
																				"name": "safe",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "13641:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GnosisSafe_$89",
																					"typeString": "contract GnosisSafe"
																				}
																			},
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "execTransactionFromModule",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 88,
																			"src": "13641:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$4_$returns$_t_bool_$",
																				"typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13641:67:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "436f756c64206e6f742065786563757465206574686572207472616e73666572",
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13710:34:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2fae53cac084168982e43888b6e5eff084959ab65d511777b56b4cbb265d2586",
																			"typeString": "literal_string \"Could not execute ether transfer\""
																		},
																		"value": "Could not execute ether transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2fae53cac084168982e43888b6e5eff084959ab65d511777b56b4cbb265d2586",
																			"typeString": "literal_string \"Could not execute ether transfer\""
																		}
																	],
																	"id": 895,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1303,
																		1304
																	],
																	"referencedDeclaration": 1304,
																	"src": "13633:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13633:112:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "13633:112:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "13452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GnosisSafe_$89",
													"typeString": "contract GnosisSafe"
												},
												"typeName": {
													"contractScope": null,
													"id": 880,
													"name": "GnosisSafe",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 89,
													"src": "13452:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GnosisSafe_$89",
														"typeString": "contract GnosisSafe"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "13469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "13484:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13484:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "13504:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 886,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13504:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13451:67:0"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13527:0:0"
									},
									"scope": 1285,
									"src": "13434:569:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "14099:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 944,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "14116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																"typeString": "mapping(address => mapping(address => address[] storage ref))"
															}
														},
														"id": 946,
														"indexExpression": {
															"argumentTypes": null,
															"id": 945,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "14123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14116:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 948,
													"indexExpression": {
														"argumentTypes": null,
														"id": 947,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "14129:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14116:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 943,
												"id": 949,
												"nodeType": "Return",
												"src": "14109:29:0"
											}
										]
									},
									"documentation": null,
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "14028:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "14042:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14027:32:0"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "14081:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 940,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14081:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 941,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14081:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14080:18:0"
									},
									"scope": 1285,
									"src": "14009:136:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "14265:313:0",
										"statements": [
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"name": "allowance",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "14275:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
															"typeString": "struct AllowanceModule.Allowance"
														},
														"typeName": {
															"contractScope": null,
															"id": 964,
															"name": "Allowance",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 152,
															"src": "14275:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
																"typeString": "struct AllowanceModule.Allowance"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 971,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 967,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "14317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 968,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14323:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 969,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "14333:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 966,
														"name": "getAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "14304:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_struct$_Allowance_$152_memory_ptr_$",
															"typeString": "function (address,address,address) view returns (struct AllowanceModule.Allowance memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14304:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
														"typeString": "struct AllowanceModule.Allowance memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14275:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 973,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "14378:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 143,
																	"src": "14378:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																],
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint256"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14370:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 977,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "14417:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "spent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "14417:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																],
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14409:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14409:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 981,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "14455:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "resetTimeMin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "14455:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14447:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14447:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 985,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "14500:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastResetMin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "14500:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																],
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14492:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14492:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 989,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "14545:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 151,
																	"src": "14545:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14537:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14537:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 992,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14356:215:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
														"typeString": "uint256[5] memory"
													}
												},
												"functionReturnParameters": 963,
												"id": 993,
												"nodeType": "Return",
												"src": "14349:222:0"
											}
										]
									},
									"documentation": null,
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "14178:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "14192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "14210:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14177:47:0"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "14246:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 959,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14254:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "14246:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14245:19:0"
									},
									"scope": 1285,
									"src": "14151:427:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "14630:517:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1001,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "14648:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14668:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14660:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14660:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14648:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c69642064656c65676174652061646472657373",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14672:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2748b75fa8e9228d9f46d849def917a80513930a212cbb86b833e29bb53a5909",
																"typeString": "literal_string \"Invalid delegate address\""
															},
															"value": "Invalid delegate address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2748b75fa8e9228d9f46d849def917a80513930a212cbb86b833e29bb53a5909",
																"typeString": "literal_string \"Invalid delegate address\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1303,
															1304
														],
														"referencedDeclaration": 1304,
														"src": "14640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14640:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "14640:59:0"
											},
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "14709:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 1009,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1014,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1012,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "14731:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14724:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": "uint48"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14724:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14709:31:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1015,
																	"name": "delegates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "14803:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																		"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																	}
																},
																"id": 1018,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1016,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1300,
																		"src": "14813:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14813:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14803:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																	"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
																}
															},
															"id": 1020,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1019,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "14825:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14803:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_storage",
																"typeString": "struct AllowanceModule.Delegate storage ref"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 136,
														"src": "14803:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14852:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14844:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "14803:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "14800:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 999,
													"id": 1026,
													"nodeType": "Return",
													"src": "14856:7:0"
												}
											},
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"name": "startIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "14872:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 1028,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1030,
														"name": "delegatesStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "14892:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint48_$",
															"typeString": "mapping(address => uint48)"
														}
													},
													"id": 1033,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1031,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "14907:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14907:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14892:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14872:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1035,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "14928:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																	"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1036,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "14938:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14938:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14928:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1038,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "14950:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14928:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Delegate_$141_storage",
															"typeString": "struct AllowanceModule.Delegate storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1042,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "14968:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14978:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"id": 1044,
																"name": "startIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "14981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															],
															"id": 1041,
															"name": "Delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "14959:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Delegate_$141_storage_ptr_$",
																"typeString": "type(struct AllowanceModule.Delegate storage pointer)"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14959:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Delegate_$141_memory",
															"typeString": "struct AllowanceModule.Delegate memory"
														}
													},
													"src": "14928:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Delegate_$141_storage",
														"typeString": "struct AllowanceModule.Delegate storage ref"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "14928:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1048,
																	"name": "delegates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "15002:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																		"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																	}
																},
																"id": 1052,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1049,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1300,
																		"src": "15012:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15012:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15002:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																	"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
																}
															},
															"id": 1053,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1051,
																"name": "startIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "15024:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15002:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_storage",
																"typeString": "struct AllowanceModule.Delegate storage ref"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "prev",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "15002:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1055,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "15043:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "15002:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "15002:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1058,
															"name": "delegatesStart",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "15058:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint48_$",
																"typeString": "mapping(address => uint48)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1059,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "15073:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15073:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15058:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1062,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "15087:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "15058:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "15058:34:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "15119:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15119:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1068,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "15131:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1065,
														"name": "AddDelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "15107:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15107:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "15102:38:0"
											}
										]
									},
									"documentation": null,
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDelegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "14605:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14604:18:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14630:0:0"
									},
									"scope": 1285,
									"src": "14584:563:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "15202:918:0",
										"statements": [
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"name": "current",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "15212:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
															"typeString": "struct AllowanceModule.Delegate"
														},
														"typeName": {
															"contractScope": null,
															"id": 1077,
															"name": "Delegate",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 141,
															"src": "15212:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_storage_ptr",
																"typeString": "struct AllowanceModule.Delegate"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1079,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "15238:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
															}
														},
														"id": 1082,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1080,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "15248:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15248:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15238:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
															"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
														}
													},
													"id": 1086,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1084,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "15267:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint48_$",
																"typeString": "type(uint48)"
															},
															"typeName": "uint48"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15260:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15238:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Delegate_$141_storage",
														"typeString": "struct AllowanceModule.Delegate storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15212:65:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1088,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "15340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																"typeString": "struct AllowanceModule.Delegate memory"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 136,
														"src": "15340:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15368:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15360:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15340:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "15337:42:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 1076,
													"id": 1094,
													"nodeType": "Return",
													"src": "15372:7:0"
												}
											},
											{
												"assignments": [
													1099
												],
												"declarations": [
													{
														"constant": false,
														"id": 1099,
														"name": "delegateTokens",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "15388:32:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15388:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1098,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "15388:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1100,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "15423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																"typeString": "mapping(address => mapping(address => address[] storage ref))"
															}
														},
														"id": 1103,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "15430:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15430:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15423:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1105,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1104,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "15442:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15423:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15388:63:0"
											},
											{
												"body": {
													"id": 1165,
													"nodeType": "Block",
													"src": "15513:420:0",
													"statements": [
														{
															"assignments": [
																1119
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1119,
																	"name": "token",
																	"nodeType": "VariableDeclaration",
																	"scope": 1165,
																	"src": "15527:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15527:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1123,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1120,
																	"name": "delegateTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "15543:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																		"typeString": "address[] storage pointer"
																	}
																},
																"id": 1122,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1121,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "15558:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15543:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15527:33:0"
														},
														{
															"assignments": [
																1125
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1125,
																	"name": "allowance",
																	"nodeType": "VariableDeclaration",
																	"scope": 1165,
																	"src": "15636:26:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																		"typeString": "struct AllowanceModule.Allowance"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1124,
																		"name": "Allowance",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 152,
																		"src": "15636:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_storage_ptr",
																			"typeString": "struct AllowanceModule.Allowance"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1132,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1127,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "15678:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "15678:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1129,
																		"name": "delegate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "15690:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1130,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "15700:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1126,
																	"name": "getAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "15665:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_struct$_Allowance_$152_memory_ptr_$",
																		"typeString": "function (address,address,address) view returns (struct AllowanceModule.Allowance memory)"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15665:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																	"typeString": "struct AllowanceModule.Allowance memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15636:70:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1133,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "15720:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 143,
																	"src": "15720:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15739:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15720:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 1138,
															"nodeType": "ExpressionStatement",
															"src": "15720:20:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1139,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "15754:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "spent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "15754:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15772:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15754:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "15754:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1145,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "15787:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "resetTimeMin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "15787:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15812:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15787:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 1150,
															"nodeType": "ExpressionStatement",
															"src": "15787:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1151,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "15827:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastResetMin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "15827:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15852:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15827:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1156,
															"nodeType": "ExpressionStatement",
															"src": "15827:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1158,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "15883:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "15883:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1160,
																		"name": "delegate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "15895:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1161,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "15905:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1162,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "15912:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_Allowance_$152_memory_ptr",
																			"typeString": "struct AllowanceModule.Allowance memory"
																		}
																	],
																	"id": 1157,
																	"name": "updateAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "15867:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_struct$_Allowance_$152_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,struct AllowanceModule.Allowance memory)"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15867:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1164,
															"nodeType": "ExpressionStatement",
															"src": "15867:55:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1111,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "15481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1112,
															"name": "delegateTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "15485:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15485:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15481:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"initializationExpression": {
													"assignments": [
														1108
													],
													"declarations": [
														{
															"constant": false,
															"id": 1108,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1166,
															"src": "15466:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1107,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1110,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15478:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15466:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15508:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1115,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "15508:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1117,
													"nodeType": "ExpressionStatement",
													"src": "15508:3:0"
												},
												"nodeType": "ForStatement",
												"src": "15461:472:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1167,
																	"name": "delegates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "15942:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																		"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																	}
																},
																"id": 1172,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1168,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1300,
																		"src": "15952:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15952:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15942:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																	"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
																}
															},
															"id": 1173,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1170,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "15964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																		"typeString": "struct AllowanceModule.Delegate memory"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "prev",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "15964:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15942:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_storage",
																"typeString": "struct AllowanceModule.Delegate storage ref"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "next",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "15942:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1175,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "15985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																"typeString": "struct AllowanceModule.Delegate memory"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "next",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "15985:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "15942:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "15942:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1179,
																	"name": "delegates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "16007:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																		"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																	}
																},
																"id": 1184,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1180,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1300,
																		"src": "16017:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16017:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16007:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																	"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
																}
															},
															"id": 1185,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1182,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "16029:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																		"typeString": "struct AllowanceModule.Delegate memory"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "next",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 140,
																"src": "16029:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16007:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_storage",
																"typeString": "struct AllowanceModule.Delegate storage ref"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "prev",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "16007:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1187,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "16050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																"typeString": "struct AllowanceModule.Delegate memory"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "prev",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "16050:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "16007:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "16007:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1192,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "16092:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16092:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1194,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "16104:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1191,
														"name": "RemoveDelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "16077:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16077:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "EmitStatement",
												"src": "16072:41:0"
											}
										]
									},
									"documentation": null,
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeDelegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "15177:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15176:18:0"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15202:0:0"
									},
									"scope": 1285,
									"src": "15153:967:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "16252:563:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1212,
														"name": "results",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1216,
																"name": "pageSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "16286:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "16272:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1213,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16276:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1214,
																"length": null,
																"nodeType": "ArrayTypeName",
																"src": "16276:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16272:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory",
															"typeString": "address[] memory"
														}
													},
													"src": "16262:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "16262:33:0"
											},
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "16305:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1220,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16305:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16315:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16305:11:0"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"name": "initialIndex",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "16326:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 1224,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "16326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1235,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1226,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "16349:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16358:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16349:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1229,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16348:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1231,
															"name": "delegatesStart",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "16371:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint48_$",
																"typeString": "mapping(address => uint48)"
															}
														},
														"id": 1233,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1232,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "16386:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16371:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "16348:43:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1230,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "16363:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16326:65:0"
											},
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"name": "current",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "16401:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
															"typeString": "struct AllowanceModule.Delegate"
														},
														"typeName": {
															"contractScope": null,
															"id": 1236,
															"name": "Delegate",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 141,
															"src": "16401:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Delegate_$141_storage_ptr",
																"typeString": "struct AllowanceModule.Delegate"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1238,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "16427:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
															}
														},
														"id": 1240,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1239,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "16437:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16427:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
															"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
														}
													},
													"id": 1242,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1241,
														"name": "initialIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "16443:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16427:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Delegate_$141_storage",
														"typeString": "struct AllowanceModule.Delegate storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16401:55:0"
											},
											{
												"body": {
													"id": 1273,
													"nodeType": "Block",
													"src": "16520:124:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1254,
																		"name": "results",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "16534:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1256,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1255,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "16542:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16534:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1257,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "16547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																			"typeString": "struct AllowanceModule.Delegate memory"
																		}
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 136,
																	"src": "16547:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16534:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1260,
															"nodeType": "ExpressionStatement",
															"src": "16534:29:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "16577:3:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1261,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "16577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "16577:3:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1264,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "16594:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																		"typeString": "struct AllowanceModule.Delegate memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1265,
																			"name": "delegates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 128,
																			"src": "16604:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$_$",
																				"typeString": "mapping(address => mapping(uint48 => struct AllowanceModule.Delegate storage ref))"
																			}
																		},
																		"id": 1267,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1266,
																			"name": "safe",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "16614:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16604:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint48_$_t_struct$_Delegate_$141_storage_$",
																			"typeString": "mapping(uint48 => struct AllowanceModule.Delegate storage ref)"
																		}
																	},
																	"id": 1270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1268,
																			"name": "current",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "16620:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																				"typeString": "struct AllowanceModule.Delegate memory"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "next",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "16620:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16604:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Delegate_$141_storage",
																		"typeString": "struct AllowanceModule.Delegate storage ref"
																	}
																},
																"src": "16594:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																	"typeString": "struct AllowanceModule.Delegate memory"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "16594:39:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1244,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "16472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																	"typeString": "struct AllowanceModule.Delegate memory"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "delegate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 136,
															"src": "16472:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16500:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16492:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16492:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "16472:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1250,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "16506:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1251,
															"name": "pageSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "16510:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16506:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16472:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "WhileStatement",
												"src": "16466:178:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1275,
														"name": "next",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "16653:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1277,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "16667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Delegate_$141_memory_ptr",
																		"typeString": "struct AllowanceModule.Delegate memory"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "delegate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 136,
																"src": "16667:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint48_$",
																"typeString": "type(uint48)"
															},
															"typeName": "uint48"
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16660:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "16653:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "16653:31:0"
											},
											{
												"externalReferences": [
													{
														"results": {
															"declaration": 1208,
															"isOffset": false,
															"isSlot": false,
															"src": "16788:7:0",
															"valueSize": 1
														}
													},
													{
														"i": {
															"declaration": 1221,
															"isOffset": false,
															"isSlot": false,
															"src": "16797:1:0",
															"valueSize": 1
														}
													}
												],
												"id": 1282,
												"nodeType": "InlineAssembly",
												"operations": "{ mstore(results, i) }",
												"src": "16758:51:0"
											}
										]
									},
									"documentation": null,
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"name": "safe",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "16148:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"name": "start",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "16162:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1201,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "16162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"name": "pageSize",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "16176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16176:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16147:44:0"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"name": "results",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "16213:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1206,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1207,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "16239:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1209,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "16239:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16212:39:0"
									},
									"scope": 1285,
									"src": "16126:689:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1286,
							"src": "3663:13154:0"
						}
					],
					"src": "0:16817:0"
				},
				"id": 0
			}
		}
	}
}