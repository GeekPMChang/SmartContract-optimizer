{
	"compiler": {
		"version": "0.5.10+commit.5a6ea5b1"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "_data",
						"type": "bytes"
					},
					{
						"name": "_signature",
						"type": "bytes"
					}
				],
				"name": "isValidSignature",
				"outputs": [
					{
						"name": "",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"isValidSignature(bytes,bytes)": {
					"details": "Should return whether the signature provided is valid for the provided data",
					"params": {
						"_data": "Arbitrary length data signed on the behalf of address(this)",
						"_signature": "Signature byte array associated with _data    * MUST return the bytes4 magic value 0x20c13b0b when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
					}
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"input/AllowanceModule.sol": "ISignatureValidator"
		},
		"evmVersion": "petersburg",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"input/AllowanceModule.sol": {
			"keccak256": "0xeee537f1047709f0539aae239cc1ae1bab8865d644d480c26698cdd2051c9020",
			"urls": [
				"bzzr://ad2236eea0e82a7b47f8d0e76a615b441390417ab53acf9de0970f92076689ea",
				"dweb:/ipfs/QmPa1VBsL7jm7HJvC8jidzKfoKrwYjaX6t8bj26DA6657Q"
			]
		}
	},
	"version": 1
}